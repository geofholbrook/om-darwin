; OM File Header - Saved 2015/06/22 10:18:57
; (6.1 :patc (om-make-point 24 24) (om-make-point 1564 642) (om-make-point 683 789) "" 183 0 nil "2015/06/22 10:18:57")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "simple evaluation" (quote ((let ((box (om-load-boxcall (quote abstraction) "dupli penalty" (om-load-lisp-abspatch "dupli penalty" 6.1 ";;; Edit a valid LAMBDA EXPRESSION for \"dupli penalty\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (lmidic)$  (let ((pcs (mapcar #'(lambda (midic)$                         (mod (/ midic 100) 12))$                     lmidic)))$    (if (< (length (remove-duplicates pcs))$         (length pcs))$      1000$    0)))") (quote ((om-load-inputfun (quote input-funbox) "" "LMIDIC" nil))) (om-make-point 93 227) nil nil nil "dupli penalty"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 78 411) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "lmidic" 0 (om-make-point 68 30) "" "lmidic" (list 7100 6500 7000 5800) nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 0 0 nil 0) (0 0 1 0 nil 0))) nil 6.1))