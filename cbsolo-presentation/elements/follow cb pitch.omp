; OM File Header - Saved 2015/06/18 19:12:26
; (6.1 :patc (om-make-point 226 60) (om-make-point 928 924) (om-make-point 1091 494) "" 183 0 "2015/06/12 10:32:52" "2015/06/12 12:49:45")
; End File Header
(in-package :om)(load-lib-for (quote ("om-darwin")))(setf *om-current-persistent* (om-load-patch1 "follow cb pitch" (quote ((let ((box (om-load-editor-box1 "CHORD" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 694 48) (om-make-point 100 70) (let ((thechord (make-instance (quote chord) :lmidic (quote (2800 5700)) :ldur (quote (1000 1000)) :lvel (quote (100 100)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 0 0 (om-make-point 777 192) (om-make-point 535 328) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote ggff) 24 2)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 590 57) (om-make-point 27 30) 8 "8" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MAKE-GRID-MELODY" (quote make-grid-melody) (quote ((om-load-inputfun (quote input-funbox) "" "NUM-NOTES" 8) (om-load-inputfun (quote input-funbox) "" "RANGE" (list 6000 7200)) (om-load-inputfun (quote input-funbox) "" "NOTE-VALUE" 1/16) (om-load-inputfun (quote input-funbox) "" "LEN-RANGE" (list 1 4)))) (om-make-point 675 195) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((1 0 2 0 nil 0))) nil 6.1))
