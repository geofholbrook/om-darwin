; OM File Header - Saved 2015/06/09 16:58:26
; (6.050102 :patc (om-make-point 172 10) (om-make-point 50 50) (om-make-point 666 621) "" 183 0 nil nil)
; End File Header
(in-package :om)(load-lib-for (quote ("om-geof" "om4csound")))(setf *om-current-persistent* (om-load-patch1 "fof-test" (quote ((om-load-boxcall (quote genfun) "A_FOF" (quote om-auro::a_fof) (quote ((om-load-inputfun (quote input-funbox) "" "XAMP" 0) (om-load-inputfun (quote input-funbox) "" "XFUND" 0) (om-load-inputfun (quote input-funbox) "" "XFORM" 0) (om-load-inputfun (quote input-funbox) "" "KOCT" 0) (om-load-inputfun (quote input-funbox) "" "KBAND" 0) (om-load-inputfun (quote input-funbox) "" "KRIS" 0) (om-load-inputfun (quote input-funbox) "" "KDUR" 0) (om-load-inputfun (quote input-funbox) "" "KDEC" 0) (om-load-inputfun (quote input-funbox) "" "IOLAPS" 0) (om-load-inputfun (quote input-funbox) "" "IFNA" 0) (om-load-inputfun (quote input-funbox) "" "IFNB" 0) (om-load-inputfun (quote input-funbox) "" "ITOTDUR" 0))) (om-make-point 87 156) nil nil nil nil 1) (om-load-editor-box1 "SOUND" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing" "tracknum" 1) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "markers" nil))) (om-make-point 129 381) (om-make-point 80 50) (let ((newobj nil)) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "") (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :libaudio) 1 nil 1000 0 (om-make-point 370 280) (om-make-point 400 20) 0 1 (quote t) nil 0)) nil nil nil nil) (om-load-boxcall (quote genfun) "EASY-CSD" (quote easy-csd) (quote ((om-load-inputfun (quote input-funbox) "instrument : an opcode or a list of opcodes, or a lambda function with at least one input (p3)" "OPCODES" nil))) (om-make-point 105 295) nil nil nil nil 1))) (quote ((2 0 1 0 nil 0))) nil 6.050102))
