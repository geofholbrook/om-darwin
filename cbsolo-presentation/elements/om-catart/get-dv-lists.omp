; OM File Header - Saved 2015/06/19 12:27:18
; (6.0901 :patc (om-make-point 10 60) (om-make-point 50 50) (om-make-point 719 617) "" 183 0 nil nil)
; End File Header
; External resources 
; (list (list (quote :abstraction) "#P\"lib/get-descriptor-value.oml\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "get-dv-list" (quote ((let ((box (om-load-boxcall (quote lispfun) "MAPCAR" (quote mapcar) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 186 346) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 244 220) (om-make-point 27 30) 0 "0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "1-" (quote 1-) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 372 234) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LENGTH" (quote length) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil))) (om-make-point 324 153) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "CORPUS-DATA" (quote corpus-data) (quote ((om-load-inputfun (quote input-funbox) "CORPUS" "CORPUS" nil))) (om-make-point 312 91) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ARITHM-SER" (quote arithm-ser) (quote ((om-load-inputfun (quote input-funbox) "begin" "BEGIN" 0) (om-load-inputfun (quote input-funbox) "end " "END" 10) (om-load-inputfun (quote input-funbox) "step" "STEP" 1))) (om-make-point 304 290) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote patch-box) "get-descriptor-value" (quote ("elements" "lib" "get-descriptor-value")) (quote ((om-load-inputfun (quote input-funbox) "" "UNITID" nil) (om-load-inputfun (quote input-funbox) "" "DESC" nil) (om-load-inputfun (quote input-funbox) "" "CORPUS" nil))) (om-make-point 34 220) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "descriptor" 1 (om-make-point 156 43) "" "descriptor" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "corpus" 0 (om-make-point 5 45) "" "corpus" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 129 399) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((6 0 0 0 nil 0) (5 0 0 1 nil 0) (3 0 2 0 nil 0) (4 0 3 0 nil 0) (8 0 4 0 nil 0) (1 0 5 0 nil 0) (2 0 5 1 nil 0) (7 0 6 1 nil 0) (8 0 6 2 nil 0) (0 0 9 0 nil 0))) nil 6.0901))
