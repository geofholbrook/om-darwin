; OM File Header - Saved 2015/06/09 16:34:32
; (6.050102 :patc (om-make-point 10 110) (om-make-point 390 214) (om-make-point 1138 920) "" 183 0 nil "2015/06/08 16:42:06")
; End File Header
; External resources 
; (list (list (quote :abstraction) "get-freq-amp-bw-from-resan-analysis.omp") (list (quote :sdif) "../../../../../../../../../../../../../../Volumes/Data/Geof/tmpfiles/cutting-0625.m5.FIL.sdif") (list (quote :sound) "../../../../../../../../../../../../../../out-files/tiramolla40.aiff"))
(in-package :om)(load-lib-for (quote ("om4csound")))(setf *om-current-persistent* (om-load-patch1 "resan-reson-synth-OLD" (quote ((om-load-boxcall (quote genfun) "CONDITIONAL" (quote conditional) (quote ((om-load-inputfun (quote input-funbox) "test" "TEST" nil) (om-load-inputfun (quote input-funbox) "add-test" "ADDTEST" (quote t)))) (om-make-point 574 169) nil nil nil nil 1) (om-load-boxout "output" 0 (om-make-point 441 828) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil) (om-load-boxcall (quote lispfun) "LENGTH" (quote length) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil))) (om-make-point 376 365) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 268 421) (om-make-point 21 30) 0 "0" nil) (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" 0) (om-load-inputfun (quote input-funbox) "times" "N" 2))) (om-make-point 282 480) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 113 351) (om-make-point 21 30) 1 "1" nil) (om-load-boxcall (quote genfun) "A_NOISE" (quote om-auro::a_noise) (quote ((om-load-inputfun (quote input-funbox) "" "XAMP" 1) (om-load-inputfun (quote input-funbox) "" "KBETA" 0))) (om-make-point 127 414) (om-make-point 52 59) nil nil nil 1) (om-load-boxcall (quote genfun) "SOUND-DUR" (quote sound-dur) (quote ((om-load-inputfun (quote input-funbox) "a sound object or file pathname" "SOUND" nil))) (om-make-point 161 774) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 40 452) (om-make-point 48 30) "outc" "\"outc\"" nil) (om-load-boxcall (quote genfun) "CS_OUT" (quote om-auro::cs_out) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "out type" "OUT_TYPE" "out" (list (list "out" "out") (list "outs" "outs") (list "outs1" "outs1") (list "outs2" "outs2") (list "out32" "out32") (list "outh" "outh") (list "outo" "outo") (list "outq" "outq") (list "outq1" "outq1") (list "outq2" "outq2") (list "outq3" "outq3") (list "outq4" "outq4") (list "outx" "outx") (list "outc" "outc"))) (om-load-inputfun (quote input-funbox) "args" "ARG0" nil))) (om-make-point 151 544) nil nil nil nil 1) (om-load-boxcall (quote genfun) "MAKE-CSD" (quote om-auro::make-csd) (quote ((om-load-inputfun (quote input-funbox) "instrument : an opcode or a list of opcodes, pr a lambda function with at least one input (p3)" "INSTRUMENT" nil) (om-load-inputfun (quote input-funbox) "p2" "P2" (list 0)) (om-load-inputfun (quote input-funbox) "p3" "P3" 10) (om-load-inputfun (quote input-funbox) "p4" "P4" nil) (om-load-inputfun (quote input-funbox) "p5" "P5" nil) (om-load-inputfun (quote input-funbox) "p6" "P6" nil))) (om-make-point 366 617) (om-make-point 121 65) nil nil nil 1) (om-load-boxcall (quote genfun) "CSD->SYNTH" (quote om-auro::csd->synth) (quote ((om-load-inputfun (quote input-funbox) "a list of 'csd' classes" "CSD" nil) (om-load-inputfun (quote input-funbox) "name (a simple string) for .sco .orc and .aiff file (outpath from preferences)" "NAME" "tiramolla") (om-load-inputfunmenu1 (quote input-funmenu) "sample rate" "SR" 44100 (list (list "44100" 44100) (list "48000" 48000) (list "96000" 96000) (list "192000" 192000))))) (om-make-point 435 701) nil nil nil nil 1) (om-load-boxin "input-FIL-sdif" 0 (om-make-point 507 40) "" "input-FIL-sdif" nil nil) (om-load-boxcall (quote lispfun) "OPEN-WS-FOLDER" (quote open-ws-folder) (quote nil) (om-make-point 908 291) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 230 71) (quote "pretty close to resan resynth if you multiply the amplitudes by the frequency.") "" (om-make-point 786 534) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 10000) (om-load-inputfun (quote input-funbox) "number or list" "NUM" 0))) (om-make-point 642 523) (om-make-point 59 35) nil nil nil 1) (om-load-editor-box1 "tiramolla40.aiff" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing" "tracknum" 1) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "markers" nil))) (om-make-point 673 677) (om-make-point 360 145) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:relative "out-files")) :device nil :host nil :name "tiramolla40" :type "aiff") 1))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "tiramolla40.aiff") (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 0 nil (quote t) 1 0 (om-make-point 400 20) (om-make-point 2035 511) 0 1000 nil 1 (quote :libaudio) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) t nil nil t) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 808 363) (om-make-point 28 30) 20 "20" nil) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 10000) (om-load-inputfun (quote input-funbox) "number or list" "NUM" 0))) (om-make-point 733 454) nil nil nil nil 1) (om-load-editor-box1 "cutting-0625.m5.FIL.sdif" (quote sdiffile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil))) (om-make-point 658 27) (om-make-point 196 96) (let ((newobj (load-sdif-file (om-make-pathname :directory (quote (:absolute "Volumes" "Data" "Geof" "tmpfiles")) :device nil :host nil :name "cutting-0625.m5.FIL" :type "sdif")))) newobj) "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 237 410) (om-make-point 1043 496))) nil nil nil t) (om-load-boxcall (quote patch-box) "get-freq-amp-bw-from-resan-analysis" (quote ("elements" "om-resan" "reson-synth" "get-freq-amp-bw-from-resan-analysis")) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil))) (om-make-point 477 235) nil nil "&" nil 4) (om-load-boxcall (quote genfun) "P6" (quote om-auro::p6) (quote nil) (om-make-point 354 110) nil nil nil nil 1) (om-load-boxcall (quote genfun) "P5" (quote om-auro::p5) (quote nil) (om-make-point 54 102) nil nil nil nil 1) (om-load-boxcall (quote genfun) "P4" (quote om-auro::p4) (quote nil) (om-make-point 229 106) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 366 468) (om-make-point 21 30) 5 "5" nil) (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 128 53) (om-make-point 21 30) 0 "0" nil) (om-load-boxcall (quote genfun) "A_MPULSE" (quote om-auro::a_mpulse) (quote ((om-load-inputfun (quote input-funbox) "" "KAMP" 10000) (om-load-inputfun (quote input-funbox) "" "KINTVL" 0))) (om-make-point 62 218) nil nil nil nil 1) (om-load-boxcall (quote genfun) "A_RESON" (quote om-auro::a_reson) (quote ((om-load-inputfun (quote input-funbox) "" "ASIG" 0) (om-load-inputfun (quote input-funbox) "" "KCF" 0) (om-load-inputfun (quote input-funbox) "" "KBW" 5))) (om-make-point 205 310) (om-make-point 128 59) nil nil nil 1))) (quote ((12 0 0 0 nil 0) (19 0 0 1 nil 0) (16 0 1 0 nil 0) (20 1 2 0 nil 0) (3 0 4 0 nil 0) (2 0 4 1 nil 0) (5 0 6 0 nil 0) (16 0 7 0 nil 0) (8 0 9 0 nil 0) (27 0 9 1 nil 0) (9 0 10 0 nil 0) (4 0 10 1 nil 0) (24 0 10 2 nil 0) (20 1 10 3 nil 0) (15 0 10 4 nil 0) (20 3 10 5 nil 0) (10 0 11 0 nil 0) (20 1 15 0 nil 0) (18 0 15 1 nil 0) (11 0 16 0 nil 0) (20 2 18 0 nil 0) (17 0 18 1 nil 0) (0 0 20 0 nil 0) (22 0 26 0 nil 0) (25 0 26 1 nil 0) (26 0 27 0 nil 0) (23 0 27 1 nil 0) (21 0 27 2 nil 0))) nil 6.050102))
