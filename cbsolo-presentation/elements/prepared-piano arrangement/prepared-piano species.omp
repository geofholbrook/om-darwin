; OM File Header - Saved 2015/06/12 12:49:45
; (6.1 :patc (om-make-point 10 10) (om-make-point 307 86) (om-make-point 1346 1190) "" 183 0 "2015/06/09 18:42:15" "2015/06/12 12:49:45")
; End File Header
; External resources 
; (list (list (quote :sound) "#P\"../../out-files/easy-out-386.aiff\""))
(in-package :om)(load-lib-for (quote ("om-geof" "om-darwin")))(setf *om-current-persistent* (om-load-patch1 "prepared-piano species" (quote ((let ((box (om-load-boxcall (quote lispfun) "SET-FITNESS-FUNCTION" (quote om-darwin::set-fitness-function) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil) (om-load-inputfun (quote input-funbox) "FITNESS-FUNCTION" "FITNESS-FUNCTION" nil))) (om-make-point 374 1060) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 898 369) (om-make-point 24 30) (quote t) "t" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "C-MELODIC" (quote c-melodic) (quote ((om-load-inputfun (quote input-funbox) "" "TEST-VALUE" nil) (om-load-inputfun (quote input-funbox) "" "SIGNED?" nil))) (om-make-point 860 399) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 841 336) (om-make-point 95 30) (list -1200 1200) "(-1200 1200)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "C-LIST" (quote c-list) (quote ((om-load-inputfun (quote input-funbox) "" "CS" nil) (om-load-inputfun (quote input-funbox) "" "CS" nil))) (om-make-point 964 488) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 1051 352) (om-make-point 24 30) (quote t) "t" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxwithed1 (quote box-with-win) "arr mc" (quote omloop) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil) (om-load-inputfun (quote input-funbox) "" "db" nil))) (om-make-point 1227 394) (om-make-point 93 59) nil "l" (list (let ((box (om-load-boxcall (quote genfun) "F->MC" (quote f->mc) (quote ((om-load-inputfun (quote input-funbox) "frequency (Hz)" "FREQ" 440))) (om-make-point 314 399) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "db" 1 (om-make-point 344 62) "" "db" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "get-top-freq" (om-load-lisp-abspatch "get-top-freq" 6.1 ";;; Edit a valid LAMBDA EXPRESSION for \"get-top-freq\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (notedef db)$  (* (first (nth (first notedef) db))$     (expt 2 (/ (second notedef) 1200))))") (quote ((om-load-inputfun (quote input-funbox) "" "NOTEDEF" nil) (om-load-inputfun (quote input-funbox) "" "DB" nil))) (om-make-point 218 266) nil (list 403.87749208149035D0) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LISTLOOP" (quote listloop) (quote ((om-load-inputfun (quote input-funbox) "list to iterate" "LIST" nil))) (om-make-point 141 117) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 154 50) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "collect" (quote listing) (quote ((om-load-inputfun (quote input-funbox) "anything" "DATA" nil))) (om-make-point 330 545) nil nil nil nil 3))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-seqbox "finally" (quote finaldo) (quote ((om-load-inputfun (quote input-funbox) "value to return" "VAL" nil))) (om-make-point 378 650) nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-seqbox "eachTime" (quote loopdo) (quote ((om-load-inputfun (quote input-funbox) "operations to do" "OP" nil))) (om-make-point 278 650) nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box)) (quote ((2 0 0 0 nil 0) (3 0 2 0 nil 0) (1 0 2 1 nil 0) (4 0 3 0 nil 0) (0 0 5 0 nil 0) (5 1 6 0 nil 0) (5 0 7 0 nil 0))) 1 "arr mc" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 955 317) (om-make-point 107 30) (list (quote :set) 700 -500) "(:set 700 -500)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "C-MELODIC" (quote c-melodic) (quote ((om-load-inputfun (quote input-funbox) "" "TEST-VALUE" nil) (om-load-inputfun (quote input-funbox) "" "SIGNED?" nil))) (om-make-point 994 399) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "EVALUATE" (quote evaluate) (quote ((om-load-inputfun (quote input-funbox) "" "SPEC" nil) (om-load-inputfun (quote input-funbox) "" "CRITERION" nil))) (om-make-point 790 548) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxwithed1 (quote box-with-win) "arr mc->f" (quote omloop) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil) (om-load-inputfun (quote input-funbox) "" "db" nil))) (om-make-point 1122 392) (om-make-point 78 59) nil "l" (list (let ((box (om-load-boxin "db" 1 (om-make-point 344 62) "" "db" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "get-top-freq" (om-load-lisp-abspatch "get-top-freq" 6.1 ";;; Edit a valid LAMBDA EXPRESSION for \"get-top-freq\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (notedef db)$  (* (first (nth (first notedef) db))$     (expt 2 (/ (second notedef) 1200))))") (quote ((om-load-inputfun (quote input-funbox) "" "NOTEDEF" nil) (om-load-inputfun (quote input-funbox) "" "DB" nil))) (om-make-point 288 243) nil (list 403.87749208149035D0) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (let ((box (om-load-boxcall (quote genfun) "LIST-ELEMENTS" (quote list-elements) (quote ((om-load-inputfun (quote input-funbox) "a list" "LIST" 0))) (om-make-point 106 339) nil nil nil nil 3))) (setf (numouts box) 3) box))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FIRST-N" (quote first-n) (quote ((om-load-inputfun (quote input-funbox) "a list" "LIST" 0) (om-load-inputfun (quote input-funbox) "number of elements" "N" 3))) (om-make-point 94 258) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" 0) (om-load-inputfun (quote input-funbox) "add-input" "add-input" 0) (om-load-inputfun (quote input-funbox) "add-input" "add-input" 0) (om-load-inputfun (quote input-funbox) "add-input" "add-input" 0))) (om-make-point 133 461) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MC->F" (quote mc->f) (quote ((om-load-inputfun (quote input-funbox) "pitch or pitch list (midicents)" "MIDICS?" 6000))) (om-make-point 217 337) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "REGION-PITCH" (quote om-darwin::region-pitch) (quote ((om-load-inputfun (quote input-funbox) "REGION" "REGION" nil))) (om-make-point 177 261) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LISTLOOP" (quote listloop) (quote ((om-load-inputfun (quote input-funbox) "list to iterate" "LIST" nil))) (om-make-point 141 117) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 154 50) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "collect" (quote listing) (quote ((om-load-inputfun (quote input-funbox) "anything" "DATA" nil))) (om-make-point 330 545) nil nil nil nil 3))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-seqbox "finally" (quote finaldo) (quote ((om-load-inputfun (quote input-funbox) "value to return" "VAL" nil))) (om-make-point 378 650) nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-seqbox "eachTime" (quote loopdo) (quote ((om-load-inputfun (quote input-funbox) "operations to do" "OP" nil))) (om-make-point 278 650) nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box)) (quote ((7 0 1 0 nil 0) (0 0 1 1 nil 0) (3 0 2 0 nil 0) (7 0 3 0 nil 0) (2 0 4 0 nil 0) (2 1 4 1 nil 0) (2 2 4 2 nil 0) (6 0 5 0 nil 0) (7 0 6 0 nil 0) (8 0 7 0 nil 0) (1 0 9 0 nil 0) (9 1 10 0 nil 0) (9 0 11 0 nil 0))) 1 "arr mc->f" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "WITH-PHENO" (quote with-pheno) (quote ((om-load-inputfun (quote input-funbox) "" "EVALUATOR" nil) (om-load-inputfun (quote input-funbox) "" "SUBJECT" nil))) (om-make-point 1054 584) (om-make-point 202 59) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 970 51) (om-make-point 48 30) 3600 "3600" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MC->F" (quote mc->f) (quote ((om-load-inputfun (quote input-funbox) "pitch or pitch list (midicents)" "MIDICS?" 6000))) (om-make-point 986 116) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "SAVE-SOUND" (quote save-sound) (quote ((om-load-inputfun (quote input-funbox) "a sound or om-sound-data buffer" "SELF" nil) (om-load-inputfun (quote input-funbox) "output file pathname" "FILENAME" nil))) (om-make-point 814 964) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "close to harmonic overtone" (om-load-patch-abs1 "close to harmonic overtone" (quote ((let ((box (om-load-boxcall (quote abstraction) "get-top-freq" (om-load-lisp-abspatch "get-top-freq" 6.1 ";;; Edit a valid LAMBDA EXPRESSION for \"get-top-freq\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (notedef db)$  (* (first (nth (first notedef) db))$     (expt 2 (/ (second notedef) 1200))))") (quote ((om-load-inputfun (quote input-funbox) "" "NOTEDEF" nil) (om-load-inputfun (quote input-funbox) "" "DB" nil))) (om-make-point 196 179) nil (list 403.87749208149035D0) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 494 332) (om-make-point 27 30) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "/" (quote /) (quote ((om-load-inputfun (quote input-funbox) "NUM" "NUM" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" 2))) (om-make-point 482 399) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "-" (quote -) (quote ((om-load-inputfun (quote input-funbox) "NUM" "NUM" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 422 472) (om-make-point 122 43) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "fond" 2 (om-make-point 435 55) "" "fond" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM//" (quote om//) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 1) (om-load-inputfun (quote input-funbox) "number or list" "NUM" 1))) (om-make-point 255 313) (om-make-point 137 59) nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "db" 1 (om-make-point 304 42) "" "db" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM-ABS" (quote om-abs) (quote ((om-load-inputfun (quote input-funbox) "number or tree" "SELF" 1))) (om-make-point 258 527) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 266 632) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "notedef" 0 (om-make-point 109 24) "" "notedef" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((9 0 0 0 nil 0) (6 0 0 1 nil 0) (4 0 2 0 nil 0) (1 0 2 1 nil 0) (5 1 3 0 nil 0) (2 0 3 1 nil 0) (0 0 5 0 nil 0) (4 0 5 1 nil 0) (3 0 7 0 nil 0) (7 0 8 0 nil 0))) 6.1 nil "" (om-make-point 200 200) (om-make-point 771 901)) (quote ((om-load-inputfun (quote input-funbox) "" "notedef" nil) (om-load-inputfun (quote input-funbox) "" "db" nil) (om-load-inputfun (quote input-funbox) "" "input" nil))) (om-make-point 627 244) nil (list nil) "l" "close to harmonic overtone"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxinstance "freqs" (let ((copy (make-instance (quote omlistinstance) :name "freqs" :icon 129))) (setf (instance copy) (list (list 113.92579650878906D0 581.0188598632813D0 169.83737182617188D0 403.1046142578125D0) (list 137.61961364746094D0 411.0184631347656D0 187.54296875D0 277.368408203125D0) (list 80.4056396484375D0 243.14158630371094D0 327.24713134765625D0 156.60813903808594D0) (list 189.452880859375D0 96.39310455322266D0 273.4242858886719D0 454.6883544921875D0) (list 465.5556640625D0 111.39535522460938D0 336.5658264160156D0 208.90760803222656D0) (list 410.2928466796875D0 251.68218994140625D0 125.62091827392578D0 506.7662353515625D0) (list 318.55621337890625D0 142.74269104003906D0 441.20208740234375D0 661.0357055664063D0) (list 391.778564453125D0 158.6500244140625D0 477.7063903808594D0 348.2222900390625D0) (list 175.3408203125D0 391.2835998535156D0 113.55271911621094D0 454.58013916015625D0) (list 217.04339599609375D0 558.2431640625D0 441.7093200683594D0 113.28073120117188D0) (list 251.3979949951172D0 659.71435546875D0 289.3941345214844D0 40.48855972290039D0) (list 266.9575500488281D0 611.7449951171875D0 113.88015747070313D0 83.13246154785156D0) (list 288.85687255859375D0 223.01368713378906D0 113.88880157470703D0 82.25092315673828D0) (list 367.34783935546875D0 319.74688720703125D0 82.51021575927735D0 421.10406494140625D0) (list 416.9620056152344D0 82.71926879882813D0 313.4205322265625D0 479.39764404296875D0) (list 488.2887878417969D0 86.40475463867188D0 113.02745819091797D0 224.92535400390625D0) (list 486.40283203125D0 522.0884399414063D0 204.8434600830078D0 112.94908905029297D0) (list 982.9984741210938D0 114.93492889404297D0 858.1246337890625D0 301.4852600097656D0) (list 305.13787841796875D0 724.3392944335938D0 114.96983337402344D0 692.1234741210938D0) (list 981.661865234375D0 314.145263671875D0 114.8047866821289D0 1108.1839599609375D0) (list 115.63945770263672D0 311.0671081542969D0 1224.761474609375D0 144.2095184326172D0) (list 113.36106872558594D0 306.6025085449219D0 147.0214385986328D0 81.41050720214844D0) (list 113.82730102539063D0 305.42852783203125D0 77.4189224243164D0 2090.054443359375D0) (list 113.1876449584961D0 146.9787139892578D0 315.0215759277344D0 989.7581787109375D0) (list 94.84852600097656D0 144.969970703125D0 194.96714782714844D0 239.88308715820313D0) (list 114.62248229980469D0 404.9447937011719D0 171.689453125D0 697.6609497070313D0) (list 137.20933532714844D0 187.7259979248047D0 410.53045654296875D0 73.74151611328125D0) (list 80.39881134033203D0 243.06982421875D0 328.2567443847656D0 159.62423706054688D0) (list 95.45362854003906D0 188.41526794433594D0 273.5855712890625D0 454.865966796875D0) (list 465.1026916503906D0 111.04862976074219D0 336.6288757324219D0 212.76235961914063D0) (list 408.3765563964844D0 123.93877410888672D0 250.6018524169922D0 79.28287506103516D0) (list 141.51950073242188D0 322.2171936035156D0 441.0368347167969D0 660.7517700195313D0) (list 392.3798828125D0 155.79115295410156D0 79.41593933105469D0 471.2514343261719D0) (list 175.266845703125D0 391.0279846191406D0 115.02967071533203D0 79.93104553222656D0) (list 217.1176300048828D0 441.4471435546875D0 556.5104370117188D0 80.24120330810547D0) (list 249.99307250976563D0 658.5659790039063D0 38.092857360839844D0 287.28924560546875D0) (list 265.81304931640625D0 114.02255249023438D0 43.25236511230469D0 616.2293090820313D0) (list 291.1248474121094D0 42.59028625488281D0 81.12623596191406D0 149.11927795410156D0) (list 437.2902526855469D0 420.916015625D0 116.1777114868164D0 152.77682495117188D0) (list 438.13153076171875D0 39.212974548339844D0 81.27908325195313D0 118.26261138916016D0) (list 384.6842956542969D0 114.96843719482422D0 414.6903991699219D0 42.147621154785156D0) (list 496.2178039550781D0 446.7652587890625D0 117.1881332397461D0) (list 487.9769287109375D0 115.97427368164063D0 293.70159912109375D0 81.04670715332031D0) (list 114.13958740234375D0 32.65422058105469D0 300.4318542480469D0 82.33724212646485D0) (list 116.4803237915039D0 78.26288604736328D0 305.591064453125D0 146.13011169433594D0) (list 113.91365051269531D0 77.93867492675781D0 146.12161254882813D0 313.07098388671875D0) (list 114.53374481201172D0 76.18987274169922D0 145.4597930908203D0 226.1785430908203D0) (list 113.470458984375D0 76.24361419677735D0 146.32479858398438D0 34.51543426513672D0) (list 113.49696350097656D0 76.35859680175781D0 145.20059204101563D0 302.4521484375D0) (list 113.66500854492188D0 31.71181297302246D0 74.66353607177735D0 146.79071044921875D0) (list 136.1288604736328D0 90.412353515625D0 178.4026641845703D0 648.1884155273438D0) (list 1283.6573486328125D0 382.2191162109375D0 273.14215087890625D0 110.79627990722656D0) (list 195.372802734375D0 325.3330078125D0 129.80712890625D0 651.063720703125D0) (list 154.49449157714844D0 386.8592834472656D0 776.7140502929688D0 465.2628479003906D0) (list 185.66793823242188D0 461.3738708496094D0 92.22158813476563D0 648.7150268554688D0) (list 329.40997314453125D0 220.02056884765625D0 439.2687072753906D0 106.78687286376953D0) (list 262.4335632324219D0 522.5394897460938D0 128.27488708496094D0 785.2918701171875D0) (list 778.509521484375D0 310.3128662109375D0 621.1038818359375D0 155.66168212890625D0) (list 369.79150390625D0 554.2427978515625D0 185.75302124023438D0 923.8023071289063D0) (list 437.9035339355469D0 659.2183227539063D0 220.2989959716797D0 1544.389892578125D0) (list 521.8638305664063D0 261.4309997558594D0 782.7736206054688D0 1046.8582763671875D0) (list 309.4955139160156D0 621.0617065429688D0 1559.912109375D0 932.2896728515625D0) (list 369.763671875D0 738.8705444335938D0 1110.055419921875D0 283.1793518066406D0) (list 438.6959228515625D0 1322.0592041015625D0 880.3485107421875D0 1769.7330322265625D0) (list 522.9801025390625D0 1048.25D0 1575.5765380859375D0 346.5412292480469D0) (list 622.42333984375D0 1247.4833984375D0 2515.041015625D0 1878.8138427734375D0) (list 740.3389892578125D0 446.08563232421875D0 1484.6937255859375D0 2235.856201171875D0) (list 881.5055541992188D0 1766.78857421875D0 497.6753845214844D0 2665.7109375D0) (list 1047.368408203125D0 2102.3935546875D0 561.9329223632813D0 1684.9998779296875D0) (list 1249.3013916015625D0 2509.58154296875D0 856.3218383789063D0 1134.603271484375D0) (list 1483.9322509765625D0 2991.825927734375D0) (list 1767.8585205078125D0 694.6615600585938D0 114.88384246826172D0 77.71161651611328D0) (list 2101.35498046875D0 978.4085693359375D0 114.32830810546875D0 309.3768005371094D0) (list 2512.568359375D0 979.893310546875D0 311.1012268066406D0) (list 2997.03564453125D0 1559.6654052734375D0 310.214111328125D0 115.71980285644531D0) (list 3579.68408203125D0 114.07483673095703D0 314.1418762207031D0 989.0910034179688D0) (list 4288.21044921875D0 113.98686981201172D0 303.3177490234375D0 77.94898223876953D0) (list 195.93365478515625D0 288.8847351074219D0 383.9183349609375D0 97.27143096923828D0) (list 225.65516662597656D0 345.7734375D0 114.23493957519531D0 465.6802978515625D0) (list 413.7444763183594D0 266.554443359375D0 536.1791381835938D0 133.73956298828125D0) (list 327.7073974609375D0 154.98866271972656D0 468.5319519042969D0 650.0861206054688D0) (list 389.7762451171875D0 185.59762573242188D0 770.5772705078125D0 560.194580078125D0) (list 219.67129516601563D0 442.4317626953125D0 692.5354614257813D0 886.6102905273438D0) (list 249.60740661621094D0 541.3677368164063D0 506.5735778808594D0 822.63818359375D0) (list 291.7513732910156D0 652.6836547851563D0 890.2932739257813D0 1314.9022216796875D0) (list 333.25775146484375D0 734.8312377929688D0 1190.9931640625D0 810.6253051757813D0) (list 400.6415100097656D0 850.3536987304688D0 1397.1170654296875D0) (list 487.262939453125D0 113.97534942626953D0 85.39837646484375D0 598.6041259765625D0) (list 555.0904541015625D0 600.0814208984375D0) (list 637.2100219726563D0 600.7264404296875D0 525.1282958984375D0) (list 717.025390625D0 524.6171264648438D0 115.74125671386719D0 645.0706176757813D0) (list 828.1207885742188D0 524.9439697265625D0 905.5158081054688D0 116.58589935302735D0) (list 1133.4134521484375D0 115.88397979736328D0 526.3848266601563D0 1212.6282958984375D0) (list 1373.4791259765625D0 1505.255859375D0 1480.6527099609375D0 1438.9312744140625D0) (list 1318.9632568359375D0 1631.1395263671875D0 115.0089340209961D0 312.1224365234375D0) (list 860.9889526367188D0 116.06144714355469D0 225.6751708984375D0 823.8134155273438D0) (list 114.27377319335938D0 1656.6837158203125D0 1695.4190673828125D0 1888.6868896484375D0) (list 114.09994506835938D0 303.13775634765625D0 1654.91455078125D0 78.3060531616211D0) (list 114.67635345458985D0 302.8918151855469D0 143.38772583007813D0 2065.986328125D0) (list 292.8447265625D0 195.51744079589844D0 384.4139709472656D0 677.5037231445313D0) (list 228.08880615234375D0 114.31794738769531D0 346.548828125D0 465.8797607421875D0) (list 269.0242004394531D0 413.9485778808594D0 537.6490478515625D0 819.1434936523438D0) (list 327.93316650390625D0 157.4297332763672D0 470.67767333984375D0 649.0932006835938D0) (list 387.3951416015625D0 187.3195343017578D0 563.1165161132813D0 770.6985473632813D0) (list 220.68226623535156D0 441.4588928222656D0 691.027099609375D0 887.2759399414063D0) (list 247.06849670410156D0 515.3352661132813D0 823.4580078125D0 558.9727172851563D0) (list 292.5048828125D0 657.0711669921875D0 890.0082397460938D0 1315.172607421875D0) (list 333.25006103515625D0 731.9136962890625D0 808.93603515625D0 1190.4422607421875D0) (list 402.1871032714844D0 850.1484375D0 441.2191467285156D0 316.9739990234375D0) (list 486.81317138671875D0 116.46795654296875D0 85.74082946777344D0 312.9265441894531D0) (list 555.9334716796875D0 596.9276123046875D0 478.544921875D0 84.54390716552735D0) (list 639.1880493164063D0 598.3974609375D0 525.263427734375D0 855.427001953125D0) (list 525.9342041015625D0 116.059814453125D0 713.5611572265625D0 857.2477416992188D0) (list 827.8616333007813D0 525.457763671875D0 201.51438903808594D0 150.0790557861328D0) (list 1134.067138671875D0 114.49756622314453D0 526.3911743164063D0 904.5126342773438D0) (list 1373.32568359375D0 1506.1514892578125D0 301.83673095703125D0 1480.536376953125D0) (list 1318.413330078125D0 1631.3568115234375D0 114.46343994140625D0 311.3850402832031D0) (list 1500.3717041015625D0 2225.78662109375D0 860.15283203125D0 115.32160949707031D0) (list 113.94414520263672D0 1653.6142578125D0 1693.8966064453125D0 303.995849609375D0) (list 114.12370300292969D0 303.0525817871094D0 1652.02099609375D0 1695.049072265625D0) (list 113.5362777709961D0 303.1883239746094D0 142.53530883789063D0 352.90203857421875D0) (list 194.40257263183594D0 289.28314208984375D0 383.96087646484375D0 96.51643371582031D0) (list 225.6338348388672D0 114.28881072998047D0 344.16143798828125D0 465.5992431640625D0) (list 266.6949157714844D0 413.74407958984375D0 133.70947265625D0 536.26318359375D0) (list 327.8159484863281D0 154.876953125D0 468.93548583984375D0 650.7404174804688D0) (list 389.7724914550781D0 185.52496337890625D0 770.6625366210938D0 560.2373657226563D0) (list 219.6407012939453D0 442.124267578125D0 692.5564575195313D0 885.3790893554688D0) (list 249.23358154296875D0 542.7332763671875D0 822.5674438476563D0 511.0101318359375D0) (list 291.3741455078125D0 653.7144775390625D0 886.4807739257813D0) (list 332.6198425292969D0 734.60693359375D0 1190.6846923828125D0 810.1361083984375D0) (list 400.7687072753906D0 850.3154907226563D0 1397.4732666015625D0 359.7266540527344D0) (list 487.380615234375D0 446.69683837890625D0 417.40203857421875D0 115.67644500732422D0) (list 554.8690185546875D0) (list 636.7503051757813D0 522.635009765625D0 598.0338745117188D0) (list 522.2251586914063D0 713.0343017578125D0 116.58404541015625D0 292.7180480957031D0) (list 827.83642578125D0 115.59060668945313D0) (list 1131.418212890625D0 115.17345428466797D0 296.3950500488281D0 523.0298461914063D0) (list 1375.193359375D0 1506.211669921875D0 114.74536895751953D0 301.5988464355469D0) (list 114.86502838134766D0 1319.1685791015625D0 1631.748046875D0 75.1841812133789D0) (list 1500.2650146484375D0 2225.1845703125D0 114.56625366210938D0) (list 114.48736572265625D0 74.0068359375D0 150.49411010742188D0 1653.7283935546875D0) (list 114.53082275390625D0 74.45099639892578D0 301.65606689453125D0 146.59423828125D0) (list 113.3980712890625D0 146.78285217285156D0 72.89212799072266D0 300.5404052734375D0) (list 4017.02294921875D0 113.68992614746094D0 50.7613410949707D0 69.9505844116211D0) (list 349.66973876953125D0 81.4923095703125D0 257.5302734375D0 517.02197265625D0) (list 112.13526153564453D0 311.9576721191406D0 414.29437255859375D0 206.6065673828125D0) (list 367.09197998046875D0 121.94808959960938D0 250.31350708007813D0 485.5360412597656D0) (list 294.51116943359375D0 437.4446105957031D0 726.078369140625D0 1761.1990966796875D0) (list 352.09674072265625D0 514.094970703125D0 170.58529663085938D0 695.9381713867188D0) (list 617.4637451171875D0 414.8778381347656D0 200.42469787597656D0 824.8096923828125D0) (list 480.8272705078125D0 246.55267333984375D0 973.9476928710938D0 295.8138732910156D0) (list 574.7472534179688D0 295.8788757324219D0 1760.2889404296875D0 1451.478759765625D0) (list 688.131591796875D0 348.94842529296875D0 1037.97607421875D0 28.70328712463379D0) (list 822.9822387695313D0 410.0124816894531D0 1208.6121826171875D0 29.217239379882813D0) (list 491.81561279296875D0 955.1567993164063D0 1441.8642578125D0 28.335554122924805D0) (list 573.9325561523438D0 114.73204803466797D0 27.450729370117188D0 650.9140014648438D0) (list 677.7509155273438D0 599.742431640625D0 27.890338897705078D0 2104.885009765625D0) (list 786.5730590820313D0 1656.109375D0 115.14759826660156D0 226.3890838623047D0) (list 953.8562622070313D0 1902.4808349609375D0 874.6326904296875D0 114.4910659790039D0) (list 1120.9205322265625D0 1082.1807861328125D0 868.6182861328125D0 888.2845458984375D0) (list 1369.869873046875D0 1406.982421875D0 1319.3167724609375D0 114.20098876953125D0) (list 1545.4852294921875D0 1627.466552734375D0 114.60911560058594D0 859.4586181640625D0) (list 1876.5743408203125D0 1844.4683837890625D0 113.73518371582031D0 859.2507934570313D0) (list 2216.63818359375D0 113.3541030883789D0 73.54920196533203D0 2102.35205078125D0) (list 2527.133544921875D0 112.66217803955078D0 2592.040283203125D0 2350.839599609375D0) (list 112.70504760742188D0 3023.7294921875D0 225.5126953125D0 2960.00048828125D0) (list 4017.138427734375D0 113.66673278808594D0 72.89801788330078D0 311.4232482910156D0) (list 291.6543273925781D0 652.5454711914063D0 80.7667236328125D0 879.5548095703125D0) (list 332.61871337890625D0 734.6109008789063D0 1190.68408203125D0 810.1378173828125D0) (list 400.7734069824219D0 850.3154907226563D0 1397.4683837890625D0 359.68096923828125D0) (list 487.38824462890625D0 446.6819152832031D0 417.38299560546875D0 115.68598937988281D0) (list 554.8696899414063D0) (list 636.7568969726563D0 522.6410522460938D0 598.0478515625D0 116.3298568725586D0) (list 522.222412109375D0 713.0482177734375D0 116.56819152832031D0 292.67877197265625D0) (list 827.8317260742188D0) (list 1131.4228515625D0 115.14923858642578D0 296.35791015625D0 523.0269165039063D0) (list 1375.1961669921875D0 1506.2113037109375D0 114.7094497680664D0 301.5911865234375D0) (list 114.8543701171875D0 1319.1795654296875D0 1631.75830078125D0 75.18737030029297D0) (list 1500.2672119140625D0 2225.181640625D0 114.51625061035156D0) (list 114.46973419189453D0 74.03431701660156D0 150.52223205566406D0 1653.738037109375D0) (list 114.53328704833985D0 74.4450454711914D0 301.6469421386719D0 146.59442138671875D0) (list 113.38854217529297D0 146.7926483154297D0 72.92705535888672D0 300.56317138671875D0) (list 1121.0748291015625D0 50.6153678894043D0 114.81796264648438D0) (list 1370.787841796875D0 114.64602661132813D0 50.616146087646484D0 1405.687255859375D0) (list 113.40398406982422D0 146.76954650878906D0 72.84759521484375D0) (list 318.0506896972656D0 346.9540100097656D0 409.15203857421875D0 113.62001037597656D0) (list 381.28076171875D0 207.9840850830078D0 487.2859802246094D0 777.6807861328125D0) (list 204.75201416015625D0 82.00434112548828D0 452.3721923828125D0 493.8163146972656D0) (list 243.00772094726563D0 195.85543823242188D0 145.92636108398438D0 636.901611328125D0) (list 231.79611206054688D0 580.2249755859375D0 522.4899291992188D0 639.8319702148438D0) (list 137.13775634765625D0 275.6231689453125D0 207.3890380859375D0 414.2040710449219D0) (list 81.75408172607422D0 244.85379028320313D0 411.7325134277344D0 492.18511962890625D0) (list 390.8525695800781D0 293.4578552246094D0 683.7761840820313D0 195.6836395263672D0) (list 232.02439880371094D0 814.0418701171875D0 348.8288269042969D0 696.6727905273438D0) (list 553.4234008789063D0 414.826416015625D0 275.9436340332031D0 831.6077880859375D0) (list 822.6492309570313D0 658.6493530273438D0 492.53533935546875D0 328.4662780761719D0) (list 586.4716796875D0 196.3042755126953D0 781.6272583007813D0 977.1324462890625D0) (list 465.525390625D0 232.9161376953125D0 1165.663818359375D0 930.1096801757813D0) (list 830.7304077148438D0 1106.8623046875D0 553.6328735351563D0 276.5716857910156D0) (list 328.633544921875D0 1318.2069091796875D0 659.1163330078125D0 988.2147827148438D0) (list 391.1409606933594D0 1175.48828125D0 783.0047607421875D0 1570.9114990234375D0) (list 466.3844909667969D0 1400.494873046875D0 936.9343872070313D0 1870.944091796875D0) (list 555.3939208984375D0 1111.7025146484375D0 1666.7586669921875D0 2224.653564453125D0) (list 659.9957275390625D0 1322.0804443359375D0 1984.10009765625D0) (list 787.2408447265625D0 1569.686279296875D0 2362.619384765625D0 3162.7421875D0) (list 1872.094970703125D0 935.3117065429688D0 2820.5068359375D0 3765.4443359375D0) (list 2223.857421875D0 1111.6859130859375D0 3349.969482421875D0 5559.197265625D0) (list 1325.607666015625D0) (list 1571.6436767578125D0 1615.8310546875D0) (list 318.6074523925781D0 529.160888671875D0 406.1748046875D0 115.9648666381836D0) (list 349.1710510253906D0 488.06182861328125D0 779.037841796875D0 631.4722290039063D0) (list 117.05813598632813D0 76.4163818359375D0 664.9752197265625D0 293.37591552734375D0) (list 147.14309692382813D0 342.2937927246094D0 441.4101257324219D0 637.59375D0) (list 114.28441619873047D0 173.84881591796875D0 1299.546875D0 818.6256713867188D0) (list 484.4183654785156D0 77.52729034423828D0 144.56678771972656D0 415.8891906738281D0) (list 79.88117980957031D0 659.1389770507813D0 245.60781860351563D0 328.4469909667969D0) (list 296.6918640136719D0 391.1998596191406D0 197.378662109375D0 585.7532958984375D0) (list 697.2218017578125D0 465.2935485839844D0 1285.3114013671875D0 2128.014892578125D0) (list 417.4333801269531D0 835.4959716796875D0 119.9722671508789D0 77.69786071777344D0) (list 824.4598999023438D0 682.9597778320313D0 27.857025146484375D0 731.758056640625D0) (list 393.8017272949219D0 978.4578857421875D0 1768.241455078125D0) (list 80.20572662353516D0 495.2597351074219D0 1366.423583984375D0 28.17485809326172D0) (list 559.1764526367188D0 1096.2989501953125D0 543.1110229492188D0 80.50446319580078D0) (list 329.08514404296875D0 994.384521484375D0 1651.5496826171875D0 1320.609619140625D0) (list 1176.0115966796875D0 393.26312255859375D0 783.2603149414063D0 1569.932861328125D0) (list 464.8258361816406D0 940.9005126953125D0 76.20320129394531D0 116.66526794433594D0) (list 557.4531860351563D0 598.9641723632813D0 1111.6436767578125D0 1670.4404296875D0) (list 659.7822875976563D0 1323.408447265625D0 1984.044189453125D0 600.1298828125D0) (list 1568.7222900390625D0 788.6024780273438D0 2362.79541015625D0 28.37666130065918D0) (list 939.1012573242188D0 1872.216552734375D0 2821.78271484375D0 3770.36083984375D0) (list 2225.302978515625D0 1112.0517578125D0 3350.899658203125D0 1081.81005859375D0) (list 1319.9637451171875D0 2657.51416015625D0) (list 1570.5738525390625D0 1621.4139404296875D0 113.77127075195313D0 1670.290283203125D0) (list 91.27574157714844D0 180.6157989501953D0 139.7152099609375D0 229.30569458007813D0) (list 382.7850341796875D0 111.25926208496094D0 273.35595703125D0 548.55615234375D0) (list 129.23109436035156D0 389.0875244140625D0 325.8083190917969D0 651.3419189453125D0) (list 77.004150390625D0 386.95428466796875D0 153.7112579345703D0 542.9432373046875D0) (list 649.4275512695313D0 187.10894775390625D0 2090.345947265625D0 555.1925048828125D0) (list 111.67813110351563D0 224.04888916015625D0 328.7366638183594D0 1554.2332763671875D0) (list 391.91192626953125D0 262.788330078125D0 521.7601318359375D0 112.31938934326172D0) (list 312.1539306640625D0 468.6562194824219D0 622.646484375D0 1092.40478515625D0) (list 372.8477783203125D0 191.10009765625D0 142.5405731201172D0 743.3871459960938D0) (list 439.5328063964844D0 1544.0107421875D0 220.96539306640625D0 660.3660278320313D0) (list 261.90802001953125D0 523.5140380859375D0 785.5015258789063D0 1309.9227294921875D0) (list 623.7304077148438D0 312.323486328125D0 1245.4371337890625D0 937.6209716796875D0) (list 368.9971923828125D0 737.9541625976563D0 1109.098876953125D0 1483.4744873046875D0) (list 440.98602294921875D0 882.8480834960938D0 1324.5184326171875D0 829.1717529296875D0) (list 524.0408325195313D0 1574.75830078125D0 1053.77392578125D0 142.5695037841797D0) (list 625.5814819335938D0 1249.842041015625D0 3161.04443359375D0 115.91761779785156D0) (list 745.0565185546875D0 1483.575927734375D0 2237.981201171875D0 117.07670593261719D0) (list 883.6458740234375D0 1766.5894775390625D0 833.585205078125D0 117.43585968017578D0) (list 1047.752197265625D0 2099.67431640625D0 865.228271484375D0 117.26604461669922D0) (list 1250.1649169921875D0 2509.6083984375D0 117.98789978027344D0 860.4464721679688D0) (list 1484.83056640625D0 224.87905883789063D0 2994.4453125D0) (list 1768.584228515625D0 694.445068359375D0 3558.6572265625D0 860.1173706054688D0) (list 2102.243896484375D0 115.20220184326172D0 76.47257232666016D0) (list 2512.173583984375D0 1655.0687255859375D0 1690.5302734375D0) (list 2995.70263671875D0 115.6097412109375D0 1653.6741943359375D0 77.61190032958985D0) (list 115.3380126953125D0 302.41107177734375D0 3578.652587890625D0 139.97581481933594D0) (list 4289.24267578125D0 113.50450897216797D0 351.45233154296875D0 306.4270324707031D0) (list 110.58482360839844D0 206.4991912841797D0 317.7734680175781D0 439.59039306640625D0) (list 113.11261749267578D0 221.52162170410156D0 466.77215576171875D0 343.9923095703125D0) (list 232.0389862060547D0 118.28939819335938D0 366.7212219238281D0 487.3304138183594D0) (list 390.2249450683594D0 250.91778564453125D0 122.66014099121094D0 781.24609375D0) (list 269.0002136230469D0 416.0752258300781D0 132.6309356689453D0 527.5350952148438D0) (list 280.6993713378906D0 548.5138549804688D0 723.2377319335938D0 140.1368408203125D0) (list 598.3385620117188D0 309.0245056152344D0 143.05242919921875D0 441.6940002441406D0) (list 313.1632080078125D0 495.6529846191406D0 154.54159545898438D0 611.6026000976563D0) (list 350.28338623046875D0 489.554443359375D0 697.6669311523438D0 822.069091796875D0) (list 347.7195739746094D0 170.92776489257813D0 877.4485473632813D0 553.1207885742188D0) (list 391.126708984375D0 547.3867797851563D0 182.21099853515625D0 925.8990478515625D0) (list 194.51756286621094D0 384.08013916015625D0 621.3592529296875D0 971.288330078125D0) (list 199.9311065673828D0 413.7094421386719D0 800.87548828125D0 655.3656616210938D0) (list 466.041748046875D0 206.83837890625D0 628.9951782226563D0 933.76025390625D0) (list 458.04461669921875D0 219.87400817871094D0 1180.2562255859375D0 889.6263427734375D0) (list 522.3182373046875D0 228.67269897460938D0 1042.76708984375D0 1197.9996337890625D0) (list 242.7637481689453D0 536.6510620117188D0 1027.6929931640625D0 770.7353515625D0) (list 255.8947296142578D0 777.1469116210938D0 590.518310546875D0 1169.2186279296875D0) (list 265.1363830566406D0 821.6361083984375D0 621.9954223632813D0 1231.5582275390625D0) (list 277.06976318359375D0 652.3863525390625D0 859.1150512695313D0 113.04356384277344D0) (list 291.7060241699219D0 693.8057250976563D0 41.651878356933594D0 113.21407318115235D0) (list 307.2705383300781D0 731.6070556640625D0 969.2612915039063D0 113.08800506591797D0) (list 318.5086975097656D0 763.4778442382813D0 1474.712646484375D0 112.83609771728516D0) (list 340.8275451660156D0 783.3787841796875D0 1510.8416748046875D0 112.77250671386719D0) (list 358.64190673828125D0 1208.460693359375D0 41.58639907836914D0 1622.9111328125D0) (list 370.96624755859375D0 1242.270751953125D0 40.31194305419922D0 113.14513397216797D0) (list 390.6309509277344D0 342.1830749511719D0 971.7630615234375D0 1278.3115234375D0) (list 415.0152587890625D0 1509.0506591796875D0 113.62545776367188D0 964.1666259765625D0) (list 415.0152587890625D0 1509.0506591796875D0 113.62545776367188D0 964.1666259765625D0) (list 464.271728515625D0 1655.981201171875D0 3064.146728515625D0 1190.043701171875D0) (list 464.271728515625D0 1655.981201171875D0 3064.146728515625D0 1190.043701171875D0) (list 481.6134033203125D0 446.1197509765625D0 1706.0902099609375D0 42.29269790649414D0) (list 530.6544799804688D0 440.9157409667969D0 40.70652389526367D0 112.5820083618164D0) (list 545.8599243164063D0 441.293212890625D0 598.98583984375D0 40.2808837890625D0) (list 557.7058715820313D0 471.82720947265625D0 446.2107238769531D0 41.842628479003906D0) (list 591.6778564453125D0 526.29345703125D0 40.45026397705078D0 112.67913818359375D0) (list 590.93310546875D0 1662.3277587890625D0 524.33740234375D0 41.066349029541016D0) (list 662.8088989257813D0 524.4682006835938D0 36.327449798583984D0 559.1229858398438D0) (list 663.5973510742188D0 522.8180541992188D0 39.994171142578125D0 554.690185546875D0) (list 666.6442260742188D0 526.0005493164063D0 558.034423828125D0 730.8783569335938D0) (list 686.2256469726563D0 637.7257080078125D0 523.0866088867188D0 814.4358520507813D0) (list 438.7751159667969D0 107.51329040527344D0 318.8321228027344D0 205.71714782714844D0) (list 112.82823181152344D0 219.9371337890625D0 465.1644592285156D0 341.6329040527344D0) (list 117.53995513916016D0 231.54115295410156D0 363.886962890625D0 489.58770751953125D0) (list 123.13404846191406D0 391.1050720214844D0 248.11534118652344D0 620.139892578125D0) (list 415.49310302734375D0 265.86090087890625D0 131.6898651123047D0 525.82958984375D0) (list 436.7850341796875D0 282.7109680175781D0 137.77149963378906D0 547.7070922851563D0) (list 306.2516174316406D0 440.13201904296875D0 143.3839111328125D0 596.9202880859375D0) (list 311.35791015625D0 493.60394287109375D0 152.43499755859375D0 985.9580078125D0) (list 348.7726135253906D0 489.54510498046875D0 160.2386016845703D0 695.0650634765625D0) (list 171.5104522705078D0 346.4563903808594D0 554.2539672851563D0 690.6790771484375D0) (list 390.1988220214844D0 182.8285369873047D0 545.2479858398438D0 925.7843017578125D0) (list 382.732421875D0 191.06976318359375D0 620.5606079101563D0 783.2774658203125D0) (list 199.00804138183594D0 412.12298583984375D0 800.4574584960938D0 655.7564086914063D0) (list 465.6131591796875D0 628.0687866210938D0 205.65667724609375D0 931.7598876953125D0) (list 455.9216003417969D0 220.0582733154297D0 891.8197021484375D0 1180.18310546875D0) (list 521.2194213867188D0 228.16842651367188D0 1041.248291015625D0 697.8109130859375D0) (list 240.5935516357422D0 535.5476684570313D0 1028.6026611328125D0 768.5457763671875D0) (list 252.84828186035156D0 777.0396728515625D0 589.5455932617188D0 1169.1497802734375D0) (list 264.2920837402344D0 620.7557373046875D0 819.5805053710938D0 1232.5816650390625D0) (list 652.5653076171875D0 275.9421691894531D0 863.3343505859375D0 36.870140075683594D0) (list 288.9903564453125D0 692.3175659179688D0 36.86198043823242D0 912.0025634765625D0) (list 305.72265625D0 734.1761474609375D0 114.22406005859375D0 38.19694137573242D0) (list 317.80474853515625D0 761.3803100585938D0 1050.3538818359375D0 40.101112365722656D0) (list 339.0673828125D0 782.56640625D0 1509.5911865234375D0 40.00058364868164D0) (list 357.2925109863281D0 1206.121826171875D0 842.7213134765625D0 40.18416976928711D0) (list 369.9169921875D0 1242.809814453125D0 902.7085571289063D0 39.84258270263672D0) (list 387.70928955078125D0 341.9143371582031D0 974.9644165039063D0 1276.9298095703125D0) (list 412.47369384765625D0 1509.153076171875D0 963.596435546875D0 35.241817474365234D0) (list 427.39007568359375D0 1466.4251708984375D0 35.19021987915039D0 117.22530364990235D0) (list 448.7253723144531D0 1632.276611328125D0 40.74893569946289D0 117.5347671508789D0) (list 462.36590576171875D0 40.498348236083984D0 1658.78125D0 116.93524932861328D0) (list 480.0179138183594D0 38.41118621826172D0 1270.3814697265625D0 1707.1275634765625D0) (list 531.255615234375D0 39.560306549072266D0) (list 545.1838989257813D0) (list 557.5399169921875D0 473.68115234375D0) (list 592.0166015625D0 530.98046875D0) (list 590.6602783203125D0 1660.6331787109375D0 529.0604248046875D0 34.962398529052734D0) (list 661.5103149414063D0) (list 662.2252807617188D0 116.82342529296875D0 526.9047241210938D0 549.81982421875D0) (list 665.5576782226563D0 117.96515655517578D0 2042.1478271484375D0 32.378360748291016D0) (list 684.7637939453125D0 727.998046875D0) (list 217.84703063964844D0 130.47988891601563D0 174.28253173828125D0 87.01126861572266D0) (list 154.89898681640625D0 308.7796630859375D0 567.7706298828125D0 360.8271484375D0) (list 185.33604431152344D0 307.24395751953125D0 428.8621826171875D0 369.0013732910156D0) (list 145.99166870117188D0 364.0606689453125D0 219.6880340576172D0 293.03411865234375D0) (list 86.70978546142578D0 175.15939331054688D0 611.836181640625D0 260.90130615234375D0) (list 310.7569274902344D0 206.17022705078125D0 106.20525360107422D0 414.70574951171875D0) (list 493.88092041015625D0 370.26959228515625D0 246.70025634765625D0 123.57874298095703D0) (list 438.862060546875D0 587.1486206054688D0 292.8943786621094D0 146.55599975585938D0) (list 348.27703857421875D0 174.60317993164063D0 522.0663452148438D0 698.0595092773438D0) (list 413.58111572265625D0 829.3265991210938D0 206.2843017578125D0 620.6751708984375D0) (list 244.477294921875D0 490.845947265625D0 736.3718872070313D0 37.69988250732422D0) (list 292.177978515625D0 582.8536376953125D0 878.7737426757813D0 1468.2244873046875D0) (list 345.6942138671875D0 692.5342407226563D0 1045.0775146484375D0 41.30077362060547D0) (list 410.4270324707031D0 822.2401123046875D0 1239.114013671875D0 310.0889892578125D0) (list 489.8948974609375D0 445.5566101074219D0 984.2182006835938D0 1987.5965576171875D0) (list 590.7939453125D0 1179.0997314453125D0 114.4240951538086D0 41.05687713623047D0) (list 693.4757690429688D0 1393.3707275390625D0 647.9271850585938D0 41.11443328857422D0) (list 814.6719970703125D0 229.61204528808594D0 740.9234008789063D0 1663.5369873046875D0) (list 975.9441528320313D0 40.86167526245117D0 115.23149871826172D0 898.7891845703125D0) (list 1178.02587890625D0 1212.1065673828125D0 1129.61572265625D0 41.80331039428711D0) (list 1412.7982177734375D0 1371.6231689453125D0 1347.25D0 1470.5982666015625D0) (list 1669.34326171875D0 1707.2037353515625D0 224.2521514892578D0 3352.187744140625D0) (list 113.20099639892578D0 1955.427001953125D0 1937.9356689453125D0 304.2736511230469D0) (list 114.29900360107422D0 2321.834716796875D0 77.11607360839844D0 195.0869903564453D0) (list 113.61376190185547D0 77.5166244506836D0 303.9239807128906D0 2770.47216796875D0) (list 113.80220794677735D0 304.6884765625D0 3365.138427734375D0 34.8023796081543D0) (list 114.00355529785156D0 4036.723876953125D0 306.70648193359375D0 985.6516723632813D0) (list 187.4757080078125D0 648.0730590820313D0 928.836181640625D0 88.28124237060547D0) (list 184.22650146484375D0 99.97183990478516D0 299.5209655761719D0 428.8802490234375D0) (list 112.60594177246094D0 219.1803741455078D0 974.686279296875D0 480.9753723144531D0) (list 130.23675537109375D0 470.5152893066406D0 271.8307189941406D0 429.6086120605469D0) (list 532.2321166992188D0 148.100830078125D0 299.6648864746094D0 825.7789916992188D0) (list 436.7402038574219D0 968.7916870117188D0 1309.5987548828125D0 162.3593292236328D0) (list 172.2789306640625D0 496.255126953125D0 943.9702758789063D0 539.3633422851563D0) (list 525.4949340820313D0 201.0199432373047D0 1094.4244384765625D0 241.61459350585938D0) (list 228.16299438476563D0 674.5859985351563D0 984.4112548828125D0 1214.8817138671875D0) (list 1321.4205322265625D0 703.3003540039063D0 446.45147705078125D0 298.0914001464844D0) (list 325.5144958496094D0 979.41748046875D0 38.78990173339844D0 1499.61083984375D0) (list 388.2247314453125D0 1395.620849609375D0 2542.947509765625D0 1264.97900390625D0) (list 456.6795349121094D0 1086.513427734375D0 41.82483673095703D0 114.33606719970703D0) (list 517.8148193359375D0 1274.9925537109375D0 39.621978759765625D0 115.10481262207031D0) (list 578.9529418945313D0 424.88067626953125D0 1438.2216796875D0 115.8565444946289D0) (list 605.6024780273438D0 1813.87451171875D0 465.86322021484375D0 116.43819427490235D0) (list 1833.6080322265625D0 1480.42626953125D0 1039.900390625D0 229.62619018554688D0) (list 708.5242309570313D0 530.6709594726563D0 115.34468078613281D0 863.5662841796875D0) (list 818.6830444335938D0 115.08830261230469D0 972.8176879882813D0 949.4656982421875D0) (list 848.5679321289063D0 979.40771484375D0 116.02944946289063D0 32.43284225463867D0) (list 32.014713287353516D0 116.32706451416016D0 202.17041015625D0 307.08837890625D0) (list 115.89515686035156D0 303.896484375D0 985.3086547851563D0 145.88751220703125D0) (list 116.02985382080078D0 76.09358215332031D0 305.54827880859375D0 318.1802062988281D0) (list 187.18040466308594D0 649.06689453125D0 104.14834594726563D0 2088.88232421875D0) (list 106.92147827148438D0 425.7138977050781D0 184.89402770996094D0 229.4894256591797D0) (list 390.0110168457031D0 112.0815200805664D0 1535.7647705078125D0 521.8135986328125D0) (list 470.4671936035156D0 129.40438842773438D0 929.0288696289063D0 1385.885009765625D0) (list 533.546142578125D0 1806.6761474609375D0 1053.87451171875D0 298.5359802246094D0) (list 439.4518127441406D0 1390.617919921875D0 161.91287231445313D0 1912.109130859375D0) (list 526.5504760742188D0 1394.3570556640625D0 487.0745849609375D0 1532.4212646484375D0) (list 112.52640533447266D0 598.96240234375D0 194.92376708984375D0 829.079345703125D0) (list 228.44154357910156D0 113.42178344726563D0 1818.252197265625D0 2445.379638671875D0) (list 1324.111083984375D0 113.49934387207031D0 820.2068481445313D0 303.0626525878906D0) (list 979.1688842773438D0 326.34222412109375D0 1499.3880615234375D0 2869.614501953125D0) (list 1250.8289794921875D0 87.0901870727539D0 115.23790740966797D0 223.96018981933594D0) (list 115.08003997802735D0 1857.0301513671875D0 849.494384765625D0 455.5118713378906D0) (list 516.4983520507813D0 116.35961151123047D0 643.8444213867188D0 85.64856719970703D0) (list 424.7873229980469D0 578.8888549804688D0 115.2420425415039D0 1440.685546875D0) (list 467.39093017578125D0 603.120849609375D0 526.0762939453125D0 848.012451171875D0) (list 1835.552734375D0 545.4326171875D0 226.70794677734375D0 301.0243835449219D0) (list 709.8197631835938D0 114.43937683105469D0 302.4113464355469D0 876.460205078125D0) (list 819.9500122070313D0 114.59454345703125D0 75.86981964111328D0 1656.1925048828125D0) (list 114.75841522216797D0 1653.7232666015625D0 1694.0504150390625D0 147.22743225097656D0) (list 115.13216400146485D0 1652.764404296875D0 302.3933410644531D0 225.7814178466797D0) (list 114.83854675292969D0 1648.4500732421875D0 302.5010986328125D0 838.2034301757813D0) (list 114.31591796875D0 863.1913452148438D0 76.59013366699219D0 301.38189697265625D0) (list 88.92688751220703D0 1209.8310546875D0 183.88270568847656D0 907.4873046875D0) (list 434.96600341796875D0 184.9308319091797D0 979.5198364257813D0 98.58789825439453D0) (list 111.49940490722656D0 222.32000732421875D0 390.4945068359375D0 596.5457153320313D0) (list 778.5897827148438D0 126.512939453125D0 557.0575561523438D0 1303.6085205078125D0) (list 545.6572265625D0 1090.9039306640625D0 848.5259399414063D0 318.96710205078125D0) (list 606.01025390625D0 1546.58154296875D0 1610.7110595703125D0 161.59518432617188D0) (list 518.9325561523438D0 1158.8609619140625D0 1656.73876953125D0 1674.1776123046875D0) (list 1493.8114013671875D0 527.4244995117188D0 193.7581024169922D0 1021.2423706054688D0) (list 979.4818115234375D0 226.78680419921875D0 671.3446044921875D0 43.643436431884766D0) (list 878.2413940429688D0 113.47030639648438D0 42.21316909790039D0 1224.388427734375D0) (list 981.6832275390625D0 1486.7197265625D0 42.639442443847656D0 149.22569274902344D0) (list 859.2682495117188D0 314.11993408203125D0 2650.126220703125D0 113.11531829833985D0) (list 454.4666748046875D0 948.655517578125D0 1639.43896484375D0 599.3577270507813D0) (list 43.67416763305664D0 113.61473846435547D0 86.77344512939453D0 362.8209533691406D0) (list 558.5396118164063D0 1415.2227783203125D0 1533.13134765625D0 41.04652786254883D0) (list 604.9208374023438D0 449.5718078613281D0 1892.203125D0 34.29859924316406D0) (list 1744.7919921875D0 1501.558349609375D0 3450.710205078125D0 229.17152404785156D0) (list 523.4375610351563D0 113.56751251220703D0 48.17027282714844D0 75.41336059570313D0) (list 114.39653778076172D0 590.0325317382813D0 975.6928100585938D0 38.54116439819336D0) (list 114.31078338623047D0 978.4859619140625D0 225.27066040039063D0 78.45411682128906D0) (list 115.55207824707031D0 303.4027404785156D0 225.4861602783203D0 1560.835693359375D0) (list 115.36534881591797D0 304.36553955078125D0 144.77935791015625D0 78.8629150390625D0) (list 113.89732360839844D0 302.02630615234375D0 78.25753784179688D0 197.72215270996094D0) (list 184.09130859375D0 91.00545501708985D0 231.21568298339844D0 256.0245056152344D0) (list 99.66670989990235D0 182.71641540527344D0 437.47509765625D0 224.94798278808594D0) (list 111.84158325195313D0 219.41830444335938D0 391.8896789550781D0 81.8623275756836D0) (list 779.1023559570313D0 127.00381469726563D0 624.22802734375D0 1481.7274169921875D0) (list 115.4791259765625D0 1090.725830078125D0 1384.5096435546875D0 2754.54052734375D0) (list 441.5050354003906D0 1546.4642333984375D0 116.94965362548828D0 36.4411735534668D0) (list 518.9882202148438D0 113.24082946777344D0 40.97431182861328D0 1657.77392578125D0) (list 40.1180534362793D0 201.2193145751953D0 244.63490295410156D0 113.75565338134766D0) (list 40.51527404785156D0 218.62930297851563D0 113.20257568359375D0 199.25523376464844D0) (list 38.55710983276367D0 113.09293365478516D0 1222.8426513671875D0 148.5626220703125D0) (list 42.084144592285156D0 1485.7210693359375D0 320.8392639160156D0 84.82147216796875D0) (list 41.079952239990234D0 860.7409057617188D0 114.78462219238281D0 86.95732116699219D0) (list 453.285400390625D0 42.237342834472656D0 114.42054748535156D0 208.53501892089844D0) (list 42.01561737060547D0 117.20890808105469D0 84.53193664550781D0 5052.0D0) (list 558.406494140625D0 40.7593879699707D0 1413.026611328125D0 415.8192138671875D0) (list 451.10479736328125D0 116.32003021240235D0 606.6019897460938D0 985.4007568359375D0) (list 227.41905212402344D0 305.7066345214844D0 1746.600341796875D0 1133.144287109375D0) (list 114.61714935302735D0 7752.08056640625D0 304.9600830078125D0 1870.1864013671875D0) (list 589.0231323242188D0 114.84092712402344D0 305.9182434082031D0 975.8458862304688D0) (list 114.67842102050781D0 977.4934692382813D0 77.625D0 307.17767333984375D0) (list 113.21623229980469D0 305.8745422363281D0 226.7465057373047D0 2089.842529296875D0) (list 115.77920532226563D0 302.81787109375D0 145.58792114257813D0 79.8590316772461D0) (list 114.01779174804688D0 302.0645751953125D0 75.64388275146485D0 143.50604248046875D0) (list 173.4528350830078D0 390.562255859375D0 215.70120239257813D0 642.2078247070313D0) (list 360.4113464355469D0 153.53427124023438D0 205.8699188232422D0 567.4244384765625D0) (list 244.6426239013672D0 179.8760223388672D0 113.67314147949219D0 739.029296875D0) (list 437.8392333984375D0 219.58322143554688D0 659.8341674804688D0 293.48040771484375D0) (list 436.05718994140625D0 261.81182861328125D0 175.4264373779297D0 610.9927978515625D0) (list 414.9255676269531D0 519.8236694335938D0 310.0546569824219D0 1041.351806640625D0) (list 370.399658203125D0 866.0164794921875D0 493.0692443847656D0 246.6627655029297D0) (list 438.9032897949219D0 293.64703369140625D0 586.6231689453125D0 1178.0284423828125D0) (list 348.865966796875D0 522.7515869140625D0 697.215087890625D0 174.97390747070313D0) (list 414.1698913574219D0 830.7078857421875D0 1249.0029296875D0 622.201416015625D0) (list 245.58755493164063D0 987.0172119140625D0 492.3598327636719D0 1736.635498046875D0) (list 585.6271362304688D0 295.9700622558594D0 1172.2822265625D0 1768.3935546875D0) (list 697.191162109375D0 350.0315246582031D0 1049.6134033203125D0 1401.2596435546875D0) (list 414.9204406738281D0 831.5833129882813D0 2093.44970703125D0 1247.2064208984375D0) (list 495.20782470703125D0 1486.61376953125D0 988.1580810546875D0 1986.5985107421875D0) (list 587.2981567382813D0 1177.0D0 1769.91650390625D0 2368.8515625D0) (list 702.4656982421875D0 1402.1209716796875D0 2827.233154296875D0 2109.550537109375D0) (list 837.4057006835938D0 1668.2725830078125D0 227.53904724121094D0 114.57479858398438D0) (list 980.8079223632813D0 41.62223815917969D0 114.88711547851563D0 2998.524169921875D0) (list 1179.5584716796875D0 3561.961669921875D0 2363.977294921875D0 116.20013427734375D0) (list 1400.8291015625D0 2825.38330078125D0 979.4509887695313D0 313.31500244140625D0) (list 1666.9986572265625D0 33.02669143676758D0 228.56118774414063D0 3345.486572265625D0) (list 1981.7724609375D0 4003.46240234375D0 114.88837432861328D0 304.7296447753906D0) (list 2359.678466796875D0 115.07868194580078D0 79.04366302490235D0 304.7276306152344D0) (list 2834.741455078125D0 113.7829818725586D0 305.36260986328125D0 77.42929077148438D0) (list 3357.76123046875D0 115.97222900390625D0 302.2812805175781D0 225.83197021484375D0) (list 4026.11767578125D0 114.18089294433594D0 307.0896911621094D0 34.19178771972656D0) (list 83.25174713134766D0 642.0718383789063D0 173.40843200683594D0 216.20513916015625D0) (list 153.4956817626953D0 360.506591796875D0 100.53887939453125D0 206.8485565185547D0) (list 244.68626403808594D0 181.2330322265625D0 739.571533203125D0 114.56723022460938D0) (list 438.27099609375D0 219.733154296875D0 659.9313354492188D0 146.40628051757813D0) (list 262.6636047363281D0 82.75276947021485D0 876.564208984375D0 175.8272705078125D0) (list 415.9732971191406D0 312.0615539550781D0 1042.4071044921875D0 833.3678588867188D0) (list 370.42138671875D0 493.6338806152344D0 866.4306030273438D0 249.442626953125D0) (list 439.4601745605469D0 293.5528869628906D0 1626.68017578125D0 1178.73583984375D0) (list 523.2039794921875D0 1225.572021484375D0 349.2129211425781D0 873.0640258789063D0) (list 413.5804748535156D0 829.9783935546875D0 623.7600708007813D0 2095.69921875D0) (list 245.5631561279297D0 492.78973388671875D0 986.7606201171875D0 1737.461669921875D0) (list 586.0757446289063D0 295.0123596191406D0 1171.00146484375D0 1769.007080078125D0) (list 697.805908203125D0 351.3565673828125D0 2474.04541015625D0 1049.3199462890625D0) (list 415.5947570800781D0 831.8929443359375D0 2093.247802734375D0 1247.560791015625D0) (list 495.065673828125D0 1487.6573486328125D0 1988.2432861328125D0 988.1660766601563D0) (list 588.6768798828125D0 1176.67041015625D0 1769.896484375D0 41.53506851196289D0) (list 708.2896118164063D0 1400.4398193359375D0 2828.429443359375D0 36.49905776977539D0) (list 836.2315063476563D0 85.0960693359375D0 40.82345962524414D0 227.7476806640625D0) (list 984.0589599609375D0 418.04144287109375D0 2998.61474609375D0 116.5398941040039D0) (list 3562.103271484375D0 39.135650634765625D0 114.5190200805664D0 1179.06298828125D0) (list 1398.1234130859375D0 2817.38330078125D0 981.2599487304688D0 113.98983001708985D0) (list 1668.503173828125D0 3354.817626953125D0 224.976806640625D0 303.3070068359375D0) (list 1985.2369384765625D0 114.79630279541016D0 304.0299987792969D0 4001.0810546875D0) (list 2360.320068359375D0 114.54020690917969D0 303.2757263183594D0 76.65187072753906D0) (list 2835.60400390625D0 115.7879409790039D0 5699.08349609375D0 79.1357650756836D0) (list 3358.66162109375D0 114.99595642089844D0 222.44264221191406D0 76.68858337402344D0) (list 4026.078125D0 114.69104766845703D0 307.44378662109375D0 77.28141021728516D0) (list 435.7871398925781D0 655.8447875976563D0 478.65142822265625D0 610.682861328125D0) (list 154.49407958984375D0 309.0429992675781D0 568.4556274414063D0 360.7449035644531D0) (list 185.34764099121094D0 368.4631042480469D0 307.2254943847656D0 430.06024169921875D0) (list 146.59365844726563D0 75.96418762207031D0 293.1759338378906D0 438.0021057128906D0) (list 259.3886413574219D0 176.8067626953125D0 612.5518188476563D0 435.53814697265625D0) (list 206.0064239501953D0 312.4821472167969D0 110.13438415527344D0 415.3631896972656D0) (list 496.67156982421875D0 372.746826171875D0 248.72731018066406D0 121.18328857421875D0) (list 294.06829833984375D0 439.581298828125D0 588.6800537109375D0 147.61187744140625D0) (list 348.05078125D0 524.4524536132813D0 175.32400512695313D0 698.8699340820313D0) (list 414.48883056640625D0 206.66819763183594D0 829.5499267578125D0 622.2745971679688D0) (list 244.61871337890625D0 491.0486145019531D0 1232.5758056640625D0 736.0381469726563D0) (list 293.4720764160156D0 581.2343139648438D0 880.13232421875D0 40.932037353515625D0) (list 344.8710632324219D0 693.5146484375D0 1045.789306640625D0 37.95396423339844D0) (list 410.077392578125D0 822.33935546875D0 1238.6312255859375D0 40.39524459838867D0) (list 491.279296875D0 445.83306884765625D0 41.49477005004883D0 985.3402099609375D0) (list 592.30615234375D0 1177.44677734375D0 42.891510009765625D0 2369.857666015625D0) (list 696.121826171875D0 1391.6776123046875D0 646.3375854492188D0 607.2330322265625D0) (list 816.5828857421875D0 229.25833129882813D0 34.56593704223633D0 742.9100341796875D0) (list 979.915771484375D0 37.079627990722656D0 114.50806427001953D0 866.4616088867188D0) (list 1178.8218994140625D0 1212.0418701171875D0 1130.229736328125D0 40.91014862060547D0) (list 1406.685791015625D0 1371.1416015625D0 1349.1024169921875D0 1471.125244140625D0) (list 1670.670654296875D0 113.12533569335938D0 1710.1005859375D0 303.2322998046875D0) (list 113.21281433105469D0 1956.0621337890625D0 1929.9923095703125D0 304.3954772949219D0) (list 113.87535095214844D0 2325.12548828125D0 304.5802001953125D0 2393.29541015625D0) (list 114.35176849365235D0 303.5014343261719D0 2768.91552734375D0 2090.634033203125D0) (list 113.98443603515625D0 145.62216186523438D0 306.3608703613281D0 3367.8125D0) (list 113.14627838134766D0 4035.673095703125D0 305.68927001953125D0 31.006258010864258D0) (list 96.85283660888672D0 145.74668884277344D0 487.77117919921875D0 241.196044921875D0) (list 114.78966522216797D0 402.5992431640625D0 639.7579956054688D0 169.61563110351563D0) (list 136.72596740722656D0 187.56190490722656D0 407.55950927734375D0 1478.676025390625D0) (list 242.81182861328125D0 411.5882263183594D0 78.83547973632813D0 163.470947265625D0) (list 96.3755111694336D0 188.6160125732422D0 273.5437316894531D0 454.02655029296875D0) (list 465.5923156738281D0 111.96322631835938D0 337.1136474609375D0 210.34312438964844D0) (list 124.97147369384766D0 251.1910400390625D0 410.3863220214844D0 513.0894775390625D0) (list 140.80905151367188D0 315.8218078613281D0 442.4160461425781D0 661.9940185546875D0) (list 372.5523986816406D0 155.5225830078125D0 486.49932861328125D0 80.94892120361328D0) (list 174.0878143310547D0 395.4784240722656D0 698.53759765625D0 113.4826431274414D0) (list 207.7262725830078D0 546.3895874023438D0 1111.392578125D0 113.8489761352539D0) (list 249.9817657470703D0 653.9249877929688D0 280.4377746582031D0 40.811466217041016D0) (list 262.6168518066406D0 784.417236328125D0 39.76447296142578D0 114.326416015625D0) (list 312.30523681640625D0 112.6944580078125D0 40.764095306396484D0 83.67642974853516D0) (list 441.99755859375D0 114.15443420410156D0 511.619873046875D0 84.71976470947266D0) (list 417.9353942871094D0 84.6812973022461D0 311.46209716796875D0 112.8476333618164D0) (list 367.6886901855469D0 325.9503479003906D0 36.83965301513672D0 416.3645324707031D0) (list 489.1221618652344D0 116.54039764404297D0 86.20446014404297D0 228.87265014648438D0) (list 486.30096435546875D0 522.8329467773438D0 205.450927734375D0 113.26249694824219D0) (list 857.4378662109375D0 982.4907836914063D0 302.38372802734375D0 115.98645782470703D0) (list 306.8432922363281D0 115.05003356933594D0 1652.8922119140625D0 1667.056884765625D0) (list 980.0166015625D0 314.7716369628906D0 114.87986755371094D0 225.906005859375D0) (list 115.99433898925781D0 226.63555908203125D0 302.0458679199219D0 147.10704040527344D0) (list 114.11424255371094D0 312.5057373046875D0 148.2665557861328D0 79.9101791381836D0) (list 113.0185775756836D0 305.0826416015625D0 80.0941390991211D0 1557.626953125D0) (list 114.35269165039063D0 304.4384460449219D0 145.18492126464844D0 1554.6575927734375D0) (list 80.8082046508789D0 297.88446044921875D0 383.75469970703125D0 618.8446655273438D0) (list 80.8082046508789D0 297.88446044921875D0 383.75469970703125D0 618.8446655273438D0) (list 195.2695770263672D0 94.20568084716797D0 126.82371520996094D0 325.5413818359375D0) (list 195.2695770263672D0 94.20568084716797D0 126.82371520996094D0 325.5413818359375D0) (list 77.7735366821289D0 155.58494567871094D0 191.5587158203125D0 386.6363830566406D0) (list 77.7735366821289D0 155.58494567871094D0 191.5587158203125D0 386.6363830566406D0) (list 184.2505645751953D0 320.4643859863281D0 553.9071044921875D0 137.5340118408203D0) (list 184.2505645751953D0 320.4643859863281D0 553.9071044921875D0 137.5340118408203D0) (list 546.5386962890625D0 273.2738037109375D0 163.5836639404297D0 1224.3748779296875D0) (list 546.5386962890625D0 273.2738037109375D0 163.5836639404297D0 1224.3748779296875D0) (list 130.3246307373047D0 455.7207336425781D0 195.02810668945313D0 325.6732482910156D0) (list 130.3246307373047D0 455.7207336425781D0 195.02810668945313D0 325.6732482910156D0) (list 78.26229858398438D0 309.1378173828125D0 154.9439697265625D0 778.0123291015625D0) (list 78.26229858398438D0 309.1378173828125D0 154.9439697265625D0 778.0123291015625D0) (list 276.1983947753906D0 184.0844268798828D0 553.4763793945313D0 647.369384765625D0) (list 276.1983947753906D0 184.0844268798828D0 553.4763793945313D0 647.369384765625D0) (list 328.6383361816406D0 219.41358947753906D0 437.60052490234375D0 768.7176513671875D0) (list 328.6383361816406D0 219.41358947753906D0 437.60052490234375D0 768.7176513671875D0) (list 261.259765625D0 131.1309051513672D0 521.5242919921875D0 391.31402587890625D0) (list 261.259765625D0 131.1309051513672D0 521.5242919921875D0 391.31402587890625D0) (list 155.13722229003906D0 309.9034729003906D0 466.1604919433594D0 777.8474731445313D0) (list 155.13722229003906D0 309.9034729003906D0 466.1604919433594D0 777.8474731445313D0) (list 369.56121826171875D0 184.70498657226563D0 553.811279296875D0 923.4159545898438D0) (list 369.56121826171875D0 184.70498657226563D0 553.811279296875D0 923.4159545898438D0) (list 437.6933288574219D0 219.11801147460938D0 657.5714721679688D0 1543.9810791015625D0) (list 437.6933288574219D0 219.11801147460938D0 657.5714721679688D0 1543.9810791015625D0) (list 261.4366760253906D0 521.7054443359375D0 782.4904174804688D0 1044.3450927734375D0) (list 261.4366760253906D0 521.7054443359375D0 782.4904174804688D0 1044.3450927734375D0) (list 309.79437255859375D0 620.9647827148438D0 1245.5081787109375D0 932.2479248046875D0) (list 309.79437255859375D0 620.9647827148438D0 1245.5081787109375D0 932.2479248046875D0) (list 369.4577331542969D0 738.5400390625D0 1109.341796875D0 2237.884765625D0) (list 369.4577331542969D0 738.5400390625D0 1109.341796875D0 2237.884765625D0) (list 438.4651794433594D0 878.6512451171875D0 1766.786865234375D0 1321.0557861328125D0) (list 438.4651794433594D0 878.6512451171875D0 1766.786865234375D0 1321.0557861328125D0) (list 522.5055541992188D0 1047.44189453125D0 1573.6307373046875D0 2104.222900390625D0) (list 522.5055541992188D0 1047.44189453125D0 1573.6307373046875D0 2104.222900390625D0) (list 621.2698364257813D0 1244.0452880859375D0 2506.359619140625D0 1872.7315673828125D0) (list 621.2698364257813D0 1244.0452880859375D0 2506.359619140625D0 1872.7315673828125D0) (list 738.8909912109375D0 1481.6683349609375D0 2229.591064453125D0 2986.8974609375D0) (list 738.8909912109375D0 1481.6683349609375D0 2229.591064453125D0 2986.8974609375D0) (list 877.8865356445313D0 1761.8289794921875D0 2655.89990234375D0) (list 877.8865356445313D0 1761.8289794921875D0 2655.89990234375D0) (list 1045.13720703125D0 2093.302490234375D0 989.6233520507813D0) (list 1045.13720703125D0 2093.302490234375D0 989.6233520507813D0) (list 1245.877685546875D0 2505.391357421875D0 1198.6396484375D0) (list 1245.877685546875D0 2505.391357421875D0 1198.6396484375D0) (list 1481.517578125D0) (list 1481.517578125D0) (list 1765.56201171875D0) (list 1765.56201171875D0) (list 2099.189453125D0) (list 2099.189453125D0) (list 2499.571044921875D0) (list 2499.571044921875D0) (list 2994.134033203125D0 5977.4755859375D0) (list 2994.134033203125D0 5977.4755859375D0) (list 3569.323486328125D0 113.65933990478516D0) (list 3569.323486328125D0 113.65933990478516D0) (list 4288.0380859375D0 113.6371078491211D0 4258.1025390625D0 145.4992218017578D0) (list 4288.0380859375D0 113.6371078491211D0 4258.1025390625D0 145.4992218017578D0) (list 180.85765075683594D0 154.47401428222656D0 307.01617431640625D0 336.65399169921875D0) (list 180.85765075683594D0 154.47401428222656D0 307.01617431640625D0 336.65399169921875D0) (list 219.24700927734375D0 145.75521850585938D0 180.49070739746094D0 822.6224365234375D0) (list 219.24700927734375D0 145.75521850585938D0 180.49070739746094D0 822.6224365234375D0) (list 130.78602600097656D0 87.09342956542969D0 609.7984008789063D0 390.94970703125D0) (list 130.78602600097656D0 87.09342956542969D0 609.7984008789063D0 390.94970703125D0) (list 309.2208251953125D0 155.0965576171875D0 568.4935302734375D0 257.1860046386719D0) (list 309.2208251953125D0 155.0965576171875D0 568.4935302734375D0 257.1860046386719D0) (list 185.2021484375D0 244.5677490234375D0 428.3051452636719D0 306.83349609375D0) (list 185.2021484375D0 244.5677490234375D0 428.3051452636719D0 306.83349609375D0) (list 734.7821044921875D0 438.006591796875D0 145.8480682373047D0 363.8564147949219D0) (list 734.7821044921875D0 438.006591796875D0 145.8480682373047D0 363.8564147949219D0) (list 260.7353820800781D0 347.6171875D0 434.4452819824219D0 608.2930908203125D0) (list 260.7353820800781D0 347.6171875D0 434.4452819824219D0 608.2930908203125D0) (list 207.5508270263672D0 414.20880126953125D0 309.4917907714844D0 519.2581787109375D0) (list 207.5508270263672D0 414.20880126953125D0 309.4917907714844D0 519.2581787109375D0) (list 369.2600402832031D0 491.630859375D0 245.76654052734375D0 123.03893280029297D0) (list 369.2600402832031D0 491.630859375D0 245.76654052734375D0 123.03893280029297D0) (list 146.02676391601563D0 438.4574279785156D0 293.2045593261719D0 586.098388671875D0) (list 146.02676391601563D0 438.4574279785156D0 293.2045593261719D0 586.098388671875D0) (list 522.4027709960938D0 348.5872497558594D0 174.9232940673828D0 870.6177368164063D0) (list 522.4027709960938D0 348.5872497558594D0 174.9232940673828D0 870.6177368164063D0) (list 413.9383544921875D0 830.1568603515625D0 620.67724609375D0 207.47036743164063D0) (list 413.9383544921875D0 830.1568603515625D0 620.67724609375D0 207.47036743164063D0) (list 244.9551544189453D0 491.3681335449219D0 985.3093872070313D0 738.048095703125D0) (list 244.9551544189453D0 491.3681335449219D0 985.3093872070313D0 738.048095703125D0) (list 293.57342529296875D0 585.7860717773438D0 878.7953491210938D0 1173.87939453125D0) (list 293.57342529296875D0 585.7860717773438D0 878.7953491210938D0 1173.87939453125D0) (list 348.4629821777344D0 696.3125610351563D0 1046.7996826171875D0 2108.40087890625D0) (list 348.4629821777344D0 696.3125610351563D0 1046.7996826171875D0 2108.40087890625D0) (list 414.44677734375D0 830.22021484375D0 1665.74072265625D0 1245.09033203125D0) (list 414.44677734375D0 830.22021484375D0 1665.74072265625D0 1245.09033203125D0) (list 492.3393859863281D0 986.8290405273438D0 1482.9307861328125D0 1984.6851806640625D0) (list 492.3393859863281D0 986.8290405273438D0 1482.9307861328125D0 1984.6851806640625D0) (list 586.1768798828125D0 1173.914306640625D0 2364.567138671875D0 1767.854736328125D0) (list 586.1768798828125D0 1173.914306640625D0 2364.567138671875D0 1767.854736328125D0) (list 698.2410278320313D0 1399.3968505859375D0 2106.887451171875D0 2823.304443359375D0) (list 698.2410278320313D0 1399.3968505859375D0 2106.887451171875D0 2823.304443359375D0) (list 830.2186279296875D0 1664.2918701171875D0) (list 830.2186279296875D0 1664.2918701171875D0) (list 988.662109375D0 1985.853515625D0) (list 988.662109375D0 1985.853515625D0) (list 1171.8594970703125D0 2357.82177734375D0 3559.268310546875D0) (list 1171.8594970703125D0 2357.82177734375D0 3559.268310546875D0) (list 1394.628662109375D0 2809.302734375D0 1459.271728515625D0) (list 1394.628662109375D0 2809.302734375D0 1459.271728515625D0) (list 1667.7138671875D0) (list 1667.7138671875D0) (list 1980.955078125D0 3955.1650390625D0 1919.5684814453125D0 1938.8211669921875D0) (list 1980.955078125D0 3955.1650390625D0 1919.5684814453125D0 1938.8211669921875D0) (list 2352.89599609375D0) (list 2352.89599609375D0) (list 2817.338623046875D0 305.9913024902344D0 2758.688232421875D0 2093.54443359375D0) (list 2817.338623046875D0 305.9913024902344D0 2758.688232421875D0 2093.54443359375D0) (list 3355.552490234375D0 3408.2841796875D0 113.80299377441406D0 305.12335205078125D0) (list 3355.552490234375D0 3408.2841796875D0 113.80299377441406D0 305.12335205078125D0) (list 3999.342041015625D0) (list 3999.342041015625D0) (list 301.83221435546875D0 384.1695556640625D0 619.1146850585938D0 244.78201293945313D0) (list 318.5298767089844D0 409.1177978515625D0 1135.8323974609375D0 290.7224426269531D0) (list 337.5918884277344D0 155.09986877441406D0 181.40530395507813D0 306.55938720703125D0) (list 391.72576904296875D0 195.76776123046875D0 326.2061767578125D0 162.99855041503906D0) (list 346.7560119628906D0 208.28431701660156D0 241.1776580810547D0 380.5030517578125D0) (list 219.3967742919922D0 181.14535522460938D0 73.38085174560547D0 822.8068237304688D0) (list 78.11825561523438D0 387.73687744140625D0 114.75971221923828D0 194.2193603515625D0) (list 82.09148406982422D0 620.4052124023438D0 576.8364868164063D0 493.3443298339844D0) (list 654.2671508789063D0 1296.9998779296875D0 610.23974609375D0 924.1576538085938D0) (list 184.491455078125D0 137.92494201660156D0 553.9335327148438D0 320.96380615234375D0) (list 488.4862365722656D0 146.24151611328125D0 194.74661254882813D0 243.0907440185547D0) (list 569.5545043945313D0 309.6312255859375D0 154.99057006835938D0 518.9876098632813D0) (list 546.8931884765625D0 1224.381103515625D0 273.25592041015625D0 602.8309936523438D0) (list 348.79803466796875D0 114.70442199707031D0 818.4426879882813D0 755.3571166992188D0) (list 185.33885192871094D0 244.91566467285156D0 429.61956787109375D0 368.83123779296875D0) (list 455.8158264160156D0 129.68328857421875D0 195.0261688232422D0 651.9114990234375D0) (list 137.6426544189453D0 414.58538818359375D0 483.68438720703125D0 693.2882690429688D0) (list 146.5529327392578D0 438.830078125D0 74.47637939453125D0 512.8612670898438D0) (list 78.26385498046875D0 154.84324645996094D0 465.3473205566406D0 309.7154846191406D0) (list 81.86772155761719D0 244.9303741455078D0 492.5802917480469D0 327.5195617675781D0) (list 259.7030944824219D0 608.4857177734375D0 346.71221923828125D0 521.6123657226563D0) (list 186.85826110839844D0 647.2882690429688D0 460.80645751953125D0 274.88232421875D0) (list 390.9439697265625D0 195.37315368652344D0 585.9114990234375D0 488.6669921875D0) (list 207.4160919189453D0 726.7301025390625D0 1040.87939453125D0 104.58432006835938D0) (list 224.292236328125D0 329.66290283203125D0 111.5841293334961D0 439.0263366699219D0) (list 231.22752380371094D0 115.04960632324219D0 465.95513916015625D0 697.7889404296875D0) (list 493.0284118652344D0 368.0847473144531D0 250.31980895996094D0 120.81381225585938D0) (list 260.66351318359375D0 392.46746826171875D0 915.8424072265625D0 524.1792602539063D0) (list 831.5486450195313D0 276.4090881347656D0 415.7085266113281D0 138.91644287109375D0) (list 293.27667236328125D0 440.14251708984375D0 145.90936279296875D0 587.2798461914063D0) (list 312.9552917480469D0 777.9408569335938D0 620.3746948242188D0 1091.3624267578125D0) (list 494.79559326171875D0 329.3539733886719D0 165.31204223632813D0 659.0263671875D0) (list 524.6255493164063D0 348.9455261230469D0 174.60630798339844D0 874.2485961914063D0) (list 187.5673370361328D0 924.5431518554688D0 554.9750366210938D0 1297.7340087890625D0) (list 393.08551025390625D0 196.3665008544922D0 1373.552734375D0 588.7973022460938D0) (list 415.8603515625D0 622.396240234375D0 829.6460571289063D0 207.9058380126953D0) (list 440.3399353027344D0 1545.083251953125D0 219.02015686035156D0 659.0375366210938D0) (list 466.5669860839844D0 231.88607788085938D0 699.3972778320313D0 1638.058349609375D0) (list 245.60960388183594D0 490.98663330078125D0 987.2223510742188D0 2238.301513671875D0) (list 260.5219421386719D0 523.7855834960938D0 784.0338745117188D0 1046.056640625D0) (list 554.1563720703125D0 277.4402160644531D0 830.8373413085938D0 1108.16455078125D0) (list 294.8724670410156D0 585.6300048828125D0 1174.592529296875D0 1470.2806396484375D0) (list 308.91046142578125D0 622.6986083984375D0 1247.64111328125D0 933.4095458984375D0) (list 328.4757385253906D0 657.5140380859375D0 986.5077514648438D0 1319.53173828125D0) (list 349.297119140625D0 699.406982421875D0 1046.220458984375D0 1399.98779296875D0) (list 368.60162353515625D0 744.1113891601563D0 1484.822021484375D0 1109.6474609375D0) (list 784.3322143554688D0 392.26446533203125D0 1971.926513671875D0 1572.4232177734375D0) (list 416.1458740234375D0 831.0311279296875D0 1244.39697265625D0 1666.6129150390625D0) (list 440.992431640625D0 877.513671875D0 1766.8709716796875D0 1322.7239990234375D0) (list 467.03973388671875D0 1401.6671142578125D0 936.6717529296875D0 1872.725830078125D0) (list 493.4427185058594D0 987.1697387695313D0 1484.28515625D0 1985.0177001953125D0) (list 522.7556762695313D0 1046.638427734375D0 1575.3096923828125D0 2105.966064453125D0) (list 555.1996459960938D0 2231.91650390625D0 2801.90576171875D0 1670.7059326171875D0) (list 588.1826782226563D0 2365.498291015625D0 1174.33447265625D0 1766.84765625D0) (list 621.55859375D0 2507.12158203125D0 1242.4351806640625D0 1876.5802001953125D0) (list 659.4816284179688D0 1322.800048828125D0 2662.60205078125D0 1989.8819580078125D0) (list 699.453369140625D0 1402.388427734375D0 2824.613037109375D0 2109.86376953125D0) (list 740.591796875D0 1483.7591552734375D0 2229.6943359375D0 2986.1611328125D0) (list 782.3025512695313D0 2366.60986328125D0 1573.3751220703125D0 713.0255737304688D0) (list 829.0010375976563D0 1666.76708984375D0 2506.080322265625D0) (list 875.2760009765625D0 1762.436767578125D0 2656.90771484375D0 976.5092163085938D0) (list 934.0497436523438D0 1870.6376953125D0 864.5382690429688D0 832.17333984375D0) (list 989.0056762695313D0 1985.3970947265625D0) (list 1047.253662109375D0 2093.331298828125D0 999.6934814453125D0 114.8140869140625D0) (list 1106.1968994140625D0 2226.386474609375D0 1147.90087890625D0 1057.49267578125D0) (list 1170.77197265625D0 2360.61376953125D0 874.406982421875D0 1270.525146484375D0) (list 1243.5347900390625D0 2503.984375D0 1200.14013671875D0 1154.5877685546875D0) (list 1315.459716796875D0 2649.170166015625D0 1385.703857421875D0 1426.881591796875D0) (list 1393.5679931640625D0 2810.213134765625D0 1315.31884765625D0 980.2129516601563D0) (list 1481.3648681640625D0 2979.83935546875D0 1543.0157470703125D0) (list 1574.9581298828125D0 3165.74658203125D0 1470.1812744140625D0 1627.173828125D0) (list 1980.8223876953125D0 3955.824462890625D0 3998.39599609375D0 1918.03662109375D0) (list 1766.94970703125D0 3556.08544921875D0 1716.5816650390625D0) (list 1869.166015625D0 3770.32861328125D0 3746.373291015625D0) (list 1980.8243408203125D0 3955.8251953125D0 3998.39453125D0 1918.0123291015625D0) (list 2099.619140625D0) (list 2221.760498046875D0) (list 2353.71240234375D0 2395.44091796875D0) (list 2499.91455078125D0 2090.10546875D0) (list 2660.72900390625D0 5327.45703125D0 2714.7177734375D0) (list 2816.952880859375D0 2761.629638671875D0 2091.141357421875D0 2896.964599609375D0) (list 2976.15087890625D0 113.19869232177735D0 5975.9462890625D0 305.3131103515625D0) (list 3159.457763671875D0 113.2335433959961D0 3085.591796875D0 2093.982421875D0) (list 3356.0166015625D0 3407.9404296875D0 51.69682312011719D0 113.82913970947266D0) (list 3572.32470703125D0 7139.978515625D0 114.52922821044922D0 3625.93212890625D0) (list 3773.9921875D0 307.64215087890625D0 51.584739685058594D0 3741.304443359375D0) (list 3998.584716796875D0 310.4776306152344D0 113.15901947021485D0 202.80274963378906D0) (list 4288.79248046875D0 4265.10791015625D0 113.35236358642578D0 49.05097579956055D0))) (setf (edition-params copy) (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40)))) (setf (create-info copy) (quote (nil nil))) (setf (doc copy) (str-with-nl "")) copy) (quote nil) (om-make-point 879 52) nil (om-make-point 45 40)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 1046 184) (om-make-point 77 30) (quote :elements) ":elements" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "CRITERION" (quote criterion) (quote ((om-load-inputfun (quote input-funbox) "" "EVALUATOR" nil) (om-load-inputfunmenu1 (quote input-funmenu) "" "SUBJECT" (quote :regions) (list (list "regions" (quote :regions)) (list "adjacent" (quote :adjacent)) (list "nthcdr" (quote :nthcdr)) (list "pitch" (quote :pitch)) (list "pitch-class" (quote :pitch-class)) (list "melodic" (quote :melodic)) (list "signed-melodic" (quote :signed-melodic)))) (om-load-inputfun (quote input-funbox) "" "TEST-VALUE" nil) (om-load-inputfun (quote input-funbox) "" "RATE" nil))) (om-make-point 627 414) (om-make-point 162 67) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "mypatch" (om-load-patch-abs1 "mypatch" (quote ((let ((box (om-load-boxout "output" 0 (om-make-point 686 598) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input 2" 1 (om-make-point 467 65) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 322 60) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MAT-TRANS" (quote mat-trans) (quote ((om-load-inputfun (quote input-funbox) "a list of lists" "MATRIX" nil))) (om-make-point 345 357) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (let ((box (om-load-boxcall (quote genfun) "LIST-ELEMENTS" (quote list-elements) (quote ((om-load-inputfun (quote input-funbox) "a list" "LIST" nil))) (om-make-point 344 440) nil nil nil nil 2))) (setf (numouts box) 2) box))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PLACE-SOUNDS" (quote place-sounds) (quote ((om-load-inputfun (quote input-funbox) "" "SOUNDS" nil) (om-load-inputfun (quote input-funbox) "" "TIMES-1" nil) (om-load-inputfun (quote input-funbox) "" "DETUNES" nil))) (om-make-point 436 558) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "make onsets" (om-load-patch-abs1 "make onsets" (quote ((let ((box (om-load-boxout "output" 0 (om-make-point 191 288) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 79 28) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "1-" (quote 1-) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 240 112) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DX->X" (quote dx->x) (quote ((om-load-inputfun (quote input-funbox) "a number" "START" 0) (om-load-inputfun (quote input-funbox) "a list of numbers" "LIST" (list 1 1)))) (om-make-point 324 248) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 284 64) (om-make-point 45 30) 0.15 "0.15" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 0))) (om-make-point 271 170) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LENGTH" (quote length) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil))) (om-make-point 139 97) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((3 0 0 0 nil 0) (6 0 2 0 nil 0) (5 0 3 1 nil 0) (4 0 5 0 nil 0) (2 0 5 1 nil 0) (1 0 6 0 nil 0))) 6.1 nil "" (om-make-point 200 200) (om-make-point 500 400)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil))) (om-make-point 456 387) nil (list (list 0 0.1 0.2 0.3 0.4 0.5 0.6 0.70000005 0.8000001 0.9000001 1.0000001 1.1000002 1.2000002 1.3000002 1.4000002 1.5000002)) nil "make onsets"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "MAPCAR" (quote mapcar) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 304 539) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "NTH" (quote nth) (quote ((om-load-inputfun (quote input-funbox) "ORIG-N" "ORIG-N" nil) (om-load-inputfun (quote input-funbox) "ORIG-LIST" "ORIG-LIST" nil))) (om-make-point 250 472) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "PHENOTYPE" (quote om-darwin::phenotype) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 433 292) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "POPULATION" (quote om-darwin::population) (quote ((om-load-inputfun (quote input-funbox) "GA-ENGINE" "GA-ENGINE" nil))) (om-make-point 528 193) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "CADAR" (quote cadar) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 456 231) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((5 0 0 0 nil 0) (9 0 3 0 nil 0) (3 0 4 0 nil 0) (7 0 5 0 nil 0) (6 0 5 1 nil 0) (4 1 5 2 nil 0) (9 0 6 0 nil 0) (8 0 7 0 nil 0) (4 0 7 1 nil 0) (1 0 8 1 nil 0) (11 0 9 0 nil 0) (2 0 10 0 nil 0) (10 0 11 0 nil 0))) 6.1 nil "" (om-make-point 200 200) (om-make-point 1071 780)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil) (om-load-inputfun (quote input-funbox) "" "input 2" nil))) (om-make-point 579 998) nil (list "/Users/holbrook/Data/projects/cbsolo-ws/out-files/easy-out-386.aiff") nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "visualizer" (om-load-patch-abs1 "visualizer" (quote ((let ((box (om-load-boxwithed1 (quote box-with-win) "convert to midic" (quote omloop) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil) (om-load-inputfun (quote input-funbox) "" "db" nil))) (om-make-point 177 223) nil nil nil (list (let ((box (om-load-boxcall (quote genfun) "collect" (quote listing) (quote ((om-load-inputfun (quote input-funbox) "anything" "DATA" nil))) (om-make-point 277 577) nil nil nil nil 3))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "inlist" (quote listloop) (quote ((om-load-inputfun (quote input-funbox) "list to iterate" "LIST" nil))) (om-make-point 196 98) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM+" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "FUN1" 0) (om-load-inputfun (quote input-funbox) "number or list" "FUN2" 0))) (om-make-point 246 514) (om-make-point 69 35) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 124 402) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "F->MC" (quote f->mc) (quote ((om-load-inputfun (quote input-funbox) "frequency (Hz)" "FREQ" 440))) (om-make-point 188 446) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "NTH" (quote nth) (quote ((om-load-inputfun (quote input-funbox) "ORIG-N" "ORIG-N" nil) (om-load-inputfun (quote input-funbox) "ORIG-LIST" "ORIG-LIST" nil))) (om-make-point 94 338) (om-make-point 142 43) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (let ((box (om-load-boxcall (quote genfun) "LIST-ELEMENTS" (quote list-elements) (quote ((om-load-inputfun (quote input-funbox) "a list" "LIST" nil))) (om-make-point 166 207) nil nil nil nil 2))) (setf (numouts box) 2) box))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "db" 1 (om-make-point 379 63) "" "db" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 78 77) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-seqbox "finally" (quote finaldo) (quote ((om-load-inputfun (quote input-funbox) "value to return" "VAL" nil))) (om-make-point 318 689) nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-seqbox "eachTime" (quote loopdo) (quote ((om-load-inputfun (quote input-funbox) "operations to do" "OP" nil))) (om-make-point 218 689) nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box)) (quote ((2 0 0 0 nil 0) (8 0 1 0 nil 0) (4 0 2 0 nil 0) (6 1 2 1 nil 0) (5 0 3 0 nil 0) (3 0 4 0 nil 0) (6 0 5 0 nil 0) (7 0 5 1 nil 0) (1 0 6 0 nil 0) (0 1 9 0 nil 0) (0 0 10 0 nil 0))) 1 "convert to midic" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ARRANGE->POLY" (quote om-darwin::arrange->poly) (quote ((om-load-inputfun (quote input-funbox) "" "ARR" nil))) (om-make-point 423 543) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 409 289) (om-make-point 46 30) 1/32 "1/32" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "MAKE-EVEN-MELODY" (quote om-darwin::make-even-melody) (quote ((om-load-inputfun (quote input-funbox) "PROPS" "PROPS" nil) (om-load-inputfun (quote input-funbox) "LENGTH" "LENGTH" nil))) (om-make-point 267 415) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "db" 1 (om-make-point 291 58) "" "db" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 94 24) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 282 656) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((5 0 0 0 nil 0) (4 0 0 1 nil 0) (3 0 1 0 nil 0) (0 0 3 0 nil 0) (2 0 3 1 nil 0) (1 0 6 0 nil 0))) 6.1 nil "" (om-make-point 1072 342) (om-make-point 603 763)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil) (om-load-inputfun (quote input-funbox) "" "input 2" nil))) (om-make-point 231 487) (om-make-point 81 67) (list nil) "l" "visualizer"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LENGTH" (quote length) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil))) (om-make-point 94 312) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxinstance "freqs" (let ((copy (make-instance (quote omlistinstance) :name "freqs" :icon 129))) (setf (instance copy) (list (list 113.92579650878906D0 581.0188598632813D0 169.83737182617188D0 403.1046142578125D0) (list 137.61961364746094D0 411.0184631347656D0 187.54296875D0 277.368408203125D0) (list 80.4056396484375D0 243.14158630371094D0 327.24713134765625D0 156.60813903808594D0) (list 189.452880859375D0 96.39310455322266D0 273.4242858886719D0 454.6883544921875D0) (list 465.5556640625D0 111.39535522460938D0 336.5658264160156D0 208.90760803222656D0) (list 410.2928466796875D0 251.68218994140625D0 125.62091827392578D0 506.7662353515625D0) (list 318.55621337890625D0 142.74269104003906D0 441.20208740234375D0 661.0357055664063D0) (list 391.778564453125D0 158.6500244140625D0 477.7063903808594D0 348.2222900390625D0) (list 175.3408203125D0 391.2835998535156D0 113.55271911621094D0 454.58013916015625D0) (list 217.04339599609375D0 558.2431640625D0 441.7093200683594D0 113.28073120117188D0) (list 251.3979949951172D0 659.71435546875D0 289.3941345214844D0 40.48855972290039D0) (list 266.9575500488281D0 611.7449951171875D0 113.88015747070313D0 83.13246154785156D0) (list 288.85687255859375D0 223.01368713378906D0 113.88880157470703D0 82.25092315673828D0) (list 367.34783935546875D0 319.74688720703125D0 82.51021575927735D0 421.10406494140625D0) (list 416.9620056152344D0 82.71926879882813D0 313.4205322265625D0 479.39764404296875D0) (list 488.2887878417969D0 86.40475463867188D0 113.02745819091797D0 224.92535400390625D0) (list 486.40283203125D0 522.0884399414063D0 204.8434600830078D0 112.94908905029297D0) (list 982.9984741210938D0 114.93492889404297D0 858.1246337890625D0 301.4852600097656D0) (list 305.13787841796875D0 724.3392944335938D0 114.96983337402344D0 692.1234741210938D0) (list 981.661865234375D0 314.145263671875D0 114.8047866821289D0 1108.1839599609375D0) (list 115.63945770263672D0 311.0671081542969D0 1224.761474609375D0 144.2095184326172D0) (list 113.36106872558594D0 306.6025085449219D0 147.0214385986328D0 81.41050720214844D0) (list 113.82730102539063D0 305.42852783203125D0 77.4189224243164D0 2090.054443359375D0) (list 113.1876449584961D0 146.9787139892578D0 315.0215759277344D0 989.7581787109375D0) (list 94.84852600097656D0 144.969970703125D0 194.96714782714844D0 239.88308715820313D0) (list 114.62248229980469D0 404.9447937011719D0 171.689453125D0 697.6609497070313D0) (list 137.20933532714844D0 187.7259979248047D0 410.53045654296875D0 73.74151611328125D0) (list 80.39881134033203D0 243.06982421875D0 328.2567443847656D0 159.62423706054688D0) (list 95.45362854003906D0 188.41526794433594D0 273.5855712890625D0 454.865966796875D0) (list 465.1026916503906D0 111.04862976074219D0 336.6288757324219D0 212.76235961914063D0) (list 408.3765563964844D0 123.93877410888672D0 250.6018524169922D0 79.28287506103516D0) (list 141.51950073242188D0 322.2171936035156D0 441.0368347167969D0 660.7517700195313D0) (list 392.3798828125D0 155.79115295410156D0 79.41593933105469D0 471.2514343261719D0) (list 175.266845703125D0 391.0279846191406D0 115.02967071533203D0 79.93104553222656D0) (list 217.1176300048828D0 441.4471435546875D0 556.5104370117188D0 80.24120330810547D0) (list 249.99307250976563D0 658.5659790039063D0 38.092857360839844D0 287.28924560546875D0) (list 265.81304931640625D0 114.02255249023438D0 43.25236511230469D0 616.2293090820313D0) (list 291.1248474121094D0 42.59028625488281D0 81.12623596191406D0 149.11927795410156D0) (list 437.2902526855469D0 420.916015625D0 116.1777114868164D0 152.77682495117188D0) (list 438.13153076171875D0 39.212974548339844D0 81.27908325195313D0 118.26261138916016D0) (list 384.6842956542969D0 114.96843719482422D0 414.6903991699219D0 42.147621154785156D0) (list 496.2178039550781D0 446.7652587890625D0 117.1881332397461D0) (list 487.9769287109375D0 115.97427368164063D0 293.70159912109375D0 81.04670715332031D0) (list 114.13958740234375D0 32.65422058105469D0 300.4318542480469D0 82.33724212646485D0) (list 116.4803237915039D0 78.26288604736328D0 305.591064453125D0 146.13011169433594D0) (list 113.91365051269531D0 77.93867492675781D0 146.12161254882813D0 313.07098388671875D0) (list 114.53374481201172D0 76.18987274169922D0 145.4597930908203D0 226.1785430908203D0) (list 113.470458984375D0 76.24361419677735D0 146.32479858398438D0 34.51543426513672D0) (list 113.49696350097656D0 76.35859680175781D0 145.20059204101563D0 302.4521484375D0) (list 113.66500854492188D0 31.71181297302246D0 74.66353607177735D0 146.79071044921875D0) (list 136.1288604736328D0 90.412353515625D0 178.4026641845703D0 648.1884155273438D0) (list 1283.6573486328125D0 382.2191162109375D0 273.14215087890625D0 110.79627990722656D0) (list 195.372802734375D0 325.3330078125D0 129.80712890625D0 651.063720703125D0) (list 154.49449157714844D0 386.8592834472656D0 776.7140502929688D0 465.2628479003906D0) (list 185.66793823242188D0 461.3738708496094D0 92.22158813476563D0 648.7150268554688D0) (list 329.40997314453125D0 220.02056884765625D0 439.2687072753906D0 106.78687286376953D0) (list 262.4335632324219D0 522.5394897460938D0 128.27488708496094D0 785.2918701171875D0) (list 778.509521484375D0 310.3128662109375D0 621.1038818359375D0 155.66168212890625D0) (list 369.79150390625D0 554.2427978515625D0 185.75302124023438D0 923.8023071289063D0) (list 437.9035339355469D0 659.2183227539063D0 220.2989959716797D0 1544.389892578125D0) (list 521.8638305664063D0 261.4309997558594D0 782.7736206054688D0 1046.8582763671875D0) (list 309.4955139160156D0 621.0617065429688D0 1559.912109375D0 932.2896728515625D0) (list 369.763671875D0 738.8705444335938D0 1110.055419921875D0 283.1793518066406D0) (list 438.6959228515625D0 1322.0592041015625D0 880.3485107421875D0 1769.7330322265625D0) (list 522.9801025390625D0 1048.25D0 1575.5765380859375D0 346.5412292480469D0) (list 622.42333984375D0 1247.4833984375D0 2515.041015625D0 1878.8138427734375D0) (list 740.3389892578125D0 446.08563232421875D0 1484.6937255859375D0 2235.856201171875D0) (list 881.5055541992188D0 1766.78857421875D0 497.6753845214844D0 2665.7109375D0) (list 1047.368408203125D0 2102.3935546875D0 561.9329223632813D0 1684.9998779296875D0) (list 1249.3013916015625D0 2509.58154296875D0 856.3218383789063D0 1134.603271484375D0) (list 1483.9322509765625D0 2991.825927734375D0) (list 1767.8585205078125D0 694.6615600585938D0 114.88384246826172D0 77.71161651611328D0) (list 2101.35498046875D0 978.4085693359375D0 114.32830810546875D0 309.3768005371094D0) (list 2512.568359375D0 979.893310546875D0 311.1012268066406D0) (list 2997.03564453125D0 1559.6654052734375D0 310.214111328125D0 115.71980285644531D0) (list 3579.68408203125D0 114.07483673095703D0 314.1418762207031D0 989.0910034179688D0) (list 4288.21044921875D0 113.98686981201172D0 303.3177490234375D0 77.94898223876953D0) (list 195.93365478515625D0 288.8847351074219D0 383.9183349609375D0 97.27143096923828D0) (list 225.65516662597656D0 345.7734375D0 114.23493957519531D0 465.6802978515625D0) (list 413.7444763183594D0 266.554443359375D0 536.1791381835938D0 133.73956298828125D0) (list 327.7073974609375D0 154.98866271972656D0 468.5319519042969D0 650.0861206054688D0) (list 389.7762451171875D0 185.59762573242188D0 770.5772705078125D0 560.194580078125D0) (list 219.67129516601563D0 442.4317626953125D0 692.5354614257813D0 886.6102905273438D0) (list 249.60740661621094D0 541.3677368164063D0 506.5735778808594D0 822.63818359375D0) (list 291.7513732910156D0 652.6836547851563D0 890.2932739257813D0 1314.9022216796875D0) (list 333.25775146484375D0 734.8312377929688D0 1190.9931640625D0 810.6253051757813D0) (list 400.6415100097656D0 850.3536987304688D0 1397.1170654296875D0) (list 487.262939453125D0 113.97534942626953D0 85.39837646484375D0 598.6041259765625D0) (list 555.0904541015625D0 600.0814208984375D0) (list 637.2100219726563D0 600.7264404296875D0 525.1282958984375D0) (list 717.025390625D0 524.6171264648438D0 115.74125671386719D0 645.0706176757813D0) (list 828.1207885742188D0 524.9439697265625D0 905.5158081054688D0 116.58589935302735D0) (list 1133.4134521484375D0 115.88397979736328D0 526.3848266601563D0 1212.6282958984375D0) (list 1373.4791259765625D0 1505.255859375D0 1480.6527099609375D0 1438.9312744140625D0) (list 1318.9632568359375D0 1631.1395263671875D0 115.0089340209961D0 312.1224365234375D0) (list 860.9889526367188D0 116.06144714355469D0 225.6751708984375D0 823.8134155273438D0) (list 114.27377319335938D0 1656.6837158203125D0 1695.4190673828125D0 1888.6868896484375D0) (list 114.09994506835938D0 303.13775634765625D0 1654.91455078125D0 78.3060531616211D0) (list 114.67635345458985D0 302.8918151855469D0 143.38772583007813D0 2065.986328125D0) (list 292.8447265625D0 195.51744079589844D0 384.4139709472656D0 677.5037231445313D0) (list 228.08880615234375D0 114.31794738769531D0 346.548828125D0 465.8797607421875D0) (list 269.0242004394531D0 413.9485778808594D0 537.6490478515625D0 819.1434936523438D0) (list 327.93316650390625D0 157.4297332763672D0 470.67767333984375D0 649.0932006835938D0) (list 387.3951416015625D0 187.3195343017578D0 563.1165161132813D0 770.6985473632813D0) (list 220.68226623535156D0 441.4588928222656D0 691.027099609375D0 887.2759399414063D0) (list 247.06849670410156D0 515.3352661132813D0 823.4580078125D0 558.9727172851563D0) (list 292.5048828125D0 657.0711669921875D0 890.0082397460938D0 1315.172607421875D0) (list 333.25006103515625D0 731.9136962890625D0 808.93603515625D0 1190.4422607421875D0) (list 402.1871032714844D0 850.1484375D0 441.2191467285156D0 316.9739990234375D0) (list 486.81317138671875D0 116.46795654296875D0 85.74082946777344D0 312.9265441894531D0) (list 555.9334716796875D0 596.9276123046875D0 478.544921875D0 84.54390716552735D0) (list 639.1880493164063D0 598.3974609375D0 525.263427734375D0 855.427001953125D0) (list 525.9342041015625D0 116.059814453125D0 713.5611572265625D0 857.2477416992188D0) (list 827.8616333007813D0 525.457763671875D0 201.51438903808594D0 150.0790557861328D0) (list 1134.067138671875D0 114.49756622314453D0 526.3911743164063D0 904.5126342773438D0) (list 1373.32568359375D0 1506.1514892578125D0 301.83673095703125D0 1480.536376953125D0) (list 1318.413330078125D0 1631.3568115234375D0 114.46343994140625D0 311.3850402832031D0) (list 1500.3717041015625D0 2225.78662109375D0 860.15283203125D0 115.32160949707031D0) (list 113.94414520263672D0 1653.6142578125D0 1693.8966064453125D0 303.995849609375D0) (list 114.12370300292969D0 303.0525817871094D0 1652.02099609375D0 1695.049072265625D0) (list 113.5362777709961D0 303.1883239746094D0 142.53530883789063D0 352.90203857421875D0) (list 194.40257263183594D0 289.28314208984375D0 383.96087646484375D0 96.51643371582031D0) (list 225.6338348388672D0 114.28881072998047D0 344.16143798828125D0 465.5992431640625D0) (list 266.6949157714844D0 413.74407958984375D0 133.70947265625D0 536.26318359375D0) (list 327.8159484863281D0 154.876953125D0 468.93548583984375D0 650.7404174804688D0) (list 389.7724914550781D0 185.52496337890625D0 770.6625366210938D0 560.2373657226563D0) (list 219.6407012939453D0 442.124267578125D0 692.5564575195313D0 885.3790893554688D0) (list 249.23358154296875D0 542.7332763671875D0 822.5674438476563D0 511.0101318359375D0) (list 291.3741455078125D0 653.7144775390625D0 886.4807739257813D0) (list 332.6198425292969D0 734.60693359375D0 1190.6846923828125D0 810.1361083984375D0) (list 400.7687072753906D0 850.3154907226563D0 1397.4732666015625D0 359.7266540527344D0) (list 487.380615234375D0 446.69683837890625D0 417.40203857421875D0 115.67644500732422D0) (list 554.8690185546875D0) (list 636.7503051757813D0 522.635009765625D0 598.0338745117188D0) (list 522.2251586914063D0 713.0343017578125D0 116.58404541015625D0 292.7180480957031D0) (list 827.83642578125D0 115.59060668945313D0) (list 1131.418212890625D0 115.17345428466797D0 296.3950500488281D0 523.0298461914063D0) (list 1375.193359375D0 1506.211669921875D0 114.74536895751953D0 301.5988464355469D0) (list 114.86502838134766D0 1319.1685791015625D0 1631.748046875D0 75.1841812133789D0) (list 1500.2650146484375D0 2225.1845703125D0 114.56625366210938D0) (list 114.48736572265625D0 74.0068359375D0 150.49411010742188D0 1653.7283935546875D0) (list 114.53082275390625D0 74.45099639892578D0 301.65606689453125D0 146.59423828125D0) (list 113.3980712890625D0 146.78285217285156D0 72.89212799072266D0 300.5404052734375D0) (list 4017.02294921875D0 113.68992614746094D0 50.7613410949707D0 69.9505844116211D0) (list 349.66973876953125D0 81.4923095703125D0 257.5302734375D0 517.02197265625D0) (list 112.13526153564453D0 311.9576721191406D0 414.29437255859375D0 206.6065673828125D0) (list 367.09197998046875D0 121.94808959960938D0 250.31350708007813D0 485.5360412597656D0) (list 294.51116943359375D0 437.4446105957031D0 726.078369140625D0 1761.1990966796875D0) (list 352.09674072265625D0 514.094970703125D0 170.58529663085938D0 695.9381713867188D0) (list 617.4637451171875D0 414.8778381347656D0 200.42469787597656D0 824.8096923828125D0) (list 480.8272705078125D0 246.55267333984375D0 973.9476928710938D0 295.8138732910156D0) (list 574.7472534179688D0 295.8788757324219D0 1760.2889404296875D0 1451.478759765625D0) (list 688.131591796875D0 348.94842529296875D0 1037.97607421875D0 28.70328712463379D0) (list 822.9822387695313D0 410.0124816894531D0 1208.6121826171875D0 29.217239379882813D0) (list 491.81561279296875D0 955.1567993164063D0 1441.8642578125D0 28.335554122924805D0) (list 573.9325561523438D0 114.73204803466797D0 27.450729370117188D0 650.9140014648438D0) (list 677.7509155273438D0 599.742431640625D0 27.890338897705078D0 2104.885009765625D0) (list 786.5730590820313D0 1656.109375D0 115.14759826660156D0 226.3890838623047D0) (list 953.8562622070313D0 1902.4808349609375D0 874.6326904296875D0 114.4910659790039D0) (list 1120.9205322265625D0 1082.1807861328125D0 868.6182861328125D0 888.2845458984375D0) (list 1369.869873046875D0 1406.982421875D0 1319.3167724609375D0 114.20098876953125D0) (list 1545.4852294921875D0 1627.466552734375D0 114.60911560058594D0 859.4586181640625D0) (list 1876.5743408203125D0 1844.4683837890625D0 113.73518371582031D0 859.2507934570313D0) (list 2216.63818359375D0 113.3541030883789D0 73.54920196533203D0 2102.35205078125D0) (list 2527.133544921875D0 112.66217803955078D0 2592.040283203125D0 2350.839599609375D0) (list 112.70504760742188D0 3023.7294921875D0 225.5126953125D0 2960.00048828125D0) (list 4017.138427734375D0 113.66673278808594D0 72.89801788330078D0 311.4232482910156D0) (list 291.6543273925781D0 652.5454711914063D0 80.7667236328125D0 879.5548095703125D0) (list 332.61871337890625D0 734.6109008789063D0 1190.68408203125D0 810.1378173828125D0) (list 400.7734069824219D0 850.3154907226563D0 1397.4683837890625D0 359.68096923828125D0) (list 487.38824462890625D0 446.6819152832031D0 417.38299560546875D0 115.68598937988281D0) (list 554.8696899414063D0) (list 636.7568969726563D0 522.6410522460938D0 598.0478515625D0 116.3298568725586D0) (list 522.222412109375D0 713.0482177734375D0 116.56819152832031D0 292.67877197265625D0) (list 827.8317260742188D0) (list 1131.4228515625D0 115.14923858642578D0 296.35791015625D0 523.0269165039063D0) (list 1375.1961669921875D0 1506.2113037109375D0 114.7094497680664D0 301.5911865234375D0) (list 114.8543701171875D0 1319.1795654296875D0 1631.75830078125D0 75.18737030029297D0) (list 1500.2672119140625D0 2225.181640625D0 114.51625061035156D0) (list 114.46973419189453D0 74.03431701660156D0 150.52223205566406D0 1653.738037109375D0) (list 114.53328704833985D0 74.4450454711914D0 301.6469421386719D0 146.59442138671875D0) (list 113.38854217529297D0 146.7926483154297D0 72.92705535888672D0 300.56317138671875D0) (list 1121.0748291015625D0 50.6153678894043D0 114.81796264648438D0) (list 1370.787841796875D0 114.64602661132813D0 50.616146087646484D0 1405.687255859375D0) (list 113.40398406982422D0 146.76954650878906D0 72.84759521484375D0) (list 318.0506896972656D0 346.9540100097656D0 409.15203857421875D0 113.62001037597656D0) (list 381.28076171875D0 207.9840850830078D0 487.2859802246094D0 777.6807861328125D0) (list 204.75201416015625D0 82.00434112548828D0 452.3721923828125D0 493.8163146972656D0) (list 243.00772094726563D0 195.85543823242188D0 145.92636108398438D0 636.901611328125D0) (list 231.79611206054688D0 580.2249755859375D0 522.4899291992188D0 639.8319702148438D0) (list 137.13775634765625D0 275.6231689453125D0 207.3890380859375D0 414.2040710449219D0) (list 81.75408172607422D0 244.85379028320313D0 411.7325134277344D0 492.18511962890625D0) (list 390.8525695800781D0 293.4578552246094D0 683.7761840820313D0 195.6836395263672D0) (list 232.02439880371094D0 814.0418701171875D0 348.8288269042969D0 696.6727905273438D0) (list 553.4234008789063D0 414.826416015625D0 275.9436340332031D0 831.6077880859375D0) (list 822.6492309570313D0 658.6493530273438D0 492.53533935546875D0 328.4662780761719D0) (list 586.4716796875D0 196.3042755126953D0 781.6272583007813D0 977.1324462890625D0) (list 465.525390625D0 232.9161376953125D0 1165.663818359375D0 930.1096801757813D0) (list 830.7304077148438D0 1106.8623046875D0 553.6328735351563D0 276.5716857910156D0) (list 328.633544921875D0 1318.2069091796875D0 659.1163330078125D0 988.2147827148438D0) (list 391.1409606933594D0 1175.48828125D0 783.0047607421875D0 1570.9114990234375D0) (list 466.3844909667969D0 1400.494873046875D0 936.9343872070313D0 1870.944091796875D0) (list 555.3939208984375D0 1111.7025146484375D0 1666.7586669921875D0 2224.653564453125D0) (list 659.9957275390625D0 1322.0804443359375D0 1984.10009765625D0) (list 787.2408447265625D0 1569.686279296875D0 2362.619384765625D0 3162.7421875D0) (list 1872.094970703125D0 935.3117065429688D0 2820.5068359375D0 3765.4443359375D0) (list 2223.857421875D0 1111.6859130859375D0 3349.969482421875D0 5559.197265625D0) (list 1325.607666015625D0) (list 1571.6436767578125D0 1615.8310546875D0) (list 318.6074523925781D0 529.160888671875D0 406.1748046875D0 115.9648666381836D0) (list 349.1710510253906D0 488.06182861328125D0 779.037841796875D0 631.4722290039063D0) (list 117.05813598632813D0 76.4163818359375D0 664.9752197265625D0 293.37591552734375D0) (list 147.14309692382813D0 342.2937927246094D0 441.4101257324219D0 637.59375D0) (list 114.28441619873047D0 173.84881591796875D0 1299.546875D0 818.6256713867188D0) (list 484.4183654785156D0 77.52729034423828D0 144.56678771972656D0 415.8891906738281D0) (list 79.88117980957031D0 659.1389770507813D0 245.60781860351563D0 328.4469909667969D0) (list 296.6918640136719D0 391.1998596191406D0 197.378662109375D0 585.7532958984375D0) (list 697.2218017578125D0 465.2935485839844D0 1285.3114013671875D0 2128.014892578125D0) (list 417.4333801269531D0 835.4959716796875D0 119.9722671508789D0 77.69786071777344D0) (list 824.4598999023438D0 682.9597778320313D0 27.857025146484375D0 731.758056640625D0) (list 393.8017272949219D0 978.4578857421875D0 1768.241455078125D0) (list 80.20572662353516D0 495.2597351074219D0 1366.423583984375D0 28.17485809326172D0) (list 559.1764526367188D0 1096.2989501953125D0 543.1110229492188D0 80.50446319580078D0) (list 329.08514404296875D0 994.384521484375D0 1651.5496826171875D0 1320.609619140625D0) (list 1176.0115966796875D0 393.26312255859375D0 783.2603149414063D0 1569.932861328125D0) (list 464.8258361816406D0 940.9005126953125D0 76.20320129394531D0 116.66526794433594D0) (list 557.4531860351563D0 598.9641723632813D0 1111.6436767578125D0 1670.4404296875D0) (list 659.7822875976563D0 1323.408447265625D0 1984.044189453125D0 600.1298828125D0) (list 1568.7222900390625D0 788.6024780273438D0 2362.79541015625D0 28.37666130065918D0) (list 939.1012573242188D0 1872.216552734375D0 2821.78271484375D0 3770.36083984375D0) (list 2225.302978515625D0 1112.0517578125D0 3350.899658203125D0 1081.81005859375D0) (list 1319.9637451171875D0 2657.51416015625D0) (list 1570.5738525390625D0 1621.4139404296875D0 113.77127075195313D0 1670.290283203125D0) (list 91.27574157714844D0 180.6157989501953D0 139.7152099609375D0 229.30569458007813D0) (list 382.7850341796875D0 111.25926208496094D0 273.35595703125D0 548.55615234375D0) (list 129.23109436035156D0 389.0875244140625D0 325.8083190917969D0 651.3419189453125D0) (list 77.004150390625D0 386.95428466796875D0 153.7112579345703D0 542.9432373046875D0) (list 649.4275512695313D0 187.10894775390625D0 2090.345947265625D0 555.1925048828125D0) (list 111.67813110351563D0 224.04888916015625D0 328.7366638183594D0 1554.2332763671875D0) (list 391.91192626953125D0 262.788330078125D0 521.7601318359375D0 112.31938934326172D0) (list 312.1539306640625D0 468.6562194824219D0 622.646484375D0 1092.40478515625D0) (list 372.8477783203125D0 191.10009765625D0 142.5405731201172D0 743.3871459960938D0) (list 439.5328063964844D0 1544.0107421875D0 220.96539306640625D0 660.3660278320313D0) (list 261.90802001953125D0 523.5140380859375D0 785.5015258789063D0 1309.9227294921875D0) (list 623.7304077148438D0 312.323486328125D0 1245.4371337890625D0 937.6209716796875D0) (list 368.9971923828125D0 737.9541625976563D0 1109.098876953125D0 1483.4744873046875D0) (list 440.98602294921875D0 882.8480834960938D0 1324.5184326171875D0 829.1717529296875D0) (list 524.0408325195313D0 1574.75830078125D0 1053.77392578125D0 142.5695037841797D0) (list 625.5814819335938D0 1249.842041015625D0 3161.04443359375D0 115.91761779785156D0) (list 745.0565185546875D0 1483.575927734375D0 2237.981201171875D0 117.07670593261719D0) (list 883.6458740234375D0 1766.5894775390625D0 833.585205078125D0 117.43585968017578D0) (list 1047.752197265625D0 2099.67431640625D0 865.228271484375D0 117.26604461669922D0) (list 1250.1649169921875D0 2509.6083984375D0 117.98789978027344D0 860.4464721679688D0) (list 1484.83056640625D0 224.87905883789063D0 2994.4453125D0) (list 1768.584228515625D0 694.445068359375D0 3558.6572265625D0 860.1173706054688D0) (list 2102.243896484375D0 115.20220184326172D0 76.47257232666016D0) (list 2512.173583984375D0 1655.0687255859375D0 1690.5302734375D0) (list 2995.70263671875D0 115.6097412109375D0 1653.6741943359375D0 77.61190032958985D0) (list 115.3380126953125D0 302.41107177734375D0 3578.652587890625D0 139.97581481933594D0) (list 4289.24267578125D0 113.50450897216797D0 351.45233154296875D0 306.4270324707031D0) (list 110.58482360839844D0 206.4991912841797D0 317.7734680175781D0 439.59039306640625D0) (list 113.11261749267578D0 221.52162170410156D0 466.77215576171875D0 343.9923095703125D0) (list 232.0389862060547D0 118.28939819335938D0 366.7212219238281D0 487.3304138183594D0) (list 390.2249450683594D0 250.91778564453125D0 122.66014099121094D0 781.24609375D0) (list 269.0002136230469D0 416.0752258300781D0 132.6309356689453D0 527.5350952148438D0) (list 280.6993713378906D0 548.5138549804688D0 723.2377319335938D0 140.1368408203125D0) (list 598.3385620117188D0 309.0245056152344D0 143.05242919921875D0 441.6940002441406D0) (list 313.1632080078125D0 495.6529846191406D0 154.54159545898438D0 611.6026000976563D0) (list 350.28338623046875D0 489.554443359375D0 697.6669311523438D0 822.069091796875D0) (list 347.7195739746094D0 170.92776489257813D0 877.4485473632813D0 553.1207885742188D0) (list 391.126708984375D0 547.3867797851563D0 182.21099853515625D0 925.8990478515625D0) (list 194.51756286621094D0 384.08013916015625D0 621.3592529296875D0 971.288330078125D0) (list 199.9311065673828D0 413.7094421386719D0 800.87548828125D0 655.3656616210938D0) (list 466.041748046875D0 206.83837890625D0 628.9951782226563D0 933.76025390625D0) (list 458.04461669921875D0 219.87400817871094D0 1180.2562255859375D0 889.6263427734375D0) (list 522.3182373046875D0 228.67269897460938D0 1042.76708984375D0 1197.9996337890625D0) (list 242.7637481689453D0 536.6510620117188D0 1027.6929931640625D0 770.7353515625D0) (list 255.8947296142578D0 777.1469116210938D0 590.518310546875D0 1169.2186279296875D0) (list 265.1363830566406D0 821.6361083984375D0 621.9954223632813D0 1231.5582275390625D0) (list 277.06976318359375D0 652.3863525390625D0 859.1150512695313D0 113.04356384277344D0) (list 291.7060241699219D0 693.8057250976563D0 41.651878356933594D0 113.21407318115235D0) (list 307.2705383300781D0 731.6070556640625D0 969.2612915039063D0 113.08800506591797D0) (list 318.5086975097656D0 763.4778442382813D0 1474.712646484375D0 112.83609771728516D0) (list 340.8275451660156D0 783.3787841796875D0 1510.8416748046875D0 112.77250671386719D0) (list 358.64190673828125D0 1208.460693359375D0 41.58639907836914D0 1622.9111328125D0) (list 370.96624755859375D0 1242.270751953125D0 40.31194305419922D0 113.14513397216797D0) (list 390.6309509277344D0 342.1830749511719D0 971.7630615234375D0 1278.3115234375D0) (list 415.0152587890625D0 1509.0506591796875D0 113.62545776367188D0 964.1666259765625D0) (list 415.0152587890625D0 1509.0506591796875D0 113.62545776367188D0 964.1666259765625D0) (list 464.271728515625D0 1655.981201171875D0 3064.146728515625D0 1190.043701171875D0) (list 464.271728515625D0 1655.981201171875D0 3064.146728515625D0 1190.043701171875D0) (list 481.6134033203125D0 446.1197509765625D0 1706.0902099609375D0 42.29269790649414D0) (list 530.6544799804688D0 440.9157409667969D0 40.70652389526367D0 112.5820083618164D0) (list 545.8599243164063D0 441.293212890625D0 598.98583984375D0 40.2808837890625D0) (list 557.7058715820313D0 471.82720947265625D0 446.2107238769531D0 41.842628479003906D0) (list 591.6778564453125D0 526.29345703125D0 40.45026397705078D0 112.67913818359375D0) (list 590.93310546875D0 1662.3277587890625D0 524.33740234375D0 41.066349029541016D0) (list 662.8088989257813D0 524.4682006835938D0 36.327449798583984D0 559.1229858398438D0) (list 663.5973510742188D0 522.8180541992188D0 39.994171142578125D0 554.690185546875D0) (list 666.6442260742188D0 526.0005493164063D0 558.034423828125D0 730.8783569335938D0) (list 686.2256469726563D0 637.7257080078125D0 523.0866088867188D0 814.4358520507813D0) (list 438.7751159667969D0 107.51329040527344D0 318.8321228027344D0 205.71714782714844D0) (list 112.82823181152344D0 219.9371337890625D0 465.1644592285156D0 341.6329040527344D0) (list 117.53995513916016D0 231.54115295410156D0 363.886962890625D0 489.58770751953125D0) (list 123.13404846191406D0 391.1050720214844D0 248.11534118652344D0 620.139892578125D0) (list 415.49310302734375D0 265.86090087890625D0 131.6898651123047D0 525.82958984375D0) (list 436.7850341796875D0 282.7109680175781D0 137.77149963378906D0 547.7070922851563D0) (list 306.2516174316406D0 440.13201904296875D0 143.3839111328125D0 596.9202880859375D0) (list 311.35791015625D0 493.60394287109375D0 152.43499755859375D0 985.9580078125D0) (list 348.7726135253906D0 489.54510498046875D0 160.2386016845703D0 695.0650634765625D0) (list 171.5104522705078D0 346.4563903808594D0 554.2539672851563D0 690.6790771484375D0) (list 390.1988220214844D0 182.8285369873047D0 545.2479858398438D0 925.7843017578125D0) (list 382.732421875D0 191.06976318359375D0 620.5606079101563D0 783.2774658203125D0) (list 199.00804138183594D0 412.12298583984375D0 800.4574584960938D0 655.7564086914063D0) (list 465.6131591796875D0 628.0687866210938D0 205.65667724609375D0 931.7598876953125D0) (list 455.9216003417969D0 220.0582733154297D0 891.8197021484375D0 1180.18310546875D0) (list 521.2194213867188D0 228.16842651367188D0 1041.248291015625D0 697.8109130859375D0) (list 240.5935516357422D0 535.5476684570313D0 1028.6026611328125D0 768.5457763671875D0) (list 252.84828186035156D0 777.0396728515625D0 589.5455932617188D0 1169.1497802734375D0) (list 264.2920837402344D0 620.7557373046875D0 819.5805053710938D0 1232.5816650390625D0) (list 652.5653076171875D0 275.9421691894531D0 863.3343505859375D0 36.870140075683594D0) (list 288.9903564453125D0 692.3175659179688D0 36.86198043823242D0 912.0025634765625D0) (list 305.72265625D0 734.1761474609375D0 114.22406005859375D0 38.19694137573242D0) (list 317.80474853515625D0 761.3803100585938D0 1050.3538818359375D0 40.101112365722656D0) (list 339.0673828125D0 782.56640625D0 1509.5911865234375D0 40.00058364868164D0) (list 357.2925109863281D0 1206.121826171875D0 842.7213134765625D0 40.18416976928711D0) (list 369.9169921875D0 1242.809814453125D0 902.7085571289063D0 39.84258270263672D0) (list 387.70928955078125D0 341.9143371582031D0 974.9644165039063D0 1276.9298095703125D0) (list 412.47369384765625D0 1509.153076171875D0 963.596435546875D0 35.241817474365234D0) (list 427.39007568359375D0 1466.4251708984375D0 35.19021987915039D0 117.22530364990235D0) (list 448.7253723144531D0 1632.276611328125D0 40.74893569946289D0 117.5347671508789D0) (list 462.36590576171875D0 40.498348236083984D0 1658.78125D0 116.93524932861328D0) (list 480.0179138183594D0 38.41118621826172D0 1270.3814697265625D0 1707.1275634765625D0) (list 531.255615234375D0 39.560306549072266D0) (list 545.1838989257813D0) (list 557.5399169921875D0 473.68115234375D0) (list 592.0166015625D0 530.98046875D0) (list 590.6602783203125D0 1660.6331787109375D0 529.0604248046875D0 34.962398529052734D0) (list 661.5103149414063D0) (list 662.2252807617188D0 116.82342529296875D0 526.9047241210938D0 549.81982421875D0) (list 665.5576782226563D0 117.96515655517578D0 2042.1478271484375D0 32.378360748291016D0) (list 684.7637939453125D0 727.998046875D0) (list 217.84703063964844D0 130.47988891601563D0 174.28253173828125D0 87.01126861572266D0) (list 154.89898681640625D0 308.7796630859375D0 567.7706298828125D0 360.8271484375D0) (list 185.33604431152344D0 307.24395751953125D0 428.8621826171875D0 369.0013732910156D0) (list 145.99166870117188D0 364.0606689453125D0 219.6880340576172D0 293.03411865234375D0) (list 86.70978546142578D0 175.15939331054688D0 611.836181640625D0 260.90130615234375D0) (list 310.7569274902344D0 206.17022705078125D0 106.20525360107422D0 414.70574951171875D0) (list 493.88092041015625D0 370.26959228515625D0 246.70025634765625D0 123.57874298095703D0) (list 438.862060546875D0 587.1486206054688D0 292.8943786621094D0 146.55599975585938D0) (list 348.27703857421875D0 174.60317993164063D0 522.0663452148438D0 698.0595092773438D0) (list 413.58111572265625D0 829.3265991210938D0 206.2843017578125D0 620.6751708984375D0) (list 244.477294921875D0 490.845947265625D0 736.3718872070313D0 37.69988250732422D0) (list 292.177978515625D0 582.8536376953125D0 878.7737426757813D0 1468.2244873046875D0) (list 345.6942138671875D0 692.5342407226563D0 1045.0775146484375D0 41.30077362060547D0) (list 410.4270324707031D0 822.2401123046875D0 1239.114013671875D0 310.0889892578125D0) (list 489.8948974609375D0 445.5566101074219D0 984.2182006835938D0 1987.5965576171875D0) (list 590.7939453125D0 1179.0997314453125D0 114.4240951538086D0 41.05687713623047D0) (list 693.4757690429688D0 1393.3707275390625D0 647.9271850585938D0 41.11443328857422D0) (list 814.6719970703125D0 229.61204528808594D0 740.9234008789063D0 1663.5369873046875D0) (list 975.9441528320313D0 40.86167526245117D0 115.23149871826172D0 898.7891845703125D0) (list 1178.02587890625D0 1212.1065673828125D0 1129.61572265625D0 41.80331039428711D0) (list 1412.7982177734375D0 1371.6231689453125D0 1347.25D0 1470.5982666015625D0) (list 1669.34326171875D0 1707.2037353515625D0 224.2521514892578D0 3352.187744140625D0) (list 113.20099639892578D0 1955.427001953125D0 1937.9356689453125D0 304.2736511230469D0) (list 114.29900360107422D0 2321.834716796875D0 77.11607360839844D0 195.0869903564453D0) (list 113.61376190185547D0 77.5166244506836D0 303.9239807128906D0 2770.47216796875D0) (list 113.80220794677735D0 304.6884765625D0 3365.138427734375D0 34.8023796081543D0) (list 114.00355529785156D0 4036.723876953125D0 306.70648193359375D0 985.6516723632813D0) (list 187.4757080078125D0 648.0730590820313D0 928.836181640625D0 88.28124237060547D0) (list 184.22650146484375D0 99.97183990478516D0 299.5209655761719D0 428.8802490234375D0) (list 112.60594177246094D0 219.1803741455078D0 974.686279296875D0 480.9753723144531D0) (list 130.23675537109375D0 470.5152893066406D0 271.8307189941406D0 429.6086120605469D0) (list 532.2321166992188D0 148.100830078125D0 299.6648864746094D0 825.7789916992188D0) (list 436.7402038574219D0 968.7916870117188D0 1309.5987548828125D0 162.3593292236328D0) (list 172.2789306640625D0 496.255126953125D0 943.9702758789063D0 539.3633422851563D0) (list 525.4949340820313D0 201.0199432373047D0 1094.4244384765625D0 241.61459350585938D0) (list 228.16299438476563D0 674.5859985351563D0 984.4112548828125D0 1214.8817138671875D0) (list 1321.4205322265625D0 703.3003540039063D0 446.45147705078125D0 298.0914001464844D0) (list 325.5144958496094D0 979.41748046875D0 38.78990173339844D0 1499.61083984375D0) (list 388.2247314453125D0 1395.620849609375D0 2542.947509765625D0 1264.97900390625D0) (list 456.6795349121094D0 1086.513427734375D0 41.82483673095703D0 114.33606719970703D0) (list 517.8148193359375D0 1274.9925537109375D0 39.621978759765625D0 115.10481262207031D0) (list 578.9529418945313D0 424.88067626953125D0 1438.2216796875D0 115.8565444946289D0) (list 605.6024780273438D0 1813.87451171875D0 465.86322021484375D0 116.43819427490235D0) (list 1833.6080322265625D0 1480.42626953125D0 1039.900390625D0 229.62619018554688D0) (list 708.5242309570313D0 530.6709594726563D0 115.34468078613281D0 863.5662841796875D0) (list 818.6830444335938D0 115.08830261230469D0 972.8176879882813D0 949.4656982421875D0) (list 848.5679321289063D0 979.40771484375D0 116.02944946289063D0 32.43284225463867D0) (list 32.014713287353516D0 116.32706451416016D0 202.17041015625D0 307.08837890625D0) (list 115.89515686035156D0 303.896484375D0 985.3086547851563D0 145.88751220703125D0) (list 116.02985382080078D0 76.09358215332031D0 305.54827880859375D0 318.1802062988281D0) (list 187.18040466308594D0 649.06689453125D0 104.14834594726563D0 2088.88232421875D0) (list 106.92147827148438D0 425.7138977050781D0 184.89402770996094D0 229.4894256591797D0) (list 390.0110168457031D0 112.0815200805664D0 1535.7647705078125D0 521.8135986328125D0) (list 470.4671936035156D0 129.40438842773438D0 929.0288696289063D0 1385.885009765625D0) (list 533.546142578125D0 1806.6761474609375D0 1053.87451171875D0 298.5359802246094D0) (list 439.4518127441406D0 1390.617919921875D0 161.91287231445313D0 1912.109130859375D0) (list 526.5504760742188D0 1394.3570556640625D0 487.0745849609375D0 1532.4212646484375D0) (list 112.52640533447266D0 598.96240234375D0 194.92376708984375D0 829.079345703125D0) (list 228.44154357910156D0 113.42178344726563D0 1818.252197265625D0 2445.379638671875D0) (list 1324.111083984375D0 113.49934387207031D0 820.2068481445313D0 303.0626525878906D0) (list 979.1688842773438D0 326.34222412109375D0 1499.3880615234375D0 2869.614501953125D0) (list 1250.8289794921875D0 87.0901870727539D0 115.23790740966797D0 223.96018981933594D0) (list 115.08003997802735D0 1857.0301513671875D0 849.494384765625D0 455.5118713378906D0) (list 516.4983520507813D0 116.35961151123047D0 643.8444213867188D0 85.64856719970703D0) (list 424.7873229980469D0 578.8888549804688D0 115.2420425415039D0 1440.685546875D0) (list 467.39093017578125D0 603.120849609375D0 526.0762939453125D0 848.012451171875D0) (list 1835.552734375D0 545.4326171875D0 226.70794677734375D0 301.0243835449219D0) (list 709.8197631835938D0 114.43937683105469D0 302.4113464355469D0 876.460205078125D0) (list 819.9500122070313D0 114.59454345703125D0 75.86981964111328D0 1656.1925048828125D0) (list 114.75841522216797D0 1653.7232666015625D0 1694.0504150390625D0 147.22743225097656D0) (list 115.13216400146485D0 1652.764404296875D0 302.3933410644531D0 225.7814178466797D0) (list 114.83854675292969D0 1648.4500732421875D0 302.5010986328125D0 838.2034301757813D0) (list 114.31591796875D0 863.1913452148438D0 76.59013366699219D0 301.38189697265625D0) (list 88.92688751220703D0 1209.8310546875D0 183.88270568847656D0 907.4873046875D0) (list 434.96600341796875D0 184.9308319091797D0 979.5198364257813D0 98.58789825439453D0) (list 111.49940490722656D0 222.32000732421875D0 390.4945068359375D0 596.5457153320313D0) (list 778.5897827148438D0 126.512939453125D0 557.0575561523438D0 1303.6085205078125D0) (list 545.6572265625D0 1090.9039306640625D0 848.5259399414063D0 318.96710205078125D0) (list 606.01025390625D0 1546.58154296875D0 1610.7110595703125D0 161.59518432617188D0) (list 518.9325561523438D0 1158.8609619140625D0 1656.73876953125D0 1674.1776123046875D0) (list 1493.8114013671875D0 527.4244995117188D0 193.7581024169922D0 1021.2423706054688D0) (list 979.4818115234375D0 226.78680419921875D0 671.3446044921875D0 43.643436431884766D0) (list 878.2413940429688D0 113.47030639648438D0 42.21316909790039D0 1224.388427734375D0) (list 981.6832275390625D0 1486.7197265625D0 42.639442443847656D0 149.22569274902344D0) (list 859.2682495117188D0 314.11993408203125D0 2650.126220703125D0 113.11531829833985D0) (list 454.4666748046875D0 948.655517578125D0 1639.43896484375D0 599.3577270507813D0) (list 43.67416763305664D0 113.61473846435547D0 86.77344512939453D0 362.8209533691406D0) (list 558.5396118164063D0 1415.2227783203125D0 1533.13134765625D0 41.04652786254883D0) (list 604.9208374023438D0 449.5718078613281D0 1892.203125D0 34.29859924316406D0) (list 1744.7919921875D0 1501.558349609375D0 3450.710205078125D0 229.17152404785156D0) (list 523.4375610351563D0 113.56751251220703D0 48.17027282714844D0 75.41336059570313D0) (list 114.39653778076172D0 590.0325317382813D0 975.6928100585938D0 38.54116439819336D0) (list 114.31078338623047D0 978.4859619140625D0 225.27066040039063D0 78.45411682128906D0) (list 115.55207824707031D0 303.4027404785156D0 225.4861602783203D0 1560.835693359375D0) (list 115.36534881591797D0 304.36553955078125D0 144.77935791015625D0 78.8629150390625D0) (list 113.89732360839844D0 302.02630615234375D0 78.25753784179688D0 197.72215270996094D0) (list 184.09130859375D0 91.00545501708985D0 231.21568298339844D0 256.0245056152344D0) (list 99.66670989990235D0 182.71641540527344D0 437.47509765625D0 224.94798278808594D0) (list 111.84158325195313D0 219.41830444335938D0 391.8896789550781D0 81.8623275756836D0) (list 779.1023559570313D0 127.00381469726563D0 624.22802734375D0 1481.7274169921875D0) (list 115.4791259765625D0 1090.725830078125D0 1384.5096435546875D0 2754.54052734375D0) (list 441.5050354003906D0 1546.4642333984375D0 116.94965362548828D0 36.4411735534668D0) (list 518.9882202148438D0 113.24082946777344D0 40.97431182861328D0 1657.77392578125D0) (list 40.1180534362793D0 201.2193145751953D0 244.63490295410156D0 113.75565338134766D0) (list 40.51527404785156D0 218.62930297851563D0 113.20257568359375D0 199.25523376464844D0) (list 38.55710983276367D0 113.09293365478516D0 1222.8426513671875D0 148.5626220703125D0) (list 42.084144592285156D0 1485.7210693359375D0 320.8392639160156D0 84.82147216796875D0) (list 41.079952239990234D0 860.7409057617188D0 114.78462219238281D0 86.95732116699219D0) (list 453.285400390625D0 42.237342834472656D0 114.42054748535156D0 208.53501892089844D0) (list 42.01561737060547D0 117.20890808105469D0 84.53193664550781D0 5052.0D0) (list 558.406494140625D0 40.7593879699707D0 1413.026611328125D0 415.8192138671875D0) (list 451.10479736328125D0 116.32003021240235D0 606.6019897460938D0 985.4007568359375D0) (list 227.41905212402344D0 305.7066345214844D0 1746.600341796875D0 1133.144287109375D0) (list 114.61714935302735D0 7752.08056640625D0 304.9600830078125D0 1870.1864013671875D0) (list 589.0231323242188D0 114.84092712402344D0 305.9182434082031D0 975.8458862304688D0) (list 114.67842102050781D0 977.4934692382813D0 77.625D0 307.17767333984375D0) (list 113.21623229980469D0 305.8745422363281D0 226.7465057373047D0 2089.842529296875D0) (list 115.77920532226563D0 302.81787109375D0 145.58792114257813D0 79.8590316772461D0) (list 114.01779174804688D0 302.0645751953125D0 75.64388275146485D0 143.50604248046875D0) (list 173.4528350830078D0 390.562255859375D0 215.70120239257813D0 642.2078247070313D0) (list 360.4113464355469D0 153.53427124023438D0 205.8699188232422D0 567.4244384765625D0) (list 244.6426239013672D0 179.8760223388672D0 113.67314147949219D0 739.029296875D0) (list 437.8392333984375D0 219.58322143554688D0 659.8341674804688D0 293.48040771484375D0) (list 436.05718994140625D0 261.81182861328125D0 175.4264373779297D0 610.9927978515625D0) (list 414.9255676269531D0 519.8236694335938D0 310.0546569824219D0 1041.351806640625D0) (list 370.399658203125D0 866.0164794921875D0 493.0692443847656D0 246.6627655029297D0) (list 438.9032897949219D0 293.64703369140625D0 586.6231689453125D0 1178.0284423828125D0) (list 348.865966796875D0 522.7515869140625D0 697.215087890625D0 174.97390747070313D0) (list 414.1698913574219D0 830.7078857421875D0 1249.0029296875D0 622.201416015625D0) (list 245.58755493164063D0 987.0172119140625D0 492.3598327636719D0 1736.635498046875D0) (list 585.6271362304688D0 295.9700622558594D0 1172.2822265625D0 1768.3935546875D0) (list 697.191162109375D0 350.0315246582031D0 1049.6134033203125D0 1401.2596435546875D0) (list 414.9204406738281D0 831.5833129882813D0 2093.44970703125D0 1247.2064208984375D0) (list 495.20782470703125D0 1486.61376953125D0 988.1580810546875D0 1986.5985107421875D0) (list 587.2981567382813D0 1177.0D0 1769.91650390625D0 2368.8515625D0) (list 702.4656982421875D0 1402.1209716796875D0 2827.233154296875D0 2109.550537109375D0) (list 837.4057006835938D0 1668.2725830078125D0 227.53904724121094D0 114.57479858398438D0) (list 980.8079223632813D0 41.62223815917969D0 114.88711547851563D0 2998.524169921875D0) (list 1179.5584716796875D0 3561.961669921875D0 2363.977294921875D0 116.20013427734375D0) (list 1400.8291015625D0 2825.38330078125D0 979.4509887695313D0 313.31500244140625D0) (list 1666.9986572265625D0 33.02669143676758D0 228.56118774414063D0 3345.486572265625D0) (list 1981.7724609375D0 4003.46240234375D0 114.88837432861328D0 304.7296447753906D0) (list 2359.678466796875D0 115.07868194580078D0 79.04366302490235D0 304.7276306152344D0) (list 2834.741455078125D0 113.7829818725586D0 305.36260986328125D0 77.42929077148438D0) (list 3357.76123046875D0 115.97222900390625D0 302.2812805175781D0 225.83197021484375D0) (list 4026.11767578125D0 114.18089294433594D0 307.0896911621094D0 34.19178771972656D0) (list 83.25174713134766D0 642.0718383789063D0 173.40843200683594D0 216.20513916015625D0) (list 153.4956817626953D0 360.506591796875D0 100.53887939453125D0 206.8485565185547D0) (list 244.68626403808594D0 181.2330322265625D0 739.571533203125D0 114.56723022460938D0) (list 438.27099609375D0 219.733154296875D0 659.9313354492188D0 146.40628051757813D0) (list 262.6636047363281D0 82.75276947021485D0 876.564208984375D0 175.8272705078125D0) (list 415.9732971191406D0 312.0615539550781D0 1042.4071044921875D0 833.3678588867188D0) (list 370.42138671875D0 493.6338806152344D0 866.4306030273438D0 249.442626953125D0) (list 439.4601745605469D0 293.5528869628906D0 1626.68017578125D0 1178.73583984375D0) (list 523.2039794921875D0 1225.572021484375D0 349.2129211425781D0 873.0640258789063D0) (list 413.5804748535156D0 829.9783935546875D0 623.7600708007813D0 2095.69921875D0) (list 245.5631561279297D0 492.78973388671875D0 986.7606201171875D0 1737.461669921875D0) (list 586.0757446289063D0 295.0123596191406D0 1171.00146484375D0 1769.007080078125D0) (list 697.805908203125D0 351.3565673828125D0 2474.04541015625D0 1049.3199462890625D0) (list 415.5947570800781D0 831.8929443359375D0 2093.247802734375D0 1247.560791015625D0) (list 495.065673828125D0 1487.6573486328125D0 1988.2432861328125D0 988.1660766601563D0) (list 588.6768798828125D0 1176.67041015625D0 1769.896484375D0 41.53506851196289D0) (list 708.2896118164063D0 1400.4398193359375D0 2828.429443359375D0 36.49905776977539D0) (list 836.2315063476563D0 85.0960693359375D0 40.82345962524414D0 227.7476806640625D0) (list 984.0589599609375D0 418.04144287109375D0 2998.61474609375D0 116.5398941040039D0) (list 3562.103271484375D0 39.135650634765625D0 114.5190200805664D0 1179.06298828125D0) (list 1398.1234130859375D0 2817.38330078125D0 981.2599487304688D0 113.98983001708985D0) (list 1668.503173828125D0 3354.817626953125D0 224.976806640625D0 303.3070068359375D0) (list 1985.2369384765625D0 114.79630279541016D0 304.0299987792969D0 4001.0810546875D0) (list 2360.320068359375D0 114.54020690917969D0 303.2757263183594D0 76.65187072753906D0) (list 2835.60400390625D0 115.7879409790039D0 5699.08349609375D0 79.1357650756836D0) (list 3358.66162109375D0 114.99595642089844D0 222.44264221191406D0 76.68858337402344D0) (list 4026.078125D0 114.69104766845703D0 307.44378662109375D0 77.28141021728516D0) (list 435.7871398925781D0 655.8447875976563D0 478.65142822265625D0 610.682861328125D0) (list 154.49407958984375D0 309.0429992675781D0 568.4556274414063D0 360.7449035644531D0) (list 185.34764099121094D0 368.4631042480469D0 307.2254943847656D0 430.06024169921875D0) (list 146.59365844726563D0 75.96418762207031D0 293.1759338378906D0 438.0021057128906D0) (list 259.3886413574219D0 176.8067626953125D0 612.5518188476563D0 435.53814697265625D0) (list 206.0064239501953D0 312.4821472167969D0 110.13438415527344D0 415.3631896972656D0) (list 496.67156982421875D0 372.746826171875D0 248.72731018066406D0 121.18328857421875D0) (list 294.06829833984375D0 439.581298828125D0 588.6800537109375D0 147.61187744140625D0) (list 348.05078125D0 524.4524536132813D0 175.32400512695313D0 698.8699340820313D0) (list 414.48883056640625D0 206.66819763183594D0 829.5499267578125D0 622.2745971679688D0) (list 244.61871337890625D0 491.0486145019531D0 1232.5758056640625D0 736.0381469726563D0) (list 293.4720764160156D0 581.2343139648438D0 880.13232421875D0 40.932037353515625D0) (list 344.8710632324219D0 693.5146484375D0 1045.789306640625D0 37.95396423339844D0) (list 410.077392578125D0 822.33935546875D0 1238.6312255859375D0 40.39524459838867D0) (list 491.279296875D0 445.83306884765625D0 41.49477005004883D0 985.3402099609375D0) (list 592.30615234375D0 1177.44677734375D0 42.891510009765625D0 2369.857666015625D0) (list 696.121826171875D0 1391.6776123046875D0 646.3375854492188D0 607.2330322265625D0) (list 816.5828857421875D0 229.25833129882813D0 34.56593704223633D0 742.9100341796875D0) (list 979.915771484375D0 37.079627990722656D0 114.50806427001953D0 866.4616088867188D0) (list 1178.8218994140625D0 1212.0418701171875D0 1130.229736328125D0 40.91014862060547D0) (list 1406.685791015625D0 1371.1416015625D0 1349.1024169921875D0 1471.125244140625D0) (list 1670.670654296875D0 113.12533569335938D0 1710.1005859375D0 303.2322998046875D0) (list 113.21281433105469D0 1956.0621337890625D0 1929.9923095703125D0 304.3954772949219D0) (list 113.87535095214844D0 2325.12548828125D0 304.5802001953125D0 2393.29541015625D0) (list 114.35176849365235D0 303.5014343261719D0 2768.91552734375D0 2090.634033203125D0) (list 113.98443603515625D0 145.62216186523438D0 306.3608703613281D0 3367.8125D0) (list 113.14627838134766D0 4035.673095703125D0 305.68927001953125D0 31.006258010864258D0) (list 96.85283660888672D0 145.74668884277344D0 487.77117919921875D0 241.196044921875D0) (list 114.78966522216797D0 402.5992431640625D0 639.7579956054688D0 169.61563110351563D0) (list 136.72596740722656D0 187.56190490722656D0 407.55950927734375D0 1478.676025390625D0) (list 242.81182861328125D0 411.5882263183594D0 78.83547973632813D0 163.470947265625D0) (list 96.3755111694336D0 188.6160125732422D0 273.5437316894531D0 454.02655029296875D0) (list 465.5923156738281D0 111.96322631835938D0 337.1136474609375D0 210.34312438964844D0) (list 124.97147369384766D0 251.1910400390625D0 410.3863220214844D0 513.0894775390625D0) (list 140.80905151367188D0 315.8218078613281D0 442.4160461425781D0 661.9940185546875D0) (list 372.5523986816406D0 155.5225830078125D0 486.49932861328125D0 80.94892120361328D0) (list 174.0878143310547D0 395.4784240722656D0 698.53759765625D0 113.4826431274414D0) (list 207.7262725830078D0 546.3895874023438D0 1111.392578125D0 113.8489761352539D0) (list 249.9817657470703D0 653.9249877929688D0 280.4377746582031D0 40.811466217041016D0) (list 262.6168518066406D0 784.417236328125D0 39.76447296142578D0 114.326416015625D0) (list 312.30523681640625D0 112.6944580078125D0 40.764095306396484D0 83.67642974853516D0) (list 441.99755859375D0 114.15443420410156D0 511.619873046875D0 84.71976470947266D0) (list 417.9353942871094D0 84.6812973022461D0 311.46209716796875D0 112.8476333618164D0) (list 367.6886901855469D0 325.9503479003906D0 36.83965301513672D0 416.3645324707031D0) (list 489.1221618652344D0 116.54039764404297D0 86.20446014404297D0 228.87265014648438D0) (list 486.30096435546875D0 522.8329467773438D0 205.450927734375D0 113.26249694824219D0) (list 857.4378662109375D0 982.4907836914063D0 302.38372802734375D0 115.98645782470703D0) (list 306.8432922363281D0 115.05003356933594D0 1652.8922119140625D0 1667.056884765625D0) (list 980.0166015625D0 314.7716369628906D0 114.87986755371094D0 225.906005859375D0) (list 115.99433898925781D0 226.63555908203125D0 302.0458679199219D0 147.10704040527344D0) (list 114.11424255371094D0 312.5057373046875D0 148.2665557861328D0 79.9101791381836D0) (list 113.0185775756836D0 305.0826416015625D0 80.0941390991211D0 1557.626953125D0) (list 114.35269165039063D0 304.4384460449219D0 145.18492126464844D0 1554.6575927734375D0) (list 80.8082046508789D0 297.88446044921875D0 383.75469970703125D0 618.8446655273438D0) (list 80.8082046508789D0 297.88446044921875D0 383.75469970703125D0 618.8446655273438D0) (list 195.2695770263672D0 94.20568084716797D0 126.82371520996094D0 325.5413818359375D0) (list 195.2695770263672D0 94.20568084716797D0 126.82371520996094D0 325.5413818359375D0) (list 77.7735366821289D0 155.58494567871094D0 191.5587158203125D0 386.6363830566406D0) (list 77.7735366821289D0 155.58494567871094D0 191.5587158203125D0 386.6363830566406D0) (list 184.2505645751953D0 320.4643859863281D0 553.9071044921875D0 137.5340118408203D0) (list 184.2505645751953D0 320.4643859863281D0 553.9071044921875D0 137.5340118408203D0) (list 546.5386962890625D0 273.2738037109375D0 163.5836639404297D0 1224.3748779296875D0) (list 546.5386962890625D0 273.2738037109375D0 163.5836639404297D0 1224.3748779296875D0) (list 130.3246307373047D0 455.7207336425781D0 195.02810668945313D0 325.6732482910156D0) (list 130.3246307373047D0 455.7207336425781D0 195.02810668945313D0 325.6732482910156D0) (list 78.26229858398438D0 309.1378173828125D0 154.9439697265625D0 778.0123291015625D0) (list 78.26229858398438D0 309.1378173828125D0 154.9439697265625D0 778.0123291015625D0) (list 276.1983947753906D0 184.0844268798828D0 553.4763793945313D0 647.369384765625D0) (list 276.1983947753906D0 184.0844268798828D0 553.4763793945313D0 647.369384765625D0) (list 328.6383361816406D0 219.41358947753906D0 437.60052490234375D0 768.7176513671875D0) (list 328.6383361816406D0 219.41358947753906D0 437.60052490234375D0 768.7176513671875D0) (list 261.259765625D0 131.1309051513672D0 521.5242919921875D0 391.31402587890625D0) (list 261.259765625D0 131.1309051513672D0 521.5242919921875D0 391.31402587890625D0) (list 155.13722229003906D0 309.9034729003906D0 466.1604919433594D0 777.8474731445313D0) (list 155.13722229003906D0 309.9034729003906D0 466.1604919433594D0 777.8474731445313D0) (list 369.56121826171875D0 184.70498657226563D0 553.811279296875D0 923.4159545898438D0) (list 369.56121826171875D0 184.70498657226563D0 553.811279296875D0 923.4159545898438D0) (list 437.6933288574219D0 219.11801147460938D0 657.5714721679688D0 1543.9810791015625D0) (list 437.6933288574219D0 219.11801147460938D0 657.5714721679688D0 1543.9810791015625D0) (list 261.4366760253906D0 521.7054443359375D0 782.4904174804688D0 1044.3450927734375D0) (list 261.4366760253906D0 521.7054443359375D0 782.4904174804688D0 1044.3450927734375D0) (list 309.79437255859375D0 620.9647827148438D0 1245.5081787109375D0 932.2479248046875D0) (list 309.79437255859375D0 620.9647827148438D0 1245.5081787109375D0 932.2479248046875D0) (list 369.4577331542969D0 738.5400390625D0 1109.341796875D0 2237.884765625D0) (list 369.4577331542969D0 738.5400390625D0 1109.341796875D0 2237.884765625D0) (list 438.4651794433594D0 878.6512451171875D0 1766.786865234375D0 1321.0557861328125D0) (list 438.4651794433594D0 878.6512451171875D0 1766.786865234375D0 1321.0557861328125D0) (list 522.5055541992188D0 1047.44189453125D0 1573.6307373046875D0 2104.222900390625D0) (list 522.5055541992188D0 1047.44189453125D0 1573.6307373046875D0 2104.222900390625D0) (list 621.2698364257813D0 1244.0452880859375D0 2506.359619140625D0 1872.7315673828125D0) (list 621.2698364257813D0 1244.0452880859375D0 2506.359619140625D0 1872.7315673828125D0) (list 738.8909912109375D0 1481.6683349609375D0 2229.591064453125D0 2986.8974609375D0) (list 738.8909912109375D0 1481.6683349609375D0 2229.591064453125D0 2986.8974609375D0) (list 877.8865356445313D0 1761.8289794921875D0 2655.89990234375D0) (list 877.8865356445313D0 1761.8289794921875D0 2655.89990234375D0) (list 1045.13720703125D0 2093.302490234375D0 989.6233520507813D0) (list 1045.13720703125D0 2093.302490234375D0 989.6233520507813D0) (list 1245.877685546875D0 2505.391357421875D0 1198.6396484375D0) (list 1245.877685546875D0 2505.391357421875D0 1198.6396484375D0) (list 1481.517578125D0) (list 1481.517578125D0) (list 1765.56201171875D0) (list 1765.56201171875D0) (list 2099.189453125D0) (list 2099.189453125D0) (list 2499.571044921875D0) (list 2499.571044921875D0) (list 2994.134033203125D0 5977.4755859375D0) (list 2994.134033203125D0 5977.4755859375D0) (list 3569.323486328125D0 113.65933990478516D0) (list 3569.323486328125D0 113.65933990478516D0) (list 4288.0380859375D0 113.6371078491211D0 4258.1025390625D0 145.4992218017578D0) (list 4288.0380859375D0 113.6371078491211D0 4258.1025390625D0 145.4992218017578D0) (list 180.85765075683594D0 154.47401428222656D0 307.01617431640625D0 336.65399169921875D0) (list 180.85765075683594D0 154.47401428222656D0 307.01617431640625D0 336.65399169921875D0) (list 219.24700927734375D0 145.75521850585938D0 180.49070739746094D0 822.6224365234375D0) (list 219.24700927734375D0 145.75521850585938D0 180.49070739746094D0 822.6224365234375D0) (list 130.78602600097656D0 87.09342956542969D0 609.7984008789063D0 390.94970703125D0) (list 130.78602600097656D0 87.09342956542969D0 609.7984008789063D0 390.94970703125D0) (list 309.2208251953125D0 155.0965576171875D0 568.4935302734375D0 257.1860046386719D0) (list 309.2208251953125D0 155.0965576171875D0 568.4935302734375D0 257.1860046386719D0) (list 185.2021484375D0 244.5677490234375D0 428.3051452636719D0 306.83349609375D0) (list 185.2021484375D0 244.5677490234375D0 428.3051452636719D0 306.83349609375D0) (list 734.7821044921875D0 438.006591796875D0 145.8480682373047D0 363.8564147949219D0) (list 734.7821044921875D0 438.006591796875D0 145.8480682373047D0 363.8564147949219D0) (list 260.7353820800781D0 347.6171875D0 434.4452819824219D0 608.2930908203125D0) (list 260.7353820800781D0 347.6171875D0 434.4452819824219D0 608.2930908203125D0) (list 207.5508270263672D0 414.20880126953125D0 309.4917907714844D0 519.2581787109375D0) (list 207.5508270263672D0 414.20880126953125D0 309.4917907714844D0 519.2581787109375D0) (list 369.2600402832031D0 491.630859375D0 245.76654052734375D0 123.03893280029297D0) (list 369.2600402832031D0 491.630859375D0 245.76654052734375D0 123.03893280029297D0) (list 146.02676391601563D0 438.4574279785156D0 293.2045593261719D0 586.098388671875D0) (list 146.02676391601563D0 438.4574279785156D0 293.2045593261719D0 586.098388671875D0) (list 522.4027709960938D0 348.5872497558594D0 174.9232940673828D0 870.6177368164063D0) (list 522.4027709960938D0 348.5872497558594D0 174.9232940673828D0 870.6177368164063D0) (list 413.9383544921875D0 830.1568603515625D0 620.67724609375D0 207.47036743164063D0) (list 413.9383544921875D0 830.1568603515625D0 620.67724609375D0 207.47036743164063D0) (list 244.9551544189453D0 491.3681335449219D0 985.3093872070313D0 738.048095703125D0) (list 244.9551544189453D0 491.3681335449219D0 985.3093872070313D0 738.048095703125D0) (list 293.57342529296875D0 585.7860717773438D0 878.7953491210938D0 1173.87939453125D0) (list 293.57342529296875D0 585.7860717773438D0 878.7953491210938D0 1173.87939453125D0) (list 348.4629821777344D0 696.3125610351563D0 1046.7996826171875D0 2108.40087890625D0) (list 348.4629821777344D0 696.3125610351563D0 1046.7996826171875D0 2108.40087890625D0) (list 414.44677734375D0 830.22021484375D0 1665.74072265625D0 1245.09033203125D0) (list 414.44677734375D0 830.22021484375D0 1665.74072265625D0 1245.09033203125D0) (list 492.3393859863281D0 986.8290405273438D0 1482.9307861328125D0 1984.6851806640625D0) (list 492.3393859863281D0 986.8290405273438D0 1482.9307861328125D0 1984.6851806640625D0) (list 586.1768798828125D0 1173.914306640625D0 2364.567138671875D0 1767.854736328125D0) (list 586.1768798828125D0 1173.914306640625D0 2364.567138671875D0 1767.854736328125D0) (list 698.2410278320313D0 1399.3968505859375D0 2106.887451171875D0 2823.304443359375D0) (list 698.2410278320313D0 1399.3968505859375D0 2106.887451171875D0 2823.304443359375D0) (list 830.2186279296875D0 1664.2918701171875D0) (list 830.2186279296875D0 1664.2918701171875D0) (list 988.662109375D0 1985.853515625D0) (list 988.662109375D0 1985.853515625D0) (list 1171.8594970703125D0 2357.82177734375D0 3559.268310546875D0) (list 1171.8594970703125D0 2357.82177734375D0 3559.268310546875D0) (list 1394.628662109375D0 2809.302734375D0 1459.271728515625D0) (list 1394.628662109375D0 2809.302734375D0 1459.271728515625D0) (list 1667.7138671875D0) (list 1667.7138671875D0) (list 1980.955078125D0 3955.1650390625D0 1919.5684814453125D0 1938.8211669921875D0) (list 1980.955078125D0 3955.1650390625D0 1919.5684814453125D0 1938.8211669921875D0) (list 2352.89599609375D0) (list 2352.89599609375D0) (list 2817.338623046875D0 305.9913024902344D0 2758.688232421875D0 2093.54443359375D0) (list 2817.338623046875D0 305.9913024902344D0 2758.688232421875D0 2093.54443359375D0) (list 3355.552490234375D0 3408.2841796875D0 113.80299377441406D0 305.12335205078125D0) (list 3355.552490234375D0 3408.2841796875D0 113.80299377441406D0 305.12335205078125D0) (list 3999.342041015625D0) (list 3999.342041015625D0) (list 301.83221435546875D0 384.1695556640625D0 619.1146850585938D0 244.78201293945313D0) (list 318.5298767089844D0 409.1177978515625D0 1135.8323974609375D0 290.7224426269531D0) (list 337.5918884277344D0 155.09986877441406D0 181.40530395507813D0 306.55938720703125D0) (list 391.72576904296875D0 195.76776123046875D0 326.2061767578125D0 162.99855041503906D0) (list 346.7560119628906D0 208.28431701660156D0 241.1776580810547D0 380.5030517578125D0) (list 219.3967742919922D0 181.14535522460938D0 73.38085174560547D0 822.8068237304688D0) (list 78.11825561523438D0 387.73687744140625D0 114.75971221923828D0 194.2193603515625D0) (list 82.09148406982422D0 620.4052124023438D0 576.8364868164063D0 493.3443298339844D0) (list 654.2671508789063D0 1296.9998779296875D0 610.23974609375D0 924.1576538085938D0) (list 184.491455078125D0 137.92494201660156D0 553.9335327148438D0 320.96380615234375D0) (list 488.4862365722656D0 146.24151611328125D0 194.74661254882813D0 243.0907440185547D0) (list 569.5545043945313D0 309.6312255859375D0 154.99057006835938D0 518.9876098632813D0) (list 546.8931884765625D0 1224.381103515625D0 273.25592041015625D0 602.8309936523438D0) (list 348.79803466796875D0 114.70442199707031D0 818.4426879882813D0 755.3571166992188D0) (list 185.33885192871094D0 244.91566467285156D0 429.61956787109375D0 368.83123779296875D0) (list 455.8158264160156D0 129.68328857421875D0 195.0261688232422D0 651.9114990234375D0) (list 137.6426544189453D0 414.58538818359375D0 483.68438720703125D0 693.2882690429688D0) (list 146.5529327392578D0 438.830078125D0 74.47637939453125D0 512.8612670898438D0) (list 78.26385498046875D0 154.84324645996094D0 465.3473205566406D0 309.7154846191406D0) (list 81.86772155761719D0 244.9303741455078D0 492.5802917480469D0 327.5195617675781D0) (list 259.7030944824219D0 608.4857177734375D0 346.71221923828125D0 521.6123657226563D0) (list 186.85826110839844D0 647.2882690429688D0 460.80645751953125D0 274.88232421875D0) (list 390.9439697265625D0 195.37315368652344D0 585.9114990234375D0 488.6669921875D0) (list 207.4160919189453D0 726.7301025390625D0 1040.87939453125D0 104.58432006835938D0) (list 224.292236328125D0 329.66290283203125D0 111.5841293334961D0 439.0263366699219D0) (list 231.22752380371094D0 115.04960632324219D0 465.95513916015625D0 697.7889404296875D0) (list 493.0284118652344D0 368.0847473144531D0 250.31980895996094D0 120.81381225585938D0) (list 260.66351318359375D0 392.46746826171875D0 915.8424072265625D0 524.1792602539063D0) (list 831.5486450195313D0 276.4090881347656D0 415.7085266113281D0 138.91644287109375D0) (list 293.27667236328125D0 440.14251708984375D0 145.90936279296875D0 587.2798461914063D0) (list 312.9552917480469D0 777.9408569335938D0 620.3746948242188D0 1091.3624267578125D0) (list 494.79559326171875D0 329.3539733886719D0 165.31204223632813D0 659.0263671875D0) (list 524.6255493164063D0 348.9455261230469D0 174.60630798339844D0 874.2485961914063D0) (list 187.5673370361328D0 924.5431518554688D0 554.9750366210938D0 1297.7340087890625D0) (list 393.08551025390625D0 196.3665008544922D0 1373.552734375D0 588.7973022460938D0) (list 415.8603515625D0 622.396240234375D0 829.6460571289063D0 207.9058380126953D0) (list 440.3399353027344D0 1545.083251953125D0 219.02015686035156D0 659.0375366210938D0) (list 466.5669860839844D0 231.88607788085938D0 699.3972778320313D0 1638.058349609375D0) (list 245.60960388183594D0 490.98663330078125D0 987.2223510742188D0 2238.301513671875D0) (list 260.5219421386719D0 523.7855834960938D0 784.0338745117188D0 1046.056640625D0) (list 554.1563720703125D0 277.4402160644531D0 830.8373413085938D0 1108.16455078125D0) (list 294.8724670410156D0 585.6300048828125D0 1174.592529296875D0 1470.2806396484375D0) (list 308.91046142578125D0 622.6986083984375D0 1247.64111328125D0 933.4095458984375D0) (list 328.4757385253906D0 657.5140380859375D0 986.5077514648438D0 1319.53173828125D0) (list 349.297119140625D0 699.406982421875D0 1046.220458984375D0 1399.98779296875D0) (list 368.60162353515625D0 744.1113891601563D0 1484.822021484375D0 1109.6474609375D0) (list 784.3322143554688D0 392.26446533203125D0 1971.926513671875D0 1572.4232177734375D0) (list 416.1458740234375D0 831.0311279296875D0 1244.39697265625D0 1666.6129150390625D0) (list 440.992431640625D0 877.513671875D0 1766.8709716796875D0 1322.7239990234375D0) (list 467.03973388671875D0 1401.6671142578125D0 936.6717529296875D0 1872.725830078125D0) (list 493.4427185058594D0 987.1697387695313D0 1484.28515625D0 1985.0177001953125D0) (list 522.7556762695313D0 1046.638427734375D0 1575.3096923828125D0 2105.966064453125D0) (list 555.1996459960938D0 2231.91650390625D0 2801.90576171875D0 1670.7059326171875D0) (list 588.1826782226563D0 2365.498291015625D0 1174.33447265625D0 1766.84765625D0) (list 621.55859375D0 2507.12158203125D0 1242.4351806640625D0 1876.5802001953125D0) (list 659.4816284179688D0 1322.800048828125D0 2662.60205078125D0 1989.8819580078125D0) (list 699.453369140625D0 1402.388427734375D0 2824.613037109375D0 2109.86376953125D0) (list 740.591796875D0 1483.7591552734375D0 2229.6943359375D0 2986.1611328125D0) (list 782.3025512695313D0 2366.60986328125D0 1573.3751220703125D0 713.0255737304688D0) (list 829.0010375976563D0 1666.76708984375D0 2506.080322265625D0) (list 875.2760009765625D0 1762.436767578125D0 2656.90771484375D0 976.5092163085938D0) (list 934.0497436523438D0 1870.6376953125D0 864.5382690429688D0 832.17333984375D0) (list 989.0056762695313D0 1985.3970947265625D0) (list 1047.253662109375D0 2093.331298828125D0 999.6934814453125D0 114.8140869140625D0) (list 1106.1968994140625D0 2226.386474609375D0 1147.90087890625D0 1057.49267578125D0) (list 1170.77197265625D0 2360.61376953125D0 874.406982421875D0 1270.525146484375D0) (list 1243.5347900390625D0 2503.984375D0 1200.14013671875D0 1154.5877685546875D0) (list 1315.459716796875D0 2649.170166015625D0 1385.703857421875D0 1426.881591796875D0) (list 1393.5679931640625D0 2810.213134765625D0 1315.31884765625D0 980.2129516601563D0) (list 1481.3648681640625D0 2979.83935546875D0 1543.0157470703125D0) (list 1574.9581298828125D0 3165.74658203125D0 1470.1812744140625D0 1627.173828125D0) (list 1980.8223876953125D0 3955.824462890625D0 3998.39599609375D0 1918.03662109375D0) (list 1766.94970703125D0 3556.08544921875D0 1716.5816650390625D0) (list 1869.166015625D0 3770.32861328125D0 3746.373291015625D0) (list 1980.8243408203125D0 3955.8251953125D0 3998.39453125D0 1918.0123291015625D0) (list 2099.619140625D0) (list 2221.760498046875D0) (list 2353.71240234375D0 2395.44091796875D0) (list 2499.91455078125D0 2090.10546875D0) (list 2660.72900390625D0 5327.45703125D0 2714.7177734375D0) (list 2816.952880859375D0 2761.629638671875D0 2091.141357421875D0 2896.964599609375D0) (list 2976.15087890625D0 113.19869232177735D0 5975.9462890625D0 305.3131103515625D0) (list 3159.457763671875D0 113.2335433959961D0 3085.591796875D0 2093.982421875D0) (list 3356.0166015625D0 3407.9404296875D0 51.69682312011719D0 113.82913970947266D0) (list 3572.32470703125D0 7139.978515625D0 114.52922821044922D0 3625.93212890625D0) (list 3773.9921875D0 307.64215087890625D0 51.584739685058594D0 3741.304443359375D0) (list 3998.584716796875D0 310.4776306152344D0 113.15901947021485D0 202.80274963378906D0) (list 4288.79248046875D0 4265.10791015625D0 113.35236358642578D0 49.05097579956055D0))) (setf (edition-params copy) (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40)))) (setf (create-info copy) (quote ("2015/06/10 14:33:02" "--"))) (setf (doc copy) (str-with-nl "")) copy) (quote nil) (om-make-point 522 76) "freqs" (om-make-point 45 40)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "easy-out-386.aiff" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing (0 = no specific track)" "tracknum" 0) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "markers" nil))) (om-make-point 953 776) (om-make-point 204 131) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:relative "out-files")) :device :unspecific :host :unspecific :name "easy-out-386" :type "aiff") 0 100 0))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "easy-out-386.aiff") (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale show-stems notechancolor? cmnpref obj-mode deltapict show-spectrum winpos winsize mode grillestep zoom player inport outport)) (list nil (quote t) nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 (om-make-point 0 0) nil (om-make-point 400 20) (om-make-point 370 280) 0 nil 1 (quote :libaudiostream) nil nil)) t nil nil t))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 191 336) (om-make-point 34 30) 16 "16" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "IDENTITY" (quote identity) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 404 450) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "DETUNED SAMPLE ENGINE" (quote om-darwin::ga-engine) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "" "model" nil) (om-load-inputfun (quote input-funbox) "" "fitness-function" nil))) (om-make-point 63 713) (om-make-point 395 185) (let ((om-darwin::ga (mki (quote om-darwin::ga-engine)))) (setf (om-darwin::model om-darwin::ga) (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 235 32 133 33 161 73 160 120 31 45 99 172 161 119 161 223 170 145 149 181 250 110 179 34 201 63 14 111 26 217 33 252) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 235 32 133 33 161 73 160 120 31 45 99 172 161 119 161 223 170 145 149 181 250 110 179 34 201 63 14 111 26 217 33 252)) (om-darwin::update om-darwin::spec) om-darwin::spec)) (setf (om-darwin::population om-darwin::ga) (list (list 0.17469429 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 161 186 57 171 30 242 94 223 94 4 89 242 140 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 161 186 57 171 30 242 94 223 94 4 89 242 140 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 7) (list 0.2345308 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 159 186 57 171 30 242 94 223 94 4 89 242 140 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 159 186 57 171 30 242 94 223 94 4 89 242 140 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 7) (list 0.2983453 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 161 30 57 171 186 242 94 223 94 4 89 242 140 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 161 30 57 171 186 242 94 223 94 4 89 242 140 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 7) (list 0.36566967 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 159 242 57 171 30 186 94 223 94 4 89 242 140 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 159 242 57 171 30 186 94 223 94 4 89 242 140 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 3) (list 0.43615246 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 161 30 57 171 186 242 94 223 114 4 89 242 140 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 203 99 67 103 203 5 242 161 55 182 4 16 55 109 197 97 247 161 30 57 171 186 242 94 223 114 4 89 242 140 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 2) (list 0.50951815 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 205 99 67 103 203 5 242 161 55 182 4 16 55 97 197 109 247 160 186 57 171 30 242 94 223 94 4 89 29 97 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 205 99 67 103 203 5 242 161 55 182 4 16 55 97 197 109 247 160 186 57 171 30 242 94 223 94 4 89 29 97 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 10) (list 0.585544 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 205 99 67 103 203 5 242 161 16 182 4 55 55 109 197 97 247 160 186 57 171 30 242 94 223 94 4 89 29 97 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 205 99 67 103 203 5 242 161 16 182 4 55 55 109 197 97 247 160 186 57 171 30 242 94 223 94 4 89 29 97 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 5) (list 0.6640456 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 205 99 67 103 203 5 242 161 55 182 4 16 55 97 197 109 247 160 186 57 171 94 242 30 223 94 4 89 29 97 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 205 99 67 103 203 5 242 161 55 182 4 16 55 97 197 109 247 160 186 57 171 94 242 30 223 94 4 89 29 97 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 9) (list 0.7448671 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 205 99 67 103 203 5 242 161 55 182 4 16 55 97 197 109 247 160 186 57 223 30 242 94 171 94 4 89 29 97 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 205 99 67 103 203 5 242 161 55 182 4 16 55 97 197 109 247 160 186 57 223 30 242 94 171 94 4 89 29 97 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 2) (list 0.82787496 (let ((om-darwin::spec (if (find-class (quote om-darwin::om-specimen) nil) (make-instance (quote om-darwin::om-specimen) :raw-genotype (list 203 99 67 103 203 55 242 161 5 182 4 16 13 109 197 97 247 160 186 57 171 94 242 94 223 30 4 89 242 140 194 104) :decoder nil :operons nil :pheno nil :from-file t)))) (setf (om-darwin::raw-genotype om-darwin::spec) (list 203 99 67 103 203 55 242 161 5 182 4 16 13 109 197 97 247 160 186 57 171 94 242 94 223 30 4 89 242 140 194 104)) (om-darwin::update om-darwin::spec) om-darwin::spec) 10))) (setf (om-darwin::generation om-darwin::ga) 22823) (setf (om-darwin::result om-darwin::ga) (if (find-class (quote poly) nil) (let ((newobj (make-instance (quote poly) :voices (list (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (1 (((4 4) ((1 (1 1 1 1 1 1 1 1)) (1 (1 1 1 1 1 1 1 1)) -2))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (7502)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8202)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7702)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6748)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6248)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6948)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6448)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7148)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7052)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6552)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7252)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6898)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6398)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7098)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6748)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7448)) :ldur (quote (83)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 90) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (nil))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))) om-darwin::ga) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 724 74) (om-make-point 370 280) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote ggff)) 24 2)) t nil nil t))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DEFINE-SPECIES" (quote define-species) (quote ((om-load-inputfun (quote input-funbox) "" "FUN" nil) (om-load-inputkeyword (quote input-keyword) "" "finalizer" (quote :finalizer) nil nil))) (om-make-point 99 585) (om-make-point 118 67) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "sample id and detune" (om-load-patch-abs1 "sample id and detune" (quote ((let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 107 214) (om-make-point 27 30) 0 "0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "1-" (quote 1-) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 158 174) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM-GENE" (quote om-gene) (quote ((om-load-inputfun (quote input-funbox) "minimum value" "MIN" 0) (om-load-inputfun (quote input-funbox) "maximum value" "MAX" 1))) (om-make-point 127 256) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "num-operons" 1 (om-make-point 364 373) "" "num-operons" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 0))) (om-make-point 213 533) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 75 44) (quote "detune in midicents") "" (om-make-point 345 292) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 381 182) (om-make-point 34 30) 50 "50" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 10) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 293 295) (om-make-point 46 35) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 346 96) (om-make-point 27 30) 3 "3" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 241 101) (om-make-point 32 30) -3 "-3" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM-GENE" (quote om-gene) (quote ((om-load-inputfun (quote input-funbox) "minimum value" "MIN" 0) (om-load-inputfun (quote input-funbox) "maximum value" "MAX" 1))) (om-make-point 277 168) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 145 641) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "n-samples" 0 (om-make-point 95 77) "" "n-samples" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 183 422) (om-make-point 84 43) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((12 0 1 0 nil 0) (0 0 2 0 nil 0) (1 0 2 1 nil 0) (13 0 4 0 nil 0) (3 0 4 1 nil 0) (10 0 7 0 nil 0) (6 0 7 1 nil 0) (9 0 10 0 nil 0) (8 0 10 1 nil 0) (4 0 11 0 nil 0) (2 0 13 0 nil 0) (7 0 13 1 nil 0))) 6.1 nil "" (om-make-point 611 197) (om-make-point 710 919)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil) (om-load-inputfun (quote input-funbox) "" "input 2" nil))) (om-make-point 78 400) (om-make-point 163 67) (list nil) "l" "sample id and detune"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "MAPCAN" (quote mapcan) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 263 274) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "OM-DIRECTORY" (quote om-directory) (quote ((om-load-inputfun (quote input-funbox) "PATH" "PATH" nil))) (om-make-point 60 186) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "OM-CHOOSE-DIRECTORY-DIALOG" (quote om-choose-directory-dialog) (quote nil) (om-make-point 103 72) nil (list (om-make-pathname :directory (quote (:absolute "Users" "holbrook" "Data" "projects" "cbsolo-ws" "in-files" "Prepared Pianos")) :device :unspecific :host nil :name nil :type nil)) "x" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "OM-DIRECTORY" (quote om-directory) (quote ((om-load-inputfun (quote input-funbox) "PATH" "PATH" nil))) (om-make-point 148 127) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((26 0 0 0 nil 0) (11 0 0 1 nil 0) (3 0 2 0 nil 0) (1 0 2 1 nil 0) (2 0 4 0 nil 0) (8 0 4 1 nil 0) (16 0 6 1 nil 0) (7 0 8 0 nil 0) (5 0 8 1 nil 0) (27 0 9 0 nil 0) (11 0 9 1 nil 0) (16 0 10 1 nil 0) (4 0 11 0 nil 0) (6 0 11 1 nil 0) (12 0 13 0 nil 0) (23 0 14 0 nil 0) (16 0 15 1 nil 0) (13 0 15 2 nil 0) (15 0 18 0 nil 0) (17 0 18 1 nil 0) (26 0 19 0 nil 0) (29 0 19 1 nil 0) (22 0 20 1 nil 0) (29 0 21 0 nil 0) (19 0 23 0 nil 0) (27 0 26 1 nil 0) (11 0 26 2 nil 0) (28 0 27 0 nil 0) (20 0 27 1 nil 0) (21 0 28 0 nil 0) (24 0 28 1 nil 0) (30 0 29 0 nil 0) (32 0 29 1 nil 0) (31 0 32 0 nil 0))) nil 6.1))
