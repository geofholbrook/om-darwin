; OM File Header - Saved 2015/06/08 15:47:47
; (6.050102 :patc (om-make-point 442 10) (om-make-point 709 360) (om-make-point 1187 631) "" 183 0 nil nil)
; End File Header
; External resources 
; (list (list (quote :abstraction) "../SDIF tools/hrm-to-bpf.omp"))
(in-package :om)(load-lib-for (quote ("OM-pm2")))(setf *om-current-persistent* (om-load-patch1 "harmonic partial track a whole folder" (quote ((om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 647 82) (om-make-point 38 30) "aif" "\"aif\"" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 685 196) (om-make-point 21 30) 5 "5" nil) (om-load-boxcall (quote genfun) "FIRST-N" (quote first-n) (quote ((om-load-inputfun (quote input-funbox) "a list" "LIST" nil) (om-load-inputfun (quote input-funbox) "number of elements" "N" 0))) (om-make-point 597 297) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "MAPCAR" (quote mapcar) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 367 421) (om-make-point 156 43) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 348 135) (quote "do f0-estimate and harmonic partial-tracking analysis, and save sdif files in place.$") "" (om-make-point 60 53) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote abstraction) "create-f0-and-hrm-files" (om-load-patch-abs1 "create-f0-and-hrm-files" (quote ((om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 492 695) (om-make-point 64 30) (list 0.1 0.1) "(0.1 0.1)" nil) (om-load-boxcall (quote lispfun) "IDENTITY" (quote identity) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 104 155) nil nil nil nil 1) (om-load-editor-box1 "BPF-LIB" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "bpf-list" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj))))) (om-make-point 384 996) (om-make-point 204 110) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1368 0.2271 0.3175 0.4078 0.4982 0.5886 0.6789 0.7693 0.8596 0.95 1.0403 1.1307 1.2211 1.3114 1.4018 1.4921 1.5825 1.6729 1.7632 1.8536 1.9439 2.0343 2.1246 2.215 2.3054 2.3957 2.4861 2.5764 2.6668 2.7572 2.8475 2.9379 3.0282 3.1186 3.2089 3.2993 3.3897 3.48 3.5704 3.6607 3.7511 3.8415 3.9318 4.0222 4.1125 4.2029 4.2933 4.3836 4.474 4.5643 4.6547 4.745 4.8354 4.9258 5.0161 5.1065 5.1968 5.2872 5.3776 5.4679 5.5583 5.6486 5.739 5.8294 5.9197 6.0101 6.1004 6.1908 6.2811 6.3715 6.4619 6.5522 6.6426 6.7329 6.8233 6.9137 7.004 7.0944 7.1847 7.2751 7.3654 7.4558 7.5462 7.6365 7.7269 7.8172 7.9076 7.998 8.0883 8.1787 8.269 8.3594 8.4498 8.5401 8.6305 8.7208 8.8112 8.9015 8.9918)) (quote (4.0E-4 0.001 0.0022 0.0028 0.0032 0.0033 0.0033 0.0033 0.0032 0.0031 0.003 0.0028 0.0027 0.0025 0.0024 0.0023 0.0021 0.0019 0.0019 0.0017 0.0016 0.0015 0.0014 0.0014 0.0012 0.0011 0.001 0.001 0.001 0.001 9.0E-4 9.0E-4 9.0E-4 7.0E-4 7.0E-4 7.0E-4 6.0E-4 7.0E-4 6.0E-4 5.0E-4 5.0E-4 5.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 5.0E-4 4.0E-4 3.0E-4 4.0E-4 3.0E-4 3.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1338 0.2213 0.3087 0.3961 0.4835 0.571 0.6584 0.7458 0.8332 0.9207 1.0081 1.0955 1.1829 1.2704 1.3578 1.4452 1.5326 1.6201 1.7075 1.7949 1.8824 1.9698 2.0572 2.1446 2.2321 2.3195 2.4069 2.4943 2.5818 2.6692 2.7566 2.844 2.9315 3.0189 3.1063 3.1937 3.2812 3.3686 3.456 3.5434 3.6309 3.7183 3.8057 3.8932 3.9806 4.068 4.1554 4.2429 4.3303 4.4177 4.5051 4.5926 4.68 4.7674 4.8548 4.9423 5.0297 5.1171 5.2045 5.292 5.3794 5.4668 5.5543 5.6417 5.7291 5.8165 5.904 5.9914 6.0788 6.1662 6.2537 6.3411 6.4285 6.5159 6.6034 6.6908 6.7782 6.8656 6.9531 7.0405 7.1279 7.2154 7.3028 7.3902 7.4776 7.5651 7.6525 7.7399 7.8273 7.9148 8.0022 8.0896 8.177 8.2645 8.3519 8.4393 8.5267 8.6142 8.7016)) (quote (0.0 1.0E-4 4.0E-4 9.0E-4 0.0012 0.0014 0.0014 0.0016 0.0017 0.0018 0.0019 0.0019 0.002 0.0018 0.0017 0.0017 0.0016 0.0015 0.0014 0.0013 0.0012 0.0011 0.001 9.0E-4 7.0E-4 6.0E-4 5.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 0.0 0.0 0.0 0.0 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1318 0.2173 0.3027 0.3881 0.4736 0.559 0.6444 0.7299 0.8153 0.9007 0.9862 1.0716 1.157 1.2425 1.3279 1.4133 1.4988 1.5842 1.6696 1.7551 1.8405 1.9259 2.0114 2.0968 2.1822 2.2677 2.3531 2.4385 2.524 2.6094 2.6948 2.7803 2.8657 2.9511 3.0366 3.122 3.2074 3.2929 3.3783 3.4637 3.5492 3.6346 3.72 3.8055 3.8909 3.9763 4.0618 4.1472 4.2326 4.3181 4.4035 4.4889 4.5744 4.6598 4.7452 4.8307 4.9161 5.0015 5.087 5.1724 5.2578 5.3433 5.4287 5.5141 5.5996 5.685 5.7704 5.8559 5.9413 6.0267 6.1122 6.1976 6.283 6.3685 6.4539 6.5393 6.6248 6.7102 6.7956 6.8811 6.9665 7.0519 7.1374 7.2228 7.3082 7.3937 7.4791 7.5645 7.65 7.7354 7.8208 7.9063 7.9917 8.0771 8.1626 8.248 8.3334 8.4189 8.5044)) (quote (0.0 0.0 8.0E-4 0.0016 0.0021 0.0025 0.0028 0.0029 0.0031 0.0033 0.0033 0.0033 0.0032 0.0031 0.0029 0.0028 0.0026 0.0025 0.0024 0.0023 0.0022 0.002 0.0019 0.0017 0.0016 0.0014 0.0013 0.0011 0.001 0.001 9.0E-4 8.0E-4 8.0E-4 7.0E-4 6.0E-4 5.0E-4 4.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1315 0.2166 0.3016 0.3867 0.4718 0.5569 0.642 0.727 0.8121 0.8972 0.9823 1.0674 1.1525 1.2375 1.3226 1.4077 1.4928 1.5779 1.6629 1.748 1.8331 1.9182 2.0033 2.0883 2.1734 2.2585 2.3436 2.4287 2.5137 2.5988 2.6839 2.769 2.8541 2.9391 3.0242 3.1093 3.1944 3.2795 3.3646 3.4496 3.5347 3.6198 3.7049 3.79 3.875 3.9601 4.0452 4.1303 4.2154 4.3004 4.3855 4.4706 4.5557 4.6408 4.7258 4.8109 4.896 4.9811 5.0662 5.1512 5.2363 5.3214 5.4065 5.4916 5.5767 5.6617 5.7468 5.8319 5.917 6.0021 6.0871 6.1722 6.2573 6.3424 6.4275 6.5125 6.5976 6.6827 6.7678 6.8529 6.9379 7.023 7.1081 7.1932 7.2783 7.3633 7.4484 7.5335 7.6186 7.7037 7.7887 7.8738 7.9589 8.044 8.1291 8.2142 8.2992 8.3843 8.4694)) (quote (0.0 0.0 6.0E-4 8.0E-4 0.0015 0.0022 0.0026 0.0029 0.0028 0.0026 0.0024 0.0023 0.0022 0.002 0.0019 0.0017 0.0016 0.0015 0.0013 0.0012 0.0011 0.001 9.0E-4 7.0E-4 7.0E-4 6.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 4.0E-4 4.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1326 0.2188 0.305 0.3912 0.4774 0.5636 0.6498 0.736 0.8222 0.9083 0.9945 1.0807 1.1669 1.2531 1.3393 1.4255 1.5117 1.5979 1.6841 1.7703 1.8565 1.9427 2.0289 2.1151 2.2013 2.2875 2.3737 2.4599 2.5461 2.6322 2.7184 2.8046 2.8908 2.977 3.0632 3.1494 3.2356 3.3218 3.408 3.4942 3.5804 3.6666 3.7528 3.839 3.9252 4.0114 4.0976 4.1838 4.27 4.3561 4.4423 4.5285 4.6147 4.7009 4.7871 4.8733 4.9595 5.0457 5.1319 5.2181 5.3043 5.3905 5.4767 5.5629 5.6491 5.7353 5.8215 5.9077 5.9939 6.08 6.1662 6.2524 6.3386 6.4248 6.511 6.5972 6.6834 6.7696 6.8558 6.942 7.0282 7.1144 7.2006 7.2868 7.373 7.4592 7.5454 7.6316 7.7178 7.8039 7.8901 7.9763 8.0625 8.1487 8.2349 8.3211 8.4073 8.4935 8.5797)) (quote (0.0 0.0 7.0E-4 0.003 0.0045 0.0055 0.0059 0.0054 0.0047 0.0044 0.0044 0.0043 0.0044 0.0044 0.0043 0.0042 0.0041 0.004 0.0039 0.0037 0.0035 0.0032 0.0029 0.0026 0.0023 0.0021 0.0018 0.0014 0.0013 0.0011 0.001 9.0E-4 8.0E-4 7.0E-4 5.0E-4 5.0E-4 4.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 1.0E-4 0.0 0.0 0.0 0.0 0.0 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1271 0.2079 0.2886 0.3694 0.4501 0.5309 0.6116 0.6923 0.7731 0.8538 0.9346 1.0153 1.0961 1.1768 1.2575 1.3383 1.419 1.4998 1.5805 1.6612 1.742 1.8227 1.9035 1.9842 2.065 2.1457 2.2264 2.3072 2.3879 2.4687 2.5494 2.6302 2.7109 2.7916 2.8724 2.9531 3.0339 3.1146 3.1954 3.2761 3.3568 3.4376 3.5183 3.5991 3.6798 3.7605 3.8413 3.922 4.0028 4.0835 4.1643 4.245 4.3257 4.4065 4.4872 4.568 4.6487 4.7295 4.8102 4.8909 4.9717 5.0524 5.1332 5.2139 5.2947 5.3754 5.4561 5.5369 5.6176 5.6984 5.7791 5.8599 5.9406 6.0213 6.1021 6.1828 6.2636 6.3443 6.425 6.5058 6.5865 6.6673 6.748 6.8288 6.9095 6.9902 7.071 7.1517 7.2325 7.3132 7.394 7.4747 7.5554 7.6362 7.7169 7.7977 7.8784 7.9592 8.0399)) (quote (0.0 0.0 9.0E-4 0.0015 0.0018 0.0029 0.0037 0.0043 0.0048 0.0052 0.0054 0.0055 0.0053 0.0051 0.0048 0.0046 0.0044 0.0042 0.0041 0.004 0.0038 0.0037 0.0034 0.0032 0.0028 0.0026 0.0023 0.0021 0.0018 0.0014 0.0013 0.0012 0.001 9.0E-4 8.0E-4 7.0E-4 5.0E-4 4.0E-4 3.0E-4 2.0E-4 1.0E-4 1.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1294 0.2123 0.2953 0.3783 0.4613 0.5442 0.6272 0.7102 0.7931 0.8761 0.9591 1.042 1.125 1.208 1.291 1.3739 1.4569 1.5399 1.6228 1.7058 1.7888 1.8718 1.9547 2.0377 2.1207 2.2036 2.2866 2.3696 2.4526 2.5355 2.6185 2.7015 2.7844 2.8674 2.9504 3.0333 3.1163 3.1993 3.2823 3.3652 3.4482 3.5312 3.6141 3.6971 3.7801 3.8631 3.946 4.029 4.112 4.1949 4.2779 4.3609 4.4438 4.5268 4.6098 4.6928 4.7757 4.8587 4.9417 5.0246 5.1076 5.1906 5.2736 5.3565 5.4395 5.5225 5.6054 5.6884 5.7714 5.8543 5.9373 6.0203 6.1033 6.1862 6.2692 6.3522 6.4351 6.5181 6.6011 6.6841 6.767 6.85 6.933 7.0159 7.0989 7.1819 7.2648 7.3478 7.4308 7.5138 7.5967 7.6797 7.7627 7.8456 7.9286 8.0116 8.0946 8.1775 8.2605)) (quote (1.0E-4 1.0E-4 9.0E-4 0.0031 0.0058 0.0076 0.0091 0.0102 0.0109 0.0108 0.0105 0.0101 0.0096 0.0092 0.0087 0.008 0.0075 0.007 0.0067 0.0062 0.0058 0.0054 0.0047 0.0042 0.0036 0.0032 0.0028 0.0026 0.002 0.0019 0.0018 0.0016 0.0016 0.0015 0.0014 0.001 8.0E-4 5.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1271 0.2078 0.2885 0.3691 0.4498 0.5305 0.6112 0.6919 0.7726 0.8532 0.9339 1.0146 1.0953 1.176 1.2567 1.3373 1.418 1.4987 1.5794 1.6601 1.7408 1.8214 1.9021 1.9828 2.0635 2.1442 2.2249 2.3055 2.3862 2.4669 2.5476 2.6283 2.709 2.7897 2.8703 2.951 3.0317 3.1124 3.1931 3.2738 3.3544 3.4351 3.5158 3.5965 3.6772 3.7579 3.8385 3.9192 3.9999 4.0806 4.1613 4.242 4.3226 4.4033 4.484 4.5647 4.6454 4.7261 4.8067 4.8874 4.9681 5.0488 5.1295 5.2102 5.2909 5.3715 5.4522 5.5329 5.6136 5.6943 5.775 5.8556 5.9363 6.017 6.0977 6.1784 6.2591 6.3397 6.4204 6.5011 6.5818 6.6625 6.7432 6.8238 6.9045 6.9852 7.0659 7.1466 7.2273 7.3079 7.3886 7.4693 7.55 7.6307 7.7114 7.792 7.8727 7.9534 8.0341)) (quote (0.0 1.0E-4 3.0E-4 0.0017 0.0017 0.0021 0.0024 0.0026 0.0026 0.0029 0.0028 0.0028 0.0026 0.0027 0.0024 0.0023 0.002 0.0018 0.0017 0.0016 0.0015 0.0014 0.0013 0.0012 0.0011 0.001 9.0E-4 8.0E-4 6.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1267 0.2069 0.2872 0.3675 0.4478 0.528 0.6083 0.6886 0.7689 0.8491 0.9294 1.0097 1.0899 1.1702 1.2505 1.3308 1.411 1.4913 1.5716 1.6519 1.7321 1.8124 1.8927 1.9729 2.0532 2.1335 2.2138 2.294 2.3743 2.4546 2.5349 2.6151 2.6954 2.7757 2.8559 2.9362 3.0165 3.0968 3.177 3.2573 3.3376 3.4179 3.4981 3.5784 3.6587 3.7389 3.8192 3.8995 3.9798 4.06 4.1403 4.2206 4.3009 4.3811 4.4614 4.5417 4.6219 4.7022 4.7825 4.8628 4.943 5.0233 5.1036 5.1839 5.2641 5.3444 5.4247 5.5049 5.5852 5.6655 5.7458 5.826 5.9063 5.9866 6.0669 6.1471 6.2274 6.3077 6.3879 6.4682 6.5485 6.6288 6.709 6.7893 6.8696 6.9499 7.0301 7.1104 7.1907 7.2709 7.3512 7.4315 7.5118 7.592 7.6723 7.7526 7.8329 7.9131 7.9934)) (quote (0.0 0.0 1.0E-4 2.0E-4 5.0E-4 9.0E-4 0.0014 0.0016 0.002 0.0024 0.0025 0.0026 0.0024 0.0022 0.0024 0.0024 0.0025 0.0022 0.002 0.0019 0.0016 0.0015 0.0014 0.0013 0.0011 0.001 9.0E-4 8.0E-4 7.0E-4 5.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1299 0.2134 0.2969 0.3804 0.4639 0.5474 0.6309 0.7144 0.7979 0.8814 0.9649 1.0484 1.1319 1.2154 1.2989 1.3824 1.4659 1.5494 1.6329 1.7164 1.7999 1.8834 1.9669 2.0504 2.1338 2.2173 2.3008 2.3843 2.4678 2.5513 2.6348 2.7183 2.8018 2.8853 2.9688 3.0523 3.1358 3.2193 3.3028 3.3863 3.4698 3.5533 3.6368 3.7203 3.8038 3.8873 3.9708 4.0543 4.1378 4.2213 4.3048 4.3883 4.4718 4.5553 4.6388 4.7223 4.8058 4.8893 4.9728 5.0563 5.1398 5.2233 5.3068 5.3903 5.4738 5.5573 5.6408 5.7243 5.8078 5.8913 5.9748 6.0583 6.1418 6.2253 6.3087 6.3922 6.4757 6.5592 6.6427 6.7262 6.8097 6.8932 6.9767 7.0602 7.1437 7.2272 7.3107 7.3942 7.4777 7.5612 7.6447 7.7282 7.8117 7.8952 7.9787 8.0622 8.1457 8.2292 8.3127)) (quote (1.0E-4 0.0 4.0E-4 0.0022 0.0036 0.004 0.0047 0.005 0.0051 0.0052 0.0056 0.0063 0.006 0.006 0.0059 0.0055 0.0053 0.0049 0.0047 0.0044 0.0041 0.0038 0.0034 0.003 0.0028 0.0024 0.0022 0.0019 0.0015 0.0015 0.0014 0.0014 0.0013 0.0012 0.0011 8.0E-4 6.0E-4 5.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 4.0E-4 3.0E-4 3.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 3.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 1.0E-4 1.0E-4 0.0 0.0 0.0 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 1.0E-4 0.0 0.0 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.127 0.2075 0.2881 0.3687 0.4492 0.5298 0.6104 0.6909 0.7715 0.8521 0.9326 1.0132 1.0938 1.1743 1.2549 1.3355 1.416 1.4966 1.5772 1.6577 1.7383 1.8189 1.8994 1.98 2.0606 2.1411 2.2217 2.3023 2.3828 2.4634 2.544 2.6245 2.7051 2.7857 2.8662 2.9468 3.0274 3.1079 3.1885 3.2691 3.3496 3.4302 3.5108 3.5913 3.6719 3.7525 3.833 3.9136 3.9942 4.0747 4.1553 4.2359 4.3164 4.397 4.4776 4.5581 4.6387 4.7193 4.7998 4.8804 4.961 5.0415 5.1221 5.2027 5.2832 5.3638 5.4444 5.5249 5.6055 5.6861 5.7666 5.8472 5.9278 6.0083 6.0889 6.1695 6.25 6.3306 6.4112 6.4917 6.5723 6.6529 6.7334 6.814 6.8946 6.9751 7.0557 7.1363 7.2168 7.2974 7.378 7.4585 7.5391 7.6197 7.7002 7.7808 7.8614 7.9419 8.0224)) (quote (1.0E-4 1.0E-4 5.0E-4 0.0017 0.0034 0.0056 0.0072 0.0087 0.0093 0.0085 0.0076 0.0084 0.0093 0.0099 0.0098 0.01 0.0101 0.0097 0.0092 0.0089 0.0084 0.008 0.0074 0.0067 0.006 0.0054 0.0047 0.004 0.0034 0.0026 0.0022 0.0018 0.0015 0.0013 0.0011 9.0E-4 5.0E-4 4.0E-4 3.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 2.0E-4 2.0E-4 1.0E-4 0.0 0.0 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1266 0.2068 0.287 0.3673 0.4475 0.5277 0.6079 0.6881 0.7683 0.8485 0.9288 1.009 1.0892 1.1694 1.2496 1.3298 1.41 1.4903 1.5705 1.6507 1.7309 1.8111 1.8913 1.9715 2.0518 2.132 2.2122 2.2924 2.3726 2.4528 2.533 2.6133 2.6935 2.7737 2.8539 2.9341 3.0143 3.0945 3.1747 3.255 3.3352 3.4154 3.4956 3.5758 3.656 3.7362 3.8165 3.8967 3.9769 4.0571 4.1373 4.2175 4.2977 4.378 4.4582 4.5384 4.6186 4.6988 4.779 4.8592 4.9395 5.0197 5.0999 5.1801 5.2603 5.3405 5.4207 5.501 5.5812 5.6614 5.7416 5.8218 5.902 5.9822 6.0625 6.1427 6.2229 6.3031 6.3833 6.4635 6.5437 6.624 6.7042 6.7844 6.8646 6.9448 7.025 7.1052 7.1855 7.2657 7.3459 7.4261 7.5063 7.5865 7.6667 7.7469 7.8272 7.9074 7.9876)) (quote (1.0E-4 1.0E-4 6.0E-4 0.0021 0.0048 0.0064 0.0083 0.0086 0.0096 0.0102 0.0097 0.0091 0.0088 0.0084 0.0081 0.0074 0.0064 0.0056 0.0056 0.0055 0.0053 0.0051 0.0047 0.0045 0.0041 0.004 0.0036 0.0033 0.003 0.0023 0.0021 0.0018 0.0016 0.0015 0.0013 0.0011 8.0E-4 7.0E-4 6.0E-4 5.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 3.0E-4 2.0E-4 1.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1225 0.1986 0.2747 0.3508 0.427 0.5031 0.5792 0.6553 0.7314 0.8075 0.8836 0.9597 1.0358 1.1119 1.1881 1.2642 1.3403 1.4164 1.4925 1.5686 1.6447 1.7208 1.7969 1.873 1.9492 2.0253 2.1014 2.1775 2.2536 2.3297 2.4058 2.4819 2.558 2.6341 2.7103 2.7864 2.8625 2.9386 3.0147 3.0908 3.1669 3.243 3.3191 3.3952 3.4714 3.5475 3.6236 3.6997 3.7758 3.8519 3.928 4.0041 4.0802 4.1563 4.2325 4.3086 4.3847 4.4608 4.5369 4.613 4.6891 4.7652 4.8413 4.9174 4.9936 5.0697 5.1458 5.2219 5.298 5.3741 5.4502 5.5263 5.6024 5.6785 5.7547 5.8308 5.9069 5.983 6.0591 6.1352 6.2113 6.2874 6.3635 6.4396 6.5158 6.5919 6.668 6.7441 6.8202 6.8963 6.9724 7.0485 7.1246 7.2007 7.2769 7.353 7.4291 7.5052 7.5813)) (quote (1.0E-4 1.0E-4 3.0E-4 0.0016 0.0021 0.0038 0.0056 0.0068 0.0072 0.007 0.0064 0.0065 0.0073 0.0066 0.006 0.0055 0.0048 0.0045 0.0045 0.0044 0.0044 0.0041 0.0039 0.0038 0.0035 0.0031 0.0028 0.0024 0.0021 0.0019 0.0014 0.0012 0.0011 9.0E-4 8.0E-4 7.0E-4 6.0E-4 5.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 0.0 0.0 0.0 0.0 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1203 0.1943 0.2682 0.3422 0.4161 0.49 0.564 0.6379 0.7119 0.7858 0.8597 0.9337 1.0076 1.0816 1.1555 1.2294 1.3034 1.3773 1.4513 1.5252 1.5991 1.6731 1.747 1.821 1.8949 1.9689 2.0428 2.1167 2.1907 2.2646 2.3386 2.4125 2.4864 2.5604 2.6343 2.7083 2.7822 2.8561 2.9301 3.004 3.078 3.1519 3.2258 3.2998 3.3737 3.4477 3.5216 3.5955 3.6695 3.7434 3.8174 3.8913 3.9652 4.0392 4.1131 4.1871 4.261 4.3349 4.4089 4.4828 4.5568 4.6307 4.7046 4.7786 4.8525 4.9265 5.0004 5.0743 5.1483 5.2222 5.2962 5.3701 5.4441 5.518 5.5919 5.6659 5.7398 5.8138 5.8877 5.9616 6.0356 6.1095 6.1835 6.2574 6.3313 6.4053 6.4792 6.5532 6.6271 6.701 6.775 6.8489 6.9229 6.9968 7.0707 7.1447 7.2186 7.2926 7.3665)) (quote (0.0 1.0E-4 1.0E-4 5.0E-4 0.0016 0.0025 0.0027 0.003 0.0029 0.0025 0.0019 0.002 0.0021 0.0017 0.0013 0.0011 0.0013 0.0018 0.002 0.002 0.002 0.002 0.002 0.0018 0.0017 0.0017 0.0016 0.0015 0.0014 0.0013 0.0011 9.0E-4 7.0E-4 7.0E-4 7.0E-4 6.0E-4 5.0E-4 5.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1283 0.2101 0.292 0.3738 0.4557 0.5375 0.6194 0.7013 0.7831 0.865 0.9468 1.0287 1.1105 1.1924 1.2742 1.3561 1.438 1.5198 1.6017 1.6835 1.7654 1.8472 1.9291 2.011 2.0928 2.1747 2.2565 2.3384 2.4202 2.5021 2.584 2.6658 2.7477 2.8295 2.9114 2.9932 3.0751 3.1569 3.2388 3.3207 3.4025 3.4844 3.5662 3.6481 3.7299 3.8118 3.8937 3.9755 4.0574 4.1392 4.2211 4.3029 4.3848 4.4667 4.5485 4.6304 4.7122 4.7941 4.8759 4.9578 5.0397 5.1215 5.2034 5.2852 5.3671 5.4489 5.5308 5.6126 5.6945 5.7764 5.8582 5.9401 6.0219 6.1038 6.1856 6.2675 6.3494 6.4312 6.5131 6.5949 6.6768 6.7586 6.8405 6.9224 7.0042 7.0861 7.1679 7.2498 7.3316 7.4135 7.4954 7.5772 7.6591 7.7409 7.8228 7.9046 7.9865 8.0684 8.1503)) (quote (0.0 0.0 1.0E-4 9.0E-4 0.0012 0.0021 0.0033 0.0046 0.005 0.0057 0.0057 0.0052 0.0045 0.0046 0.0045 0.0043 0.0041 0.0037 0.0035 0.0032 0.0029 0.0028 0.0025 0.0022 0.002 0.0017 0.0015 0.0014 0.001 8.0E-4 7.0E-4 6.0E-4 5.0E-4 4.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 0.0 0.0 0.0 0.0 1.0E-4 0.0 0.0 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1182 0.1899 0.2617 0.3335 0.4053 0.477 0.5488 0.6206 0.6923 0.7641 0.8359 0.9076 0.9794 1.0512 1.123 1.1947 1.2665 1.3383 1.41 1.4818 1.5536 1.6254 1.6971 1.7689 1.8407 1.9124 1.9842 2.056 2.1278 2.1995 2.2713 2.3431 2.4148 2.4866 2.5584 2.6301 2.7019 2.7737 2.8455 2.9172 2.989 3.0608 3.1325 3.2043 3.2761 3.3479 3.4196 3.4914 3.5632 3.6349 3.7067 3.7785 3.8502 3.922 3.9938 4.0656 4.1373 4.2091 4.2809 4.3526 4.4244 4.4962 4.568 4.6397 4.7115 4.7833 4.855 4.9268 4.9986 5.0703 5.1421 5.2139 5.2857 5.3574 5.4292 5.501 5.5727 5.6445 5.7163 5.7881 5.8598 5.9316 6.0034 6.0751 6.1469 6.2187 6.2904 6.3622 6.434 6.5058 6.5775 6.6493 6.7211 6.7928 6.8646 6.9364 7.0082 7.0799 7.1517)) (quote (0.0 1.0E-4 1.0E-4 0.001 0.0017 0.0037 0.0049 0.0055 0.0058 0.0065 0.0066 0.0057 0.0055 0.0056 0.0056 0.0054 0.0056 0.0058 0.0058 0.0057 0.0054 0.0052 0.0047 0.0046 0.0042 0.0037 0.0035 0.003 0.0028 0.0024 0.002 0.0018 0.0013 0.0011 0.0011 0.001 9.0E-4 9.0E-4 8.0E-4 7.0E-4 6.0E-4 6.0E-4 5.0E-4 4.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1157 0.185 0.2543 0.3236 0.3929 0.4622 0.5316 0.6009 0.6702 0.7395 0.8088 0.8781 0.9474 1.0167 1.086 1.1553 1.2246 1.2939 1.3633 1.4326 1.5019 1.5712 1.6405 1.7098 1.7791 1.8484 1.9177 1.987 2.0563 2.1256 2.195 2.2643 2.3336 2.4029 2.4722 2.5415 2.6108 2.6801 2.7494 2.8187 2.888 2.9573 3.0266 3.096 3.1653 3.2346 3.3039 3.3732 3.4425 3.5118 3.5811 3.6504 3.7197 3.789 3.8583 3.9277 3.997 4.0663 4.1356 4.2049 4.2742 4.3435 4.4128 4.4821 4.5514 4.6207 4.69 4.7594 4.8287 4.898 4.9673 5.0366 5.1059 5.1752 5.2445 5.3138 5.3831 5.4524 5.5217 5.591 5.6604 5.7297 5.799 5.8683 5.9376 6.0069 6.0762 6.1455 6.2148 6.2841 6.3534 6.4227 6.4921 6.5614 6.6307 6.7 6.7693 6.8386 6.9079)) (quote (1.0E-4 1.0E-4 2.0E-4 7.0E-4 0.0021 0.0024 0.0031 0.004 0.0049 0.006 0.0067 0.0073 0.0074 0.0069 0.0067 0.0071 0.0068 0.0068 0.0061 0.0055 0.0052 0.0049 0.0048 0.0046 0.0044 0.004 0.0036 0.0032 0.0029 0.0026 0.0022 0.002 0.0017 0.0013 0.001 9.0E-4 8.0E-4 7.0E-4 6.0E-4 6.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1181 0.1897 0.2614 0.333 0.4047 0.4763 0.548 0.6196 0.6913 0.7629 0.8346 0.9062 0.9779 1.0495 1.1212 1.1929 1.2645 1.3362 1.4078 1.4795 1.5511 1.6228 1.6944 1.7661 1.8377 1.9094 1.981 2.0527 2.1244 2.196 2.2677 2.3393 2.411 2.4826 2.5543 2.6259 2.6976 2.7692 2.8409 2.9125 2.9842 3.0558 3.1275 3.1992 3.2708 3.3425 3.4141 3.4858 3.5574 3.6291 3.7007 3.7724 3.844 3.9157 3.9873 4.059 4.1307 4.2023 4.274 4.3456 4.4173 4.4889 4.5606 4.6322 4.7039 4.7755 4.8472 4.9188 4.9905 5.0621 5.1338 5.2055 5.2771 5.3488 5.4204 5.4921 5.5637 5.6354 5.707 5.7787 5.8503 5.922 5.9936 6.0653 6.1369 6.2086 6.2803 6.3519 6.4236 6.4952 6.5669 6.6385 6.7102 6.7818 6.8535 6.9251 6.9968 7.0684 7.1401)) (quote (1.0E-4 0.0 1.0E-4 8.0E-4 0.0014 0.003 0.0044 0.0047 0.0052 0.0053 0.0056 0.0054 0.0053 0.0052 0.0054 0.0058 0.0058 0.0054 0.0049 0.0048 0.0046 0.0043 0.004 0.0038 0.0035 0.0032 0.0029 0.0025 0.0023 0.0019 0.0017 0.0015 0.0012 0.001 0.001 9.0E-4 8.0E-4 8.0E-4 7.0E-4 6.0E-4 5.0E-4 4.0E-4 4.0E-4 3.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1131 0.1799 0.2466 0.3133 0.38 0.4468 0.5135 0.5802 0.647 0.7137 0.7804 0.8471 0.9139 0.9806 1.0473 1.1141 1.1808 1.2475 1.3142 1.381 1.4477 1.5144 1.5812 1.6479 1.7146 1.7813 1.8481 1.9148 1.9815 2.0482 2.115 2.1817 2.2484 2.3152 2.3819 2.4486 2.5153 2.5821 2.6488 2.7155 2.7823 2.849 2.9157 2.9824 3.0492 3.1159 3.1826 3.2494 3.3161 3.3828 3.4495 3.5163 3.583 3.6497 3.7165 3.7832 3.8499 3.9166 3.9834 4.0501 4.1168 4.1836 4.2503 4.317 4.3837 4.4505 4.5172 4.5839 4.6507 4.7174 4.7841 4.8508 4.9176 4.9843 5.051 5.1177 5.1845 5.2512 5.3179 5.3847 5.4514 5.5181 5.5848 5.6516 5.7183 5.785 5.8518 5.9185 5.9852 6.0519 6.1187 6.1854 6.2521 6.3189 6.3856 6.4523 6.519 6.5858 6.6525)) (quote (0.0 0.0 1.0E-4 3.0E-4 0.001 0.002 0.002 0.0024 0.0029 0.0033 0.0035 0.0038 0.0042 0.005 0.0051 0.0047 0.0048 0.0047 0.0045 0.004 0.0036 0.0034 0.0031 0.003 0.0028 0.0027 0.0025 0.0022 0.002 0.0019 0.0017 0.0015 0.0013 0.0011 8.0E-4 6.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 1.0E-4 0.0 0.0 0.0 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1141 0.1817 0.2494 0.3171 0.3847 0.4524 0.5201 0.5877 0.6554 0.7231 0.7907 0.8584 0.9261 0.9937 1.0614 1.1291 1.1967 1.2644 1.3321 1.3997 1.4674 1.5351 1.6027 1.6704 1.7381 1.8057 1.8734 1.9411 2.0087 2.0764 2.1441 2.2117 2.2794 2.3471 2.4147 2.4824 2.5501 2.6177 2.6854 2.7531 2.8207 2.8884 2.9561 3.0237 3.0914 3.1591 3.2267 3.2944 3.3621 3.4297 3.4974 3.5651 3.6327 3.7004 3.7681 3.8357 3.9034 3.9711 4.0387 4.1064 4.1741 4.2417 4.3094 4.3771 4.4447 4.5124 4.5801 4.6477 4.7154 4.7831 4.8507 4.9184 4.9861 5.0537 5.1214 5.1891 5.2567 5.3244 5.3921 5.4597 5.5274 5.5951 5.6627 5.7304 5.7981 5.8657 5.9334 6.0011 6.0687 6.1364 6.2041 6.2717 6.3394 6.4071 6.4747 6.5424 6.6101 6.6777 6.7454)) (quote (0.0 1.0E-4 1.0E-4 2.0E-4 7.0E-4 9.0E-4 0.0017 0.0025 0.003 0.0031 0.0029 0.0032 0.0033 0.0035 0.0036 0.0034 0.0033 0.0032 0.0028 0.0029 0.0028 0.0025 0.0024 0.0023 0.0022 0.002 0.0019 0.0018 0.0016 0.0014 0.0013 0.0011 0.001 8.0E-4 6.0E-4 5.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1126 0.1788 0.245 0.3112 0.3774 0.4436 0.5098 0.576 0.6422 0.7084 0.7746 0.8408 0.907 0.9732 1.0394 1.1056 1.1718 1.238 1.3042 1.3704 1.4366 1.5028 1.569 1.6352 1.7014 1.7676 1.8338 1.9 1.9662 2.0324 2.0986 2.1648 2.231 2.2972 2.3634 2.4296 2.4958 2.562 2.6282 2.6944 2.7606 2.8268 2.893 2.9592 3.0254 3.0916 3.1578 3.224 3.2902 3.3564 3.4226 3.4888 3.555 3.6212 3.6874 3.7536 3.8198 3.886 3.9522 4.0184 4.0846 4.1508 4.217 4.2832 4.3494 4.4156 4.4818 4.548 4.6142 4.6804 4.7466 4.8128 4.879 4.9452 5.0114 5.0776 5.1438 5.21 5.2762 5.3424 5.4086 5.4748 5.541 5.6072 5.6734 5.7396 5.8058 5.872 5.9382 6.0044 6.0706 6.1368 6.203 6.2692 6.3354 6.4016 6.4678 6.534 6.6002)) (quote (0.0 1.0E-4 0.0 2.0E-4 3.0E-4 9.0E-4 0.001 0.001 0.0014 0.0018 0.0019 0.0017 0.0019 0.0021 0.0022 0.0021 0.002 0.002 0.0019 0.0016 0.0016 0.0016 0.0015 0.0014 0.0013 0.0012 0.0012 0.0011 0.001 8.0E-4 8.0E-4 6.0E-4 6.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 1.0E-4 0.0 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1106 0.1748 0.239 0.3032 0.3674 0.4316 0.4958 0.5601 0.6243 0.6885 0.7527 0.8169 0.8811 0.9453 1.0095 1.0737 1.1379 1.2021 1.2663 1.3305 1.3947 1.459 1.5232 1.5874 1.6516 1.7158 1.78 1.8442 1.9084 1.9726 2.0368 2.101 2.1652 2.2294 2.2936 2.3579 2.4221 2.4863 2.5505 2.6147 2.6789 2.7431 2.8073 2.8715 2.9357 2.9999 3.0641 3.1283 3.1925 3.2568 3.321 3.3852 3.4494 3.5136 3.5778 3.642 3.7062 3.7704 3.8346 3.8988 3.963 4.0272 4.0914 4.1557 4.2199 4.2841 4.3483 4.4125 4.4767 4.5409 4.6051 4.6693 4.7335 4.7977 4.8619 4.9261 4.9903 5.0546 5.1188 5.183 5.2472 5.3114 5.3756 5.4398 5.504 5.5682 5.6324 5.6966 5.7608 5.825 5.8892 5.9535 6.0177 6.0819 6.1461 6.2103 6.2745 6.3387 6.4029)) (quote (0.0 0.0 0.0 1.0E-4 3.0E-4 4.0E-4 7.0E-4 0.0011 0.0013 0.0016 0.0017 0.0017 0.0019 0.0023 0.0023 0.0018 0.0018 0.0017 0.0016 0.0016 0.0013 0.0013 0.0013 0.0014 0.0014 0.0013 0.0013 0.0012 0.0011 9.0E-4 8.0E-4 7.0E-4 6.0E-4 6.0E-4 5.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1022 0.158 0.2139 0.2697 0.3255 0.3813 0.4372 0.493 0.5488 0.6046 0.6604 0.7163 0.7721 0.8279 0.8837 0.9396 0.9954 1.0512 1.107 1.1628 1.2187 1.2745 1.3303 1.3861 1.442 1.4978 1.5536 1.6094 1.6652 1.7211 1.7769 1.8327 1.8885 1.9444 2.0002 2.056 2.1118 2.1676 2.2235 2.2793 2.3351 2.3909 2.4468 2.5026 2.5584 2.6142 2.67 2.7259 2.7817 2.8375 2.8933 2.9492 3.005 3.0608 3.1166 3.1724 3.2283 3.2841 3.3399 3.3957 3.4516 3.5074 3.5632 3.619 3.6748 3.7307 3.7865 3.8423 3.8981 3.954 4.0098 4.0656 4.1214 4.1772 4.2331 4.2889 4.3447 4.4005 4.4564 4.5122 4.568 4.6238 4.6796 4.7355 4.7913 4.8471 4.9029 4.9588 5.0146 5.0704 5.1262 5.182 5.2379 5.2937 5.3495 5.4053 5.4612 5.517 5.5728)) (quote (0.0 0.0 0.0 0.0 1.0E-4 2.0E-4 4.0E-4 5.0E-4 5.0E-4 6.0E-4 6.0E-4 6.0E-4 7.0E-4 6.0E-4 7.0E-4 7.0E-4 6.0E-4 6.0E-4 6.0E-4 6.0E-4 5.0E-4 5.0E-4 4.0E-4 3.0E-4 5.0E-4 6.0E-4 6.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 5.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1086 0.1707 0.2329 0.295 0.3572 0.4193 0.4815 0.5436 0.6058 0.6679 0.7301 0.7923 0.8544 0.9166 0.9787 1.0409 1.103 1.1652 1.2273 1.2895 1.3516 1.4138 1.476 1.5381 1.6003 1.6624 1.7246 1.7867 1.8489 1.911 1.9732 2.0353 2.0975 2.1597 2.2218 2.284 2.3461 2.4083 2.4704 2.5326 2.5947 2.6569 2.719 2.7812 2.8434 2.9055 2.9677 3.0298 3.092 3.1541 3.2163 3.2784 3.3406 3.4027 3.4649 3.5271 3.5892 3.6514 3.7135 3.7757 3.8378 3.9 3.9621 4.0243 4.0864 4.1486 4.2108 4.2729 4.3351 4.3972 4.4594 4.5215 4.5837 4.6458 4.708 4.7701 4.8323 4.8945 4.9566 5.0188 5.0809 5.1431 5.2052 5.2674 5.3295 5.3917 5.4538 5.516 5.5782 5.6403 5.7025 5.7646 5.8268 5.8889 5.9511 6.0132 6.0754 6.1376 6.1998)) (quote (0.0 0.0 0.0 0.0 0.0 1.0E-4 1.0E-4 1.0E-4 2.0E-4 3.0E-4 5.0E-4 5.0E-4 4.0E-4 6.0E-4 8.0E-4 8.0E-4 4.0E-4 5.0E-4 4.0E-4 2.0E-4 1.0E-4 2.0E-4 2.0E-4 3.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1114 0.1765 0.2415 0.3065 0.3715 0.4366 0.5016 0.5666 0.6316 0.6967 0.7617 0.8267 0.8918 0.9568 1.0218 1.0868 1.1519 1.2169 1.2819 1.3469 1.412 1.477 1.542 1.6071 1.6721 1.7371 1.8021 1.8672 1.9322 1.9972 2.0622 2.1273 2.1923 2.2573 2.3224 2.3874 2.4524 2.5174 2.5825 2.6475 2.7125 2.7775 2.8426 2.9076 2.9726 3.0377 3.1027 3.1677 3.2327 3.2978 3.3628 3.4278 3.4928 3.5579 3.6229 3.6879 3.753 3.818 3.883 3.948 4.0131 4.0781 4.1431 4.2081 4.2732 4.3382 4.4032 4.4683 4.5333 4.5983 4.6633 4.7284 4.7934 4.8584 4.9234 4.9885 5.0535 5.1185 5.1836 5.2486 5.3136 5.3786 5.4437 5.5087 5.5737 5.6387 5.7038 5.7688 5.8338 5.8989 5.9639 6.0289 6.0939 6.159 6.224 6.289 6.354 6.4191 6.4841)) (quote (0.0 0.0 0.0 0.0 1.0E-4 2.0E-4 5.0E-4 8.0E-4 9.0E-4 7.0E-4 9.0E-4 0.001 0.0012 0.0013 0.0012 0.0012 0.0012 0.0011 0.0014 0.0014 0.0013 0.0013 0.0012 0.0011 0.0011 0.001 9.0E-4 9.0E-4 8.0E-4 8.0E-4 7.0E-4 6.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1085 0.1706 0.2327 0.2948 0.3569 0.419 0.4811 0.5432 0.6053 0.6674 0.7295 0.7916 0.8536 0.9157 0.9778 1.0399 1.102 1.1641 1.2262 1.2883 1.3504 1.4125 1.4746 1.5367 1.5988 1.6609 1.723 1.7851 1.8472 1.9093 1.9714 2.0335 2.0956 2.1577 2.2198 2.2819 2.344 2.406 2.4681 2.5302 2.5923 2.6544 2.7165 2.7786 2.8407 2.9028 2.9649 3.027 3.0891 3.1512 3.2133 3.2754 3.3375 3.3996 3.4617 3.5238 3.5859 3.648 3.7101 3.7722 3.8343 3.8963 3.9584 4.0205 4.0826 4.1447 4.2068 4.2689 4.331 4.3931 4.4552 4.5173 4.5794 4.6415 4.7036 4.7657 4.8278 4.8899 4.952 5.0141 5.0762 5.1383 5.2004 5.2625 5.3246 5.3867 5.4488 5.5108 5.5729 5.635 5.6971 5.7592 5.8213 5.8834 5.9455 6.0076 6.0697 6.1318 6.1939)) (quote (0.0 0.0 0.0 0.0 1.0E-4 3.0E-4 4.0E-4 6.0E-4 9.0E-4 0.0011 0.0013 0.0015 0.0017 0.0016 0.0015 0.0013 0.0013 0.0016 0.0016 0.0017 0.0015 0.0014 0.0013 0.0011 0.001 0.001 9.0E-4 9.0E-4 8.0E-4 8.0E-4 7.0E-4 6.0E-4 6.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.108 0.1695 0.2311 0.2927 0.3542 0.4158 0.4774 0.5389 0.6005 0.6621 0.7236 0.7852 0.8468 0.9083 0.9699 1.0315 1.0931 1.1546 1.2162 1.2778 1.3393 1.4009 1.4625 1.524 1.5856 1.6472 1.7087 1.7703 1.8319 1.8934 1.955 2.0166 2.0781 2.1397 2.2013 2.2628 2.3244 2.386 2.4475 2.5091 2.5707 2.6322 2.6938 2.7554 2.8169 2.8785 2.9401 3.0016 3.0632 3.1248 3.1864 3.2479 3.3095 3.3711 3.4326 3.4942 3.5558 3.6173 3.6789 3.7405 3.802 3.8636 3.9252 3.9867 4.0483 4.1099 4.1714 4.233 4.2946 4.3561 4.4177 4.4793 4.5408 4.6024 4.664 4.7255 4.7871 4.8487 4.9103 4.9718 5.0334 5.095 5.1565 5.2181 5.2797 5.3412 5.4028 5.4644 5.5259 5.5875 5.6491 5.7106 5.7722 5.8338 5.8953 5.9569 6.0185 6.08 6.1415)) (quote (0.0 0.0 0.0 0.0 1.0E-4 2.0E-4 4.0E-4 6.0E-4 8.0E-4 0.001 9.0E-4 9.0E-4 0.001 9.0E-4 0.001 0.001 0.001 0.001 0.001 9.0E-4 9.0E-4 8.0E-4 8.0E-4 8.0E-4 8.0E-4 8.0E-4 7.0E-4 7.0E-4 7.0E-4 6.0E-4 6.0E-4 6.0E-4 5.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1091 0.1719 0.2346 0.2974 0.3601 0.4228 0.4856 0.5483 0.6111 0.6738 0.7365 0.7993 0.862 0.9248 0.9875 1.0502 1.113 1.1757 1.2385 1.3012 1.3639 1.4267 1.4894 1.5522 1.6149 1.6777 1.7404 1.8031 1.8659 1.9286 1.9914 2.0541 2.1168 2.1796 2.2423 2.3051 2.3678 2.4305 2.4933 2.556 2.6188 2.6815 2.7442 2.807 2.8697 2.9325 2.9952 3.0579 3.1207 3.1834 3.2462 3.3089 3.3716 3.4344 3.4971 3.5599 3.6226 3.6853 3.7481 3.8108 3.8736 3.9363 3.999 4.0618 4.1245 4.1873 4.25 4.3127 4.3755 4.4382 4.501 4.5637 4.6264 4.6892 4.7519 4.8147 4.8774 4.9401 5.0029 5.0656 5.1284 5.1911 5.2539 5.3166 5.3793 5.4421 5.5048 5.5676 5.6303 5.693 5.7558 5.8185 5.8813 5.944 6.0067 6.0695 6.1322 6.195 6.2577)) (quote (0.0 0.0 0.0 0.0 1.0E-4 3.0E-4 4.0E-4 5.0E-4 6.0E-4 8.0E-4 0.001 0.0012 0.0013 0.0012 0.0012 0.0014 0.0014 0.0015 0.0014 0.0013 0.0013 0.0013 0.0012 0.0012 0.0012 0.0011 0.0011 0.001 0.001 9.0E-4 8.0E-4 7.0E-4 6.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 2.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1118 0.1772 0.2425 0.3079 0.3733 0.4387 0.5041 0.5694 0.6348 0.7002 0.7656 0.831 0.8963 0.9617 1.0271 1.0925 1.1579 1.2232 1.2886 1.354 1.4194 1.4848 1.5501 1.6155 1.6809 1.7463 1.8117 1.877 1.9424 2.0078 2.0732 2.1386 2.2039 2.2693 2.3347 2.4001 2.4655 2.5308 2.5962 2.6616 2.727 2.7924 2.8577 2.9231 2.9885 3.0539 3.1193 3.1846 3.25 3.3154 3.3808 3.4462 3.5115 3.5769 3.6423 3.7077 3.7731 3.8384 3.9038 3.9692 4.0346 4.1 4.1653 4.2307 4.2961 4.3615 4.4268 4.4922 4.5576 4.623 4.6884 4.7537 4.8191 4.8845 4.9499 5.0153 5.0806 5.146 5.2114 5.2768 5.3422 5.4075 5.4729 5.5383 5.6037 5.6691 5.7344 5.7998 5.8652 5.9306 5.996 6.0613 6.1267 6.1921 6.2575 6.3229 6.3882 6.4536 6.519)) (quote (0.0 0.0 0.0 0.0 1.0E-4 3.0E-4 6.0E-4 0.001 0.0013 0.0013 0.0012 0.0013 0.0013 0.0014 0.0015 0.0016 0.0017 0.0016 0.0015 0.0015 0.0015 0.0014 0.0013 0.0012 0.0011 0.0011 0.0011 0.001 9.0E-4 8.0E-4 7.0E-4 7.0E-4 6.0E-4 6.0E-4 6.0E-4 5.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0464 0.1093 0.1722 0.2352 0.2981 0.361 0.4239 0.4868 0.5497 0.6127 0.6756 0.7385 0.8014 0.8643 0.9272 0.9902 1.0531 1.116 1.1789 1.2418 1.3047 1.3677 1.4306 1.4935 1.5564 1.6193 1.6822 1.7452 1.8081 1.871 1.9339 1.9968 2.0598 2.1227 2.1856 2.2485 2.3114 2.3743 2.4373 2.5002 2.5631 2.626 2.6889 2.7518 2.8148 2.8777 2.9406 3.0035 3.0664 3.1293 3.1923 3.2552 3.3181 3.381 3.4439 3.5068 3.5698 3.6327 3.6956 3.7585 3.8214 3.8844 3.9473 4.0102 4.0731 4.136 4.1989 4.2619 4.3248 4.3877 4.4506 4.5135 4.5764 4.6394 4.7023 4.7652 4.8281 4.891 4.9539 5.0169 5.0798 5.1427 5.2056 5.2685 5.3314 5.3944 5.4573 5.5202 5.5831 5.646 5.709 5.7719 5.8348 5.8977 5.9606 6.0235 6.0865 6.1494 6.2123)) (quote (0.0 0.0 0.0 0.0 1.0E-4 3.0E-4 6.0E-4 7.0E-4 7.0E-4 9.0E-4 0.001 0.0013 0.0014 0.0014 0.0015 0.0018 0.0018 0.0017 0.0016 0.0015 0.0015 0.0016 0.0016 0.0015 0.0014 0.0013 0.0012 0.0011 0.001 9.0E-4 8.0E-4 7.0E-4 7.0E-4 6.0E-4 6.0E-4 6.0E-4 5.0E-4 5.0E-4 4.0E-4 4.0E-4 4.0E-4 4.0E-4 4.0E-4 3.0E-4 3.0E-4 3.0E-4 2.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 1.0E-4 1.0E-4 1.0E-4 1.0E-4 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote bpf) 4))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) newobj)) :from-file t)) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 155 97) (om-make-point 1224 784))) t nil nil nil) (om-load-boxcall (quote patch-box) "hrm-sdif-viz" (quote ("elements" "SDIF tools" "hrm-to-bpf")) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil))) (om-make-point 312 853) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 328 653) (om-make-point 40 30) -100 "-100" nil) (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 628 242) (om-make-point 42 30) 1200 "1200" nil) (om-load-boxcall (quote abstraction) "f0-estimate-fname" (om-load-lisp-abspatch "f0-estimate-fname" 6.050102 ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$(lambda (snd-path sdif-path min max ) $$  (let* ((supervp \"/Applications/AudioSculpt\\\\ 3.0.22/AudioSculpt\\\\ 3.0.app/Contents/MacOS/supervp\"))$         $    (om-shell (string+ supervp$                       \" -t -ns -S\"$                       (namestring snd-path)$                       \" -Af0 \\\"fm\" (prin1-to-string min) \", fM\" (prin1-to-string max) \", F4000, sn50, smooth3 ,Cdem\\\" \"$                       \"-Np3 -M0.0928798168897629s -oversamp 8 -Wblackman  -Of4 \"$                       (namestring sdif-path)))$$    sdif-path))") (quote ((om-load-inputfun (quote input-funbox) "" "SND-PATH" nil) (om-load-inputfun (quote input-funbox) "" "SDIF-PATH" nil) (om-load-inputfun (quote input-funbox) "" "MIN" nil) (om-load-inputfun (quote input-funbox) "" "MAX" nil))) (om-make-point 406 628) nil nil nil "f0-estimate-fname") (om-load-boxcall (quote abstraction) "f0-pathname" (om-load-lisp-abspatch "f0-pathname" 6.050102 "$$(lambda (sndpath) $$  (make-pathname :directory (pathname-directory sndpath) $                 :name (string+ (pathname-name sndpath) \"-f0\") $                 :type \"sdif\")$)") (quote ((om-load-inputfun (quote input-funbox) "" "SNDPATH" nil))) (om-make-point 395 362) nil nil nil "f0-pathname") (om-load-boxcomment "comment" (om-make-point 157 39) (quote "F0 margin for error") "" (om-make-point 632 424) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" nil) (om-load-inputfun (quote input-funbox) "number or list" "NUM" 0.8))) (om-make-point 617 536) (om-make-point 61 35) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 705 471) (om-make-point 32 30) 1.2 "1.2" nil) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 579 437) (om-make-point 32 30) 0.8 "0.8" nil) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" nil) (om-load-inputfun (quote input-funbox) "number or list" "NUM" 0.8))) (om-make-point 504 530) (om-make-point 61 35) nil nil nil 1) (om-load-boxcall (quote genfun) "MC->F" (quote mc->f) (quote ((om-load-inputfun (quote input-funbox) "pitch or pitch list (midicents)" "MIDICS?" 6000))) (om-make-point 486 423) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM-" (quote om-) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 1200) (om-load-inputfun (quote input-funbox) "number or list" "NUM" 1200))) (om-make-point 539 354) (om-make-point 69 35) nil nil nil 1) (om-load-boxcall (quote genfun) "N->MC" (quote n->mc) (quote ((om-load-inputfun (quote input-funbox) "note name or list of note names" "STRS" (list "C3")))) (om-make-point 519 284) nil nil nil nil 1) (om-load-boxcall (quote abstraction) "get-base-note" (om-load-lisp-abspatch "get-base-note" 6.050102 ";;; Edit a valid LAMBDA EXPRESSION for \"get-base-note\"$;;; e.g. (lambda (arg1 arg2 ...) ( ... ))$$;; assumes note name is between second and third hyphen!$(lambda (sndpath)$  (let ((name (pathname-name sndpath)))$    (loop for char in (coerce name 'list)$          for pos from 0$          if (equalp char #\\-)$          collect pos into hyphens$          finally return$          (subseq name (1+ (second hyphens)) (third hyphens)))))") (quote ((om-load-inputfun (quote input-funbox) "" "SNDPATH" nil))) (om-make-point 469 181) nil nil nil nil) (om-load-boxcall (quote lispfun) "CAR" (quote car) (quote ((om-load-inputfun (quote input-funbox) "X" "X" nil))) (om-make-point 214 85) nil nil nil nil 1) (om-load-boxinstance "TEST" (let ((copy (make-instance (quote omlistinstance) :name "TEST" :icon 129))) (setf (instance copy) (list (om-make-pathname :directory (quote (:absolute "Network" "Servers" "hebus.ircam.fr" "Volumes" "Bernardus2-3" "Cursus" "Cursus1-12-13" "holbrook" "samples" "decresc")) :device :unspecific :host nil :name "Acc-decresc-A1-ffpp" :type "aif"))) (setf (edition-params copy) (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40)))) (setf (create-info copy) (quote ("2012/12/16 18:17:36" "--"))) (setf (doc copy) (str-with-nl "")) copy) (quote nil) (om-make-point 261 21) "TEST" (om-make-point 45 40)) (om-load-boxcall (quote genfun) "PARTIAL-TRACKING" (quote partial-tracking) (quote ((om-load-inputfun (quote input-funbox) "" "SELF" nil) (om-load-inputkeyword (quote input-keyword) "" "max-partials" (quote :max-partials) 12 nil) (om-load-inputkeyword (quote input-keyword) "" "out" (quote :out) "partials.sdif" nil) (om-load-inputkeyword (quote input-keyword) "" "analysis-type" (quote :analysis-type) "harmonic" (list (list "Harmonic" "harmonic") (list "Inharmonic" "inharmonic"))) (om-load-inputkeyword (quote input-keyword) "" "analysis-params" (quote :analysis-params) (list 20 0.0 50 1 3 0.017 50 0.009) nil) (om-load-inputkeyword (quote input-keyword) "" "amp-treshold" (quote :amp-treshold) -40 nil) (om-load-inputkeyword (quote input-keyword) "" "smoothing-enveloppe" (quote :smoothing-enveloppe) (list 0.0 0.0) nil))) (om-make-point 75 747) (om-make-point 351 67) nil nil nil 1) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 154 632) (om-make-point 35 30) 250 "250" nil) (om-load-boxcall (quote abstraction) "hrm-pathname" (om-load-lisp-abspatch "hrm-pathname" 6.050102 "$$(lambda (sndpath) $$  (make-pathname :directory (pathname-directory sndpath) $                 :name (string+ (pathname-name sndpath) \"-hrm\") $                 :type \"sdif\")$)") (quote ((om-load-inputfun (quote input-funbox) "" "SNDPATH" nil))) (om-make-point 216 557) nil nil nil "hrm-pathname") (om-load-boxin "input" 0 (om-make-point 94 38) "" nil nil nil) (om-load-boxout "output" 0 (om-make-point 128 851) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (quote ((22 0 1 0 nil 0) (3 0 2 0 nil 0) (19 0 3 0 nil 0) (1 0 6 0 nil 0) (7 0 6 1 nil 0) (12 0 6 2 nil 0) (9 0 6 3 nil 0) (1 0 7 0 nil 0) (13 0 9 0 nil 0) (10 0 9 1 nil 0) (13 0 12 0 nil 0) (11 0 12 1 nil 0) (14 0 13 0 nil 0) (15 0 14 0 nil 0) (5 0 14 1 nil 0) (16 0 15 0 nil 0) (1 0 16 0 nil 0) (18 0 17 0 nil 0) (1 0 19 0 nil 0) (20 0 19 1 nil 0) (21 0 19 2 nil 0) (6 0 19 4 nil 0) (4 0 19 5 nil 0) (0 0 19 6 nil 0) (1 0 21 0 nil 0) (19 0 23 0 nil 0))) 6.050102 nil "" (om-make-point 889 0) (om-make-point 874 1156)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil))) (om-make-point 229 202) nil nil "l" "create-f0-and-hrm-files") (om-load-boxcomment "comment" (om-make-point 371 111) (quote "first I did this in the terminal: $$cd /Volumes/Sol/Sol-v2.0/Sounds$for f in `find . -name \"*-decresc-*.*\" -print`; do$cp $<dollarsign>f ~/samples/decresc;$done$") "" (om-make-point 812 16) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote lispfun) "OM-CHOOSE-DIRECTORY-DIALOG" (quote om-choose-directory-dialog) (quote nil) (om-make-point 557 22) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "OM-DIRECTORY" (quote om-directory) (quote ((om-load-inputfun (quote input-funbox) "PATH" "PATH" nil) (om-load-inputkeyword (quote input-keyword) "" "type" (quote :type) nil nil))) (om-make-point 525 124) nil nil nil nil 1))) (quote ((8 0 2 0 nil 0) (1 0 2 1 nil 0) (5 0 3 0 nil 0) (8 0 3 1 nil 0) (7 0 8 0 nil 0) (0 0 8 1 nil 0))) nil 6.050102))
