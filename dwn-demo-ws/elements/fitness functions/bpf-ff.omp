; OM File Header - Saved 2015/03/05 17:55:55
; (6.090014 :patc (om-make-point 24 24) (om-make-point 50 50) (om-make-point 500 400) "" 183 0 nil "2015/03/05 17:55:55")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "bpf-ff" (quote ((let ((box (om-load-boxcall (quote lispfun) "Y-POINTS" (quote y-points) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 166 192) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "PHENOTYPE" (quote om-darwin::phenotype) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 152 108) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 204 27) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 66 324) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 52 110) (om-make-point 29 30) (quote +) "+" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "APPLY" (quote apply) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" (quote +)) (om-load-inputfun (quote input-funbox) "ARG" "ARG" nil))) (om-make-point 110 243) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((1 0 0 0 nil 0) (2 0 1 0 nil 0) (5 0 3 0 nil 0) (4 0 5 0 nil 0) (0 0 5 1 nil 0))) nil 6.090014))
