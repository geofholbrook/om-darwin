; OM File Header - Saved 2015/03/16 2:28:31
; (6.0901 :patc (om-make-point 10 160) (om-make-point 46 22) (om-make-point 1238 756) "" 183 0 "2015/03/16 1:01:42" "2015/03/16 1:24:17")
; End File Header
; External resources 
; (list (list (quote :picture) "#P\"../resources/pict/swimming-all\"" "#P\"../resources/pict/m129-148 ObCl-SMALL\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "0. intro" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 457 548) (quote "on Genetic Algorithms:$$- Karl Sims: Evolved Virtual Creatures (1994)$$- Problems: n-queens, travelling salesman$$- Geof Holbrook: Future Perfect for 13 instruments (2010)$(see analysis of mm 129-148)$$$user considerations: search space, fitness function$$GA design considerations: evolutionary strategies, parameters$$$$related optimization methods: see 0.1 om-clouds 5-all-interval$$generative vs. descriptive methods") nil (om-make-point 15 106) nil (om-make-color 0 0 0) (om-make-font "Verdana" 18.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) (list (let ((newpict (make-instance (quote patch-picture) :name "swimming-all" :source (quote user) :pict-pathname (restore-pict-path (restore-path nil)) :thepict (om-get-picture "swimming-all" (quote user)) :storemode :external :draw-params (quote (p 0 0 100 100)) :extraobjs nil))) (setf (pict-pos newpict) (om-make-point 602 11)) (setf (pict-size newpict) (om-make-point 492 175)) newpict) (let ((newpict (make-instance (quote patch-picture) :name "m129-148 ObCl-SMALL" :source (quote user) :pict-pathname (restore-pict-path (restore-path nil)) :thepict (om-get-picture "m129-148 ObCl-SMALL" (quote user)) :storemode :external :draw-params (quote (p 0 0 100 100)) :extraobjs nil))) (setf (pict-pos newpict) (om-make-point 468 179)) (setf (pict-size newpict) (om-make-point 713 525)) newpict)) 6.0901))
